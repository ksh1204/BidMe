require 'xsd/qname'

# {urn:ebay:apis:eBLBaseComponents}AbstractRequestType
# abstract
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   disputeExplanation - DisputeExplanationCodeType
#   disputeReason - DisputeReasonCodeType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
class AddDisputeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeExplanation
  attr_accessor :disputeReason
  attr_accessor :itemID
  attr_accessor :transactionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeExplanation = nil, disputeReason = nil, itemID = nil, transactionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeExplanation = disputeExplanation
    @disputeReason = disputeReason
    @itemID = itemID
    @transactionID = transactionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   disputeID - (any)
#   messageText - SOAP::SOAPString
#   disputeActivity - DisputeActivityCodeType
#   shippingCarrierUsed - SOAP::SOAPString
#   shipmentTrackNumber - SOAP::SOAPString
#   shippingTime - SOAP::SOAPDateTime
class AddDisputeResponseRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :messageText
  attr_accessor :disputeActivity
  attr_accessor :shippingCarrierUsed
  attr_accessor :shipmentTrackNumber
  attr_accessor :shippingTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeID = nil, messageText = nil, disputeActivity = nil, shippingCarrierUsed = nil, shipmentTrackNumber = nil, shippingTime = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeID = disputeID
    @messageText = messageText
    @disputeActivity = disputeActivity
    @shippingCarrierUsed = shippingCarrierUsed
    @shipmentTrackNumber = shipmentTrackNumber
    @shippingTime = shippingTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   item - ItemType
class AddItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddLiveAuctionItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   item - ItemType
class AddLiveAuctionItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageAAQToPartnerRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   memberMessage - MemberMessageType
class AddMemberMessageAAQToPartnerRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRTQRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   memberMessage - MemberMessageType
class AddMemberMessageRTQRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   addMemberMessagesAAQToBidderRequestContainer - AddMemberMessagesAAQToBidderRequestContainerType
class AddMemberMessagesAAQToBidderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :addMemberMessagesAAQToBidderRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, addMemberMessagesAAQToBidderRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @addMemberMessagesAAQToBidderRequestContainer = addMemberMessagesAAQToBidderRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   order - OrderType
class AddOrderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :order

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, order = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @order = order
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   recipientBidderUserID - (any)
#   buyItNowPrice - AmountType
#   duration - SecondChanceOfferDurationCodeType
#   itemID - (any)
#   sellerMessage - SOAP::SOAPString
class AddSecondChanceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :sellerMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, recipientBidderUserID = nil, buyItNowPrice = nil, duration = nil, itemID = nil, sellerMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @duration = duration
    @itemID = itemID
    @sellerMessage = sellerMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   description - SOAP::SOAPString
class AddToItemDescriptionRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :description

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, description = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @description = description
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
class AddToWatchListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddTransactionConfirmationItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   recipientUserID - (any)
#   verifyEligibilityOnly - SOAP::SOAPString
#   recipientPostalCode - SOAP::SOAPString
#   recipientRelationType - RecipientRelationCodeType
#   negotiatedPrice - AmountType
#   listingDuration - SecondChanceOfferDurationCodeType
#   itemID - (any)
#   comments - SOAP::SOAPString
class AddTransactionConfirmationItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :recipientUserID
  attr_accessor :verifyEligibilityOnly
  attr_accessor :recipientPostalCode
  attr_accessor :recipientRelationType
  attr_accessor :negotiatedPrice
  attr_accessor :listingDuration
  attr_accessor :itemID
  attr_accessor :comments

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, recipientUserID = nil, verifyEligibilityOnly = nil, recipientPostalCode = nil, recipientRelationType = nil, negotiatedPrice = nil, listingDuration = nil, itemID = nil, comments = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @recipientUserID = recipientUserID
    @verifyEligibilityOnly = verifyEligibilityOnly
    @recipientPostalCode = recipientPostalCode
    @recipientRelationType = recipientRelationType
    @negotiatedPrice = negotiatedPrice
    @listingDuration = listingDuration
    @itemID = itemID
    @comments = comments
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApproveLiveAuctionBiddersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   userCatalogID - SOAP::SOAPInt
#   bidApproval - BidApprovalArrayType
#   approveAllPending - SOAP::SOAPBoolean
#   allApprovedBiddingLimit - AmountType
class ApproveLiveAuctionBiddersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userCatalogID
  attr_accessor :bidApproval
  attr_accessor :approveAllPending
  attr_accessor :allApprovedBiddingLimit

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userCatalogID = nil, bidApproval = nil, approveAllPending = nil, allApprovedBiddingLimit = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userCatalogID = userCatalogID
    @bidApproval = bidApproval
    @approveAllPending = approveAllPending
    @allApprovedBiddingLimit = allApprovedBiddingLimit
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   feedbackInfo - FeedbackInfoType
#   shipped - SOAP::SOAPBoolean
#   paid - SOAP::SOAPBoolean
#   listingType - ListingTypeCodeType
#   shipment - ShipmentType
#   orderID - SOAP::SOAPString
class CompleteSaleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :feedbackInfo
  attr_accessor :shipped
  attr_accessor :paid
  attr_accessor :listingType
  attr_accessor :shipment
  attr_accessor :orderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, feedbackInfo = nil, shipped = nil, paid = nil, listingType = nil, shipment = nil, orderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @feedbackInfo = feedbackInfo
    @shipped = shipped
    @paid = paid
    @listingType = listingType
    @shipment = shipment
    @orderID = orderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConfirmIdentityRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   sessionID - SOAP::SOAPString
class ConfirmIdentityRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sessionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sessionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sessionID = sessionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   alertIDs - MyMessagesAlertIDArrayType
#   messageIDs - MyMessagesMessageIDArrayType
class DeleteMyMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, alertIDs = nil, messageIDs = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   endingReason - EndReasonCodeType
#   sellerInventoryID - SOAP::SOAPString
class EndItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :endingReason
  attr_accessor :sellerInventoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, endingReason = nil, sellerInventoryID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @endingReason = endingReason
    @sellerInventoryID = sellerInventoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   secretID - SOAP::SOAPString
#   sessionID - SOAP::SOAPString
#   includeRESTToken - SOAP::SOAPBoolean
class FetchTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :secretID
  attr_accessor :sessionID
  attr_accessor :includeRESTToken

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, secretID = nil, sessionID = nil, includeRESTToken = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @secretID = secretID
    @sessionID = sessionID
    @includeRESTToken = includeRESTToken
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   accountHistorySelection - AccountHistorySelectionCodeType
#   invoiceDate - SOAP::SOAPDateTime
#   beginDate - SOAP::SOAPDateTime
#   endDate - SOAP::SOAPDateTime
#   pagination - PaginationType
#   excludeBalance - SOAP::SOAPBoolean
#   excludeSummary - SOAP::SOAPBoolean
#   accountEntrySortType - AccountEntrySortTypeCodeType
#   currency - CurrencyCodeType
#   itemID - (any)
class GetAccountRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :accountHistorySelection
  attr_accessor :invoiceDate
  attr_accessor :beginDate
  attr_accessor :endDate
  attr_accessor :pagination
  attr_accessor :excludeBalance
  attr_accessor :excludeSummary
  attr_accessor :accountEntrySortType
  attr_accessor :currency
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, accountHistorySelection = nil, invoiceDate = nil, beginDate = nil, endDate = nil, pagination = nil, excludeBalance = nil, excludeSummary = nil, accountEntrySortType = nil, currency = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @accountHistorySelection = accountHistorySelection
    @invoiceDate = invoiceDate
    @beginDate = beginDate
    @endDate = endDate
    @pagination = pagination
    @excludeBalance = excludeBalance
    @excludeSummary = excludeSummary
    @accountEntrySortType = accountEntrySortType
    @currency = currency
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   status - MessageStatusTypeCodeType
#   includeMemberMessages - SOAP::SOAPBoolean
#   startCreationTime - SOAP::SOAPDateTime
#   endCreationTime - SOAP::SOAPDateTime
class GetAdFormatLeadsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :status
  attr_accessor :includeMemberMessages
  attr_accessor :startCreationTime
  attr_accessor :endCreationTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, status = nil, includeMemberMessages = nil, startCreationTime = nil, endCreationTime = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @status = status
    @includeMemberMessages = includeMemberMessages
    @startCreationTime = startCreationTime
    @endCreationTime = endCreationTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   callMode - GetAllBiddersModeCodeType
#   includeBiddingSummary - SOAP::SOAPBoolean
class GetAllBiddersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :callMode
  attr_accessor :includeBiddingSummary

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, callMode = nil, includeBiddingSummary = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @callMode = callMode
    @includeBiddingSummary = includeBiddingSummary
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetApiAccessRulesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   attributeSystemVersion - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
#   includeCategoryMappingDetails - SOAP::SOAPBoolean
class GetAttributesCSRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID
  attr_accessor :includeCategoryMappingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, attributeSystemVersion = nil, attributeSetID = [], includeCategoryMappingDetails = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
    @includeCategoryMappingDetails = includeCategoryMappingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   fileName - SOAP::SOAPString
#   fileVersion - SOAP::SOAPString
class GetAttributesXSLRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   bestOfferID - (any)
#   bestOfferStatus - BestOfferStatusCodeType
class GetBestOffersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :bestOfferStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, bestOfferID = nil, bestOfferStatus = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @bestOfferStatus = bestOfferStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   activeItemsOnly - SOAP::SOAPBoolean
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   userID - (any)
#   granularityLevel - GranularityLevelCodeType
class GetBidderListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :activeItemsOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :userID
  attr_accessor :granularityLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, activeItemsOnly = nil, endTimeFrom = nil, endTimeTo = nil, userID = nil, granularityLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @activeItemsOnly = activeItemsOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @userID = userID
    @granularityLevel = granularityLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categorySiteID - SOAP::SOAPString
#   categoryParent - SOAP::SOAPString
#   levelLimit - SOAP::SOAPInt
#   viewAllNodes - SOAP::SOAPBoolean
class GetCategoriesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categorySiteID
  attr_accessor :categoryParent
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categorySiteID = nil, categoryParent = [], levelLimit = nil, viewAllNodes = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categorySiteID = categorySiteID
    @categoryParent = categoryParent
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
class GetCategory2CSRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :attributeSystemVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, attributeSystemVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @attributeSystemVersion = attributeSystemVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   levelLimit - SOAP::SOAPInt
#   viewAllNodes - SOAP::SOAPBoolean
#   featureID - FeatureIDCodeType
class GetCategoryFeaturesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes
  attr_accessor :featureID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, levelLimit = nil, viewAllNodes = nil, featureID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
    @featureID = featureID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryListingsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   motorsGermanySearchable - SOAP::SOAPBoolean
#   categoryID - SOAP::SOAPString
#   adFormat - SOAP::SOAPBoolean
#   freeShipping - SOAP::SOAPBoolean
#   currency - CurrencyCodeType
#   itemTypeFilter - ItemTypeFilterCodeType
#   searchType - CategoryListingsSearchCodeType
#   orderBy - CategoryListingsOrderCodeType
#   pagination - PaginationType
#   searchLocation - SearchLocationType
#   proximitySearch - ProximitySearchType
#   includeGetItFastItems - SOAP::SOAPBoolean
#   paymentMethod - PaymentMethodSearchCodeType
#   includeCondition - SOAP::SOAPBoolean
#   includeFeedback - SOAP::SOAPBoolean
#   localSearchPostalCode - SOAP::SOAPString
#   maxRelatedSearchKeywords - SOAP::SOAPInt
#   group - GroupType
#   hideDuplicateItems - SOAP::SOAPBoolean
class GetCategoryListingsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :motorsGermanySearchable
  attr_accessor :categoryID
  attr_accessor :adFormat
  attr_accessor :freeShipping
  attr_accessor :currency
  attr_accessor :itemTypeFilter
  attr_accessor :searchType
  attr_accessor :orderBy
  attr_accessor :pagination
  attr_accessor :searchLocation
  attr_accessor :proximitySearch
  attr_accessor :includeGetItFastItems
  attr_accessor :paymentMethod
  attr_accessor :includeCondition
  attr_accessor :includeFeedback
  attr_accessor :localSearchPostalCode
  attr_accessor :maxRelatedSearchKeywords
  attr_accessor :group
  attr_accessor :hideDuplicateItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, motorsGermanySearchable = nil, categoryID = nil, adFormat = nil, freeShipping = nil, currency = nil, itemTypeFilter = nil, searchType = nil, orderBy = nil, pagination = nil, searchLocation = nil, proximitySearch = nil, includeGetItFastItems = nil, paymentMethod = nil, includeCondition = nil, includeFeedback = nil, localSearchPostalCode = nil, maxRelatedSearchKeywords = nil, group = nil, hideDuplicateItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @motorsGermanySearchable = motorsGermanySearchable
    @categoryID = categoryID
    @adFormat = adFormat
    @freeShipping = freeShipping
    @currency = currency
    @itemTypeFilter = itemTypeFilter
    @searchType = searchType
    @orderBy = orderBy
    @pagination = pagination
    @searchLocation = searchLocation
    @proximitySearch = proximitySearch
    @includeGetItFastItems = includeGetItFastItems
    @paymentMethod = paymentMethod
    @includeCondition = includeCondition
    @includeFeedback = includeFeedback
    @localSearchPostalCode = localSearchPostalCode
    @maxRelatedSearchKeywords = maxRelatedSearchKeywords
    @group = group
    @hideDuplicateItems = hideDuplicateItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryVersion - SOAP::SOAPString
class GetCategoryMappingsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategorySpecificsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   lastUpdateTime - SOAP::SOAPDateTime
#   maxNames - SOAP::SOAPInt
#   maxValuesPerName - SOAP::SOAPInt
#   name - SOAP::SOAPString
class GetCategorySpecificsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastUpdateTime
  attr_accessor :maxNames
  attr_accessor :maxValuesPerName
  attr_accessor :name

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = [], lastUpdateTime = nil, maxNames = nil, maxValuesPerName = nil, name = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastUpdateTime = lastUpdateTime
    @maxNames = maxNames
    @maxValuesPerName = maxValuesPerName
    @name = name
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetChallengeTokenRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetChallengeTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   charityID - SOAP::SOAPString
#   charityName - SOAP::SOAPString
#   query - SOAP::SOAPString
#   charityRegion - SOAP::SOAPInt
#   charityDomain - SOAP::SOAPInt
#   includeDescription - SOAP::SOAPBoolean
#   matchType - StringMatchCodeType
#   featured - SOAP::SOAPBoolean
class GetCharitiesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :charityID
  attr_accessor :charityName
  attr_accessor :query
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :includeDescription
  attr_accessor :matchType
  attr_accessor :featured

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, charityID = nil, charityName = nil, query = nil, charityRegion = nil, charityDomain = nil, includeDescription = nil, matchType = nil, featured = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @charityID = charityID
    @charityName = charityName
    @query = query
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @includeDescription = includeDescription
    @matchType = matchType
    @featured = featured
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetClientAlertsAuthTokenRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetClientAlertsAuthTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetContextualKeywordsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   uRL - SOAP::SOAPAnyURI
#   encoding - SOAP::SOAPString
#   categoryID - SOAP::SOAPString
class GetContextualKeywordsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :uRL
  attr_accessor :encoding
  attr_accessor :categoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, uRL = nil, encoding = nil, categoryID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @uRL = uRL
    @encoding = encoding
    @categoryID = categoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   promotionMethod - PromotionMethodCodeType
#   promotionViewMode - TradingRoleCodeType
class GetCrossPromotionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :promotionMethod
  attr_accessor :promotionViewMode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, promotionMethod = nil, promotionViewMode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @promotionMethod = promotionMethod
    @promotionViewMode = promotionViewMode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   lastModifiedTime - SOAP::SOAPDateTime
#   motorVehicles - SOAP::SOAPBoolean
class GetDescriptionTemplatesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastModifiedTime
  attr_accessor :motorVehicles

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, lastModifiedTime = nil, motorVehicles = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastModifiedTime = lastModifiedTime
    @motorVehicles = motorVehicles
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   disputeID - (any)
class GetDisputeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   userID - (any)
#   feedbackID - SOAP::SOAPString
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   commentType - CommentTypeCodeType
#   pagination - PaginationType
class GetFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :feedbackID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :commentType
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userID = nil, feedbackID = nil, itemID = nil, transactionID = nil, commentType = [], pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userID = userID
    @feedbackID = feedbackID
    @itemID = itemID
    @transactionID = transactionID
    @commentType = commentType
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
class GetHighBiddersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   includeWatchCount - SOAP::SOAPBoolean
#   includeCrossPromotion - SOAP::SOAPBoolean
#   includeItemSpecifics - SOAP::SOAPBoolean
#   includeTaxTable - SOAP::SOAPBoolean
class GetItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :includeWatchCount
  attr_accessor :includeCrossPromotion
  attr_accessor :includeItemSpecifics
  attr_accessor :includeTaxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, includeWatchCount = nil, includeCrossPromotion = nil, includeItemSpecifics = nil, includeTaxTable = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @includeWatchCount = includeWatchCount
    @includeCrossPromotion = includeCrossPromotion
    @includeItemSpecifics = includeItemSpecifics
    @includeTaxTable = includeTaxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   getRecommendationsRequestContainer - GetRecommendationsRequestContainerType
class GetItemRecommendationsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, getRecommendationsRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @getRecommendationsRequestContainer = getRecommendationsRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   quantitySold - SOAP::SOAPInt
#   destinationPostalCode - SOAP::SOAPString
#   destinationCountryCode - CountryCodeType
class GetItemShippingRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :quantitySold
  attr_accessor :destinationPostalCode
  attr_accessor :destinationCountryCode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, quantitySold = nil, destinationPostalCode = nil, destinationCountryCode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @quantitySold = quantitySold
    @destinationPostalCode = destinationPostalCode
    @destinationCountryCode = destinationCountryCode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   transactionID - SOAP::SOAPString
#   pagination - PaginationType
#   includeFinalValueFee - SOAP::SOAPBoolean
#   includeContainingOrder - SOAP::SOAPBoolean
#   platform - TransactionPlatformCodeType
#   numberOfDays - SOAP::SOAPInt
class GetItemTransactionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :transactionID
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder
  attr_accessor :platform
  attr_accessor :numberOfDays

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, modTimeFrom = nil, modTimeTo = nil, transactionID = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil, platform = nil, numberOfDays = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @transactionID = transactionID
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
    @platform = platform
    @numberOfDays = numberOfDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   sort - ItemSortTypeCodeType
#   pagination - PaginationType
class GetItemsAwaitingFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sort
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sort = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sort = sort
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionBiddersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   userCatalogID - SOAP::SOAPInt
#   bidderStatus - BidderStatusCodeType
#   pagination - PaginationType
class GetLiveAuctionBiddersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userCatalogID
  attr_accessor :bidderStatus
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userCatalogID = nil, bidderStatus = [], pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userCatalogID = userCatalogID
    @bidderStatus = bidderStatus
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionCatalogDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetLiveAuctionCatalogDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   mailMessageType - MessageTypeCodeType
#   messageStatus - MessageStatusTypeCodeType
#   displayToPublic - SOAP::SOAPBoolean
#   startCreationTime - SOAP::SOAPDateTime
#   endCreationTime - SOAP::SOAPDateTime
#   pagination - PaginationType
#   memberMessageID - SOAP::SOAPString
#   senderID - (any)
class GetMemberMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :mailMessageType
  attr_accessor :messageStatus
  attr_accessor :displayToPublic
  attr_accessor :startCreationTime
  attr_accessor :endCreationTime
  attr_accessor :pagination
  attr_accessor :memberMessageID
  attr_accessor :senderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, mailMessageType = nil, messageStatus = nil, displayToPublic = nil, startCreationTime = nil, endCreationTime = nil, pagination = nil, memberMessageID = nil, senderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @mailMessageType = mailMessageType
    @messageStatus = messageStatus
    @displayToPublic = displayToPublic
    @startCreationTime = startCreationTime
    @endCreationTime = endCreationTime
    @pagination = pagination
    @memberMessageID = memberMessageID
    @senderID = senderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMessagePreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   sellerID - (any)
#   includeASQPreferences - SOAP::SOAPBoolean
class GetMessagePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sellerID
  attr_accessor :includeASQPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sellerID = nil, includeASQPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sellerID = sellerID
    @includeASQPreferences = includeASQPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   alertIDs - MyMessagesAlertIDArrayType
#   messageIDs - MyMessagesMessageIDArrayType
#   folderID - SOAP::SOAPLong
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   externalMessageIDs - MyMessagesExternalMessageIDArrayType
class GetMyMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs
  attr_accessor :folderID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :externalMessageIDs

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, alertIDs = nil, messageIDs = nil, folderID = nil, startTime = nil, endTime = nil, externalMessageIDs = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
    @folderID = folderID
    @startTime = startTime
    @endTime = endTime
    @externalMessageIDs = externalMessageIDs
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   watchList - ItemListCustomizationType
#   bidList - ItemListCustomizationType
#   bestOfferList - ItemListCustomizationType
#   wonList - ItemListCustomizationType
#   lostList - ItemListCustomizationType
#   favoriteSearches - MyeBaySelectionType
#   favoriteSellers - MyeBaySelectionType
#   secondChanceOffer - MyeBaySelectionType
#   bidAssistantList - BidAssistantListType
#   deletedFromWonList - ItemListCustomizationType
#   deletedFromLostList - ItemListCustomizationType
class GetMyeBayBuyingRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer
  attr_accessor :bidAssistantList
  attr_accessor :deletedFromWonList
  attr_accessor :deletedFromLostList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = nil, bidAssistantList = nil, deletedFromWonList = nil, deletedFromLostList = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
    @bidAssistantList = bidAssistantList
    @deletedFromWonList = deletedFromWonList
    @deletedFromLostList = deletedFromLostList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   buyingReminders - ReminderCustomizationType
#   sellingReminders - ReminderCustomizationType
class GetMyeBayRemindersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, buyingReminders = nil, sellingReminders = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   scheduledList - ItemListCustomizationType
#   activeList - ItemListCustomizationType
#   soldList - ItemListCustomizationType
#   unsoldList - ItemListCustomizationType
#   bidList - ItemListCustomizationType
#   deletedFromSoldList - ItemListCustomizationType
#   deletedFromUnsoldList - ItemListCustomizationType
class GetMyeBaySellingRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList
  attr_accessor :bidList
  attr_accessor :deletedFromSoldList
  attr_accessor :deletedFromUnsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil, bidList = nil, deletedFromSoldList = nil, deletedFromUnsoldList = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
    @bidList = bidList
    @deletedFromSoldList = deletedFromSoldList
    @deletedFromUnsoldList = deletedFromUnsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   preferenceLevel - NotificationRoleCodeType
class GetNotificationPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :preferenceLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, preferenceLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @preferenceLevel = preferenceLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationsUsageRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   itemID - (any)
class GetNotificationsUsageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, startTime = nil, endTime = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrderTransactionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemTransactionIDArray - ItemTransactionIDArrayType
#   orderIDArray - OrderIDArrayType
#   platform - TransactionPlatformCodeType
#   includeFinalValueFees - SOAP::SOAPBoolean
class GetOrderTransactionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemTransactionIDArray
  attr_accessor :orderIDArray
  attr_accessor :platform
  attr_accessor :includeFinalValueFees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemTransactionIDArray = nil, orderIDArray = nil, platform = nil, includeFinalValueFees = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemTransactionIDArray = itemTransactionIDArray
    @orderIDArray = orderIDArray
    @platform = platform
    @includeFinalValueFees = includeFinalValueFees
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   orderIDArray - OrderIDArrayType
#   createTimeFrom - SOAP::SOAPDateTime
#   createTimeTo - SOAP::SOAPDateTime
#   orderRole - TradingRoleCodeType
#   orderStatus - OrderStatusCodeType
#   listingType - ListingTypeCodeType
#   pagination - PaginationType
class GetOrdersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :orderIDArray
  attr_accessor :createTimeFrom
  attr_accessor :createTimeTo
  attr_accessor :orderRole
  attr_accessor :orderStatus
  attr_accessor :listingType
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, orderIDArray = nil, createTimeFrom = nil, createTimeTo = nil, orderRole = nil, orderStatus = nil, listingType = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @orderIDArray = orderIDArray
    @createTimeFrom = createTimeFrom
    @createTimeTo = createTimeTo
    @orderRole = orderRole
    @orderStatus = orderStatus
    @listingType = listingType
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   folderID - SOAP::SOAPInt
#   pictureURL - SOAP::SOAPString
#   pictureManagerDetailLevel - PictureManagerDetailLevelCodeType
class GetPictureManagerDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folderID
  attr_accessor :pictureURL
  attr_accessor :pictureManagerDetailLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folderID = nil, pictureURL = nil, pictureManagerDetailLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folderID = folderID
    @pictureURL = pictureURL
    @pictureManagerDetailLevel = pictureManagerDetailLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetPictureManagerOptionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPopularKeywordsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   includeChildCategories - SOAP::SOAPBoolean
#   maxKeywordsRetrieved - SOAP::SOAPInt
#   pagination - PaginationType
class GetPopularKeywordsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :includeChildCategories
  attr_accessor :maxKeywordsRetrieved
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = [], includeChildCategories = nil, maxKeywordsRetrieved = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @includeChildCategories = includeChildCategories
    @maxKeywordsRetrieved = maxKeywordsRetrieved
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   productSearch - ProductSearchType
class GetProductFamilyMembersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   attributeSystemVersion - SOAP::SOAPString
#   productFinderID - SOAP::SOAPInt
class GetProductFinderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, attributeSystemVersion = nil, productFinderID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderID = productFinderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   fileName - SOAP::SOAPString
#   fileVersion - SOAP::SOAPString
class GetProductFinderXSLRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   attributeSystemVersion - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
class GetProductSearchPageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, attributeSystemVersion = nil, attributeSetID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   productSearch - ProductSearchType
class GetProductSearchResultsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   useCase - ProductUseCaseCodeType
#   product - ProductType
class GetProductSellingPagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :useCase
  attr_accessor :product

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, useCase = nil, product = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @useCase = useCase
    @product = product
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   productSearch - ProductSearchType
#   productSort - ProductSortCodeType
#   includeItemArray - SOAP::SOAPBoolean
#   includeReviewDetails - SOAP::SOAPBoolean
#   includeBuyingGuideDetails - SOAP::SOAPBoolean
#   includeHistogram - SOAP::SOAPBoolean
#   affiliateTrackingDetails - AffiliateTrackingDetailsType
#   hideDuplicateItems - SOAP::SOAPBoolean
class GetProductsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :productSearch
  attr_accessor :productSort
  attr_accessor :includeItemArray
  attr_accessor :includeReviewDetails
  attr_accessor :includeBuyingGuideDetails
  attr_accessor :includeHistogram
  attr_accessor :affiliateTrackingDetails
  attr_accessor :hideDuplicateItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, productSearch = nil, productSort = nil, includeItemArray = nil, includeReviewDetails = nil, includeBuyingGuideDetails = nil, includeHistogram = nil, affiliateTrackingDetails = nil, hideDuplicateItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @productSearch = productSearch
    @productSort = productSort
    @includeItemArray = includeItemArray
    @includeReviewDetails = includeReviewDetails
    @includeBuyingGuideDetails = includeBuyingGuideDetails
    @includeHistogram = includeHistogram
    @affiliateTrackingDetails = affiliateTrackingDetails
    @hideDuplicateItems = hideDuplicateItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   storeCategoryID - SOAP::SOAPLong
#   promotionMethod - PromotionMethodCodeType
class GetPromotionRulesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :storeCategoryID
  attr_accessor :promotionMethod

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, storeCategoryID = nil, promotionMethod = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @storeCategoryID = storeCategoryID
    @promotionMethod = promotionMethod
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionalSaleDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   promotionalSaleID - SOAP::SOAPLong
class GetPromotionalSaleDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :promotionalSaleID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, promotionalSaleID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @promotionalSaleID = promotionalSaleID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   motorsGermanySearchable - SOAP::SOAPBoolean
#   query - SOAP::SOAPString
#   categoryID - SOAP::SOAPString
#   searchFlags - SearchFlagsCodeType
#   priceRangeFilter - PriceRangeFilterType
#   proximitySearch - ProximitySearchType
#   itemTypeFilter - ItemTypeFilterCodeType
#   searchType - SearchTypeCodeType
#   userIdFilter - UserIdFilterType
#   searchLocationFilter - SearchLocationFilterType
#   storeSearchFilter - SearchStoreFilterType
#   order - SearchSortOrderCodeType
#   pagination - PaginationType
#   searchRequest - SearchRequestType
#   productID - SOAP::SOAPString
#   externalProductID - ExternalProductIDType
#   categories - RequestCategoriesType
#   totalOnly - SOAP::SOAPBoolean
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   modTimeFrom - SOAP::SOAPDateTime
#   includeGetItFastItems - SOAP::SOAPBoolean
#   paymentMethod - PaymentMethodSearchCodeType
#   granularityLevel - GranularityLevelCodeType
#   expandSearch - SOAP::SOAPBoolean
#   lot - SOAP::SOAPBoolean
#   adFormat - SOAP::SOAPBoolean
#   freeShipping - SOAP::SOAPBoolean
#   quantity - SOAP::SOAPInt
#   quantityOperator - QuantityOperatorCodeType
#   sellerBusinessType - SellerBusinessCodeType
#   includeCondition - SOAP::SOAPBoolean
#   includeFeedback - SOAP::SOAPBoolean
#   charityID - SOAP::SOAPInt
#   localSearchPostalCode - SOAP::SOAPString
#   maxRelatedSearchKeywords - SOAP::SOAPInt
#   affiliateTrackingDetails - AffiliateTrackingDetailsType
#   bidRange - BidRangeType
#   itemCondition - ItemConditionCodeType
#   ticketFinder - TicketDetailsType
#   group - GroupType
#   hideDuplicateItems - SOAP::SOAPBoolean
class GetSearchResultsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :motorsGermanySearchable
  attr_accessor :query
  attr_accessor :categoryID
  attr_accessor :searchFlags
  attr_accessor :priceRangeFilter
  attr_accessor :proximitySearch
  attr_accessor :itemTypeFilter
  attr_accessor :searchType
  attr_accessor :userIdFilter
  attr_accessor :searchLocationFilter
  attr_accessor :storeSearchFilter
  attr_accessor :order
  attr_accessor :pagination
  attr_accessor :searchRequest
  attr_accessor :productID
  attr_accessor :externalProductID
  attr_accessor :categories
  attr_accessor :totalOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :includeGetItFastItems
  attr_accessor :paymentMethod
  attr_accessor :granularityLevel
  attr_accessor :expandSearch
  attr_accessor :lot
  attr_accessor :adFormat
  attr_accessor :freeShipping
  attr_accessor :quantity
  attr_accessor :quantityOperator
  attr_accessor :sellerBusinessType
  attr_accessor :includeCondition
  attr_accessor :includeFeedback
  attr_accessor :charityID
  attr_accessor :localSearchPostalCode
  attr_accessor :maxRelatedSearchKeywords
  attr_accessor :affiliateTrackingDetails
  attr_accessor :bidRange
  attr_accessor :itemCondition
  attr_accessor :ticketFinder
  attr_accessor :group
  attr_accessor :hideDuplicateItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, motorsGermanySearchable = nil, query = nil, categoryID = nil, searchFlags = [], priceRangeFilter = nil, proximitySearch = nil, itemTypeFilter = nil, searchType = nil, userIdFilter = nil, searchLocationFilter = nil, storeSearchFilter = nil, order = nil, pagination = nil, searchRequest = nil, productID = nil, externalProductID = nil, categories = nil, totalOnly = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, includeGetItFastItems = nil, paymentMethod = nil, granularityLevel = nil, expandSearch = nil, lot = nil, adFormat = nil, freeShipping = nil, quantity = nil, quantityOperator = nil, sellerBusinessType = nil, includeCondition = nil, includeFeedback = nil, charityID = nil, localSearchPostalCode = nil, maxRelatedSearchKeywords = nil, affiliateTrackingDetails = nil, bidRange = nil, itemCondition = nil, ticketFinder = nil, group = nil, hideDuplicateItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @motorsGermanySearchable = motorsGermanySearchable
    @query = query
    @categoryID = categoryID
    @searchFlags = searchFlags
    @priceRangeFilter = priceRangeFilter
    @proximitySearch = proximitySearch
    @itemTypeFilter = itemTypeFilter
    @searchType = searchType
    @userIdFilter = userIdFilter
    @searchLocationFilter = searchLocationFilter
    @storeSearchFilter = storeSearchFilter
    @order = order
    @pagination = pagination
    @searchRequest = searchRequest
    @productID = productID
    @externalProductID = externalProductID
    @categories = categories
    @totalOnly = totalOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @includeGetItFastItems = includeGetItFastItems
    @paymentMethod = paymentMethod
    @granularityLevel = granularityLevel
    @expandSearch = expandSearch
    @lot = lot
    @adFormat = adFormat
    @freeShipping = freeShipping
    @quantity = quantity
    @quantityOperator = quantityOperator
    @sellerBusinessType = sellerBusinessType
    @includeCondition = includeCondition
    @includeFeedback = includeFeedback
    @charityID = charityID
    @localSearchPostalCode = localSearchPostalCode
    @maxRelatedSearchKeywords = maxRelatedSearchKeywords
    @affiliateTrackingDetails = affiliateTrackingDetails
    @bidRange = bidRange
    @itemCondition = itemCondition
    @ticketFinder = ticketFinder
    @group = group
    @hideDuplicateItems = hideDuplicateItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerDashboardRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetSellerDashboardRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   userID - (any)
#   startTimeFrom - SOAP::SOAPDateTime
#   startTimeTo - SOAP::SOAPDateTime
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   newItemFilter - SOAP::SOAPBoolean
#   includeWatchCount - SOAP::SOAPBoolean
class GetSellerEventsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :newItemFilter
  attr_accessor :includeWatchCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userID = nil, startTimeFrom = nil, startTimeTo = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, modTimeTo = nil, newItemFilter = nil, includeWatchCount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userID = userID
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @newItemFilter = newItemFilter
    @includeWatchCount = includeWatchCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   userID - (any)
#   motorsDealerUsers - UserIDArrayType
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   sort - SOAP::SOAPInt
#   startTimeFrom - SOAP::SOAPDateTime
#   startTimeTo - SOAP::SOAPDateTime
#   pagination - PaginationType
#   granularityLevel - GranularityLevelCodeType
#   sKUArray - SKUArrayType
#   includeWatchCount - SOAP::SOAPBoolean
#   adminEndedItemsOnly - SOAP::SOAPBoolean
#   categoryID - SOAP::SOAPInt
class GetSellerListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :motorsDealerUsers
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :sort
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :pagination
  attr_accessor :granularityLevel
  attr_accessor :sKUArray
  attr_accessor :includeWatchCount
  attr_accessor :adminEndedItemsOnly
  attr_accessor :categoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userID = nil, motorsDealerUsers = nil, endTimeFrom = nil, endTimeTo = nil, sort = nil, startTimeFrom = nil, startTimeTo = nil, pagination = nil, granularityLevel = nil, sKUArray = nil, includeWatchCount = nil, adminEndedItemsOnly = nil, categoryID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userID = userID
    @motorsDealerUsers = motorsDealerUsers
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @sort = sort
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @pagination = pagination
    @granularityLevel = granularityLevel
    @sKUArray = sKUArray
    @includeWatchCount = includeWatchCount
    @adminEndedItemsOnly = adminEndedItemsOnly
    @categoryID = categoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   paymentStatus - RCSPaymentStatusCodeType
#   paymentTimeFrom - SOAP::SOAPDateTime
#   paymentTimeTo - SOAP::SOAPDateTime
#   pagination - PaginationType
class GetSellerPaymentsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :paymentStatus
  attr_accessor :paymentTimeFrom
  attr_accessor :paymentTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, paymentStatus = nil, paymentTimeFrom = nil, paymentTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @paymentStatus = paymentStatus
    @paymentTimeFrom = paymentTimeFrom
    @paymentTimeTo = paymentTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   pagination - PaginationType
#   includeFinalValueFee - SOAP::SOAPBoolean
#   includeContainingOrder - SOAP::SOAPBoolean
#   sKUArray - SKUArrayType
#   platform - TransactionPlatformCodeType
#   numberOfDays - SOAP::SOAPInt
class GetSellerTransactionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder
  attr_accessor :sKUArray
  attr_accessor :platform
  attr_accessor :numberOfDays

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil, sKUArray = nil, platform = nil, numberOfDays = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
    @sKUArray = sKUArray
    @platform = platform
    @numberOfDays = numberOfDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSessionIDRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   ruName - SOAP::SOAPString
class GetSessionIDRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :ruName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, ruName = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @ruName = ruName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetShippingDiscountProfilesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetShippingDiscountProfilesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryStructureOnly - SOAP::SOAPBoolean
#   rootCategoryID - SOAP::SOAPLong
#   levelLimit - SOAP::SOAPInt
#   userID - (any)
class GetStoreRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryStructureOnly
  attr_accessor :rootCategoryID
  attr_accessor :levelLimit
  attr_accessor :userID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryStructureOnly = nil, rootCategoryID = nil, levelLimit = nil, userID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryStructureOnly = categoryStructureOnly
    @rootCategoryID = rootCategoryID
    @levelLimit = levelLimit
    @userID = userID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCategoryUpdateStatusRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   taskID - SOAP::SOAPLong
class GetStoreCategoryUpdateStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :taskID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, taskID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @taskID = taskID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   pageID - SOAP::SOAPLong
class GetStoreCustomPageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pageID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pageID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pageID = pageID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetStoreOptionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetStorePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   query - SOAP::SOAPString
class GetSuggestedCategoriesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :query

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, query = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @query = query
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetTaxTableRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTokenStatusRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GetTokenStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   userID - SOAP::SOAPString
#   includeExpressRequirements - SOAP::SOAPBoolean
class GetUserRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :userID
  attr_accessor :includeExpressRequirements

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, userID = nil, includeExpressRequirements = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @userID = userID
    @includeExpressRequirements = includeExpressRequirements
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserContactDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - SOAP::SOAPString
#   contactID - SOAP::SOAPString
#   requesterID - SOAP::SOAPString
class GetUserContactDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :contactID
  attr_accessor :requesterID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, contactID = nil, requesterID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @contactID = contactID
    @requesterID = requesterID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   disputeFilterType - DisputeFilterTypeCodeType
#   disputeSortType - DisputeSortTypeCodeType
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   pagination - PaginationType
class GetUserDisputesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeFilterType
  attr_accessor :disputeSortType
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeFilterType = nil, disputeSortType = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeFilterType = disputeFilterType
    @disputeSortType = disputeSortType
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   showBidderNoticePreferences - SOAP::SOAPBoolean
#   showCombinedPaymentPreferences - SOAP::SOAPBoolean
#   showCrossPromotionPreferences - SOAP::SOAPBoolean
#   showSellerPaymentPreferences - SOAP::SOAPBoolean
#   showEndOfAuctionEmailPreferences - SOAP::SOAPBoolean
#   showSellerFavoriteItemPreferences - SOAP::SOAPBoolean
#   showProStoresPreferences - SOAP::SOAPBoolean
#   showEmailShipmentTrackingNumberPreference - SOAP::SOAPBoolean
class GetUserPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :showBidderNoticePreferences
  attr_accessor :showCombinedPaymentPreferences
  attr_accessor :showCrossPromotionPreferences
  attr_accessor :showSellerPaymentPreferences
  attr_accessor :showEndOfAuctionEmailPreferences
  attr_accessor :showSellerFavoriteItemPreferences
  attr_accessor :showProStoresPreferences
  attr_accessor :showEmailShipmentTrackingNumberPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, showBidderNoticePreferences = nil, showCombinedPaymentPreferences = nil, showCrossPromotionPreferences = nil, showSellerPaymentPreferences = nil, showEndOfAuctionEmailPreferences = nil, showSellerFavoriteItemPreferences = nil, showProStoresPreferences = nil, showEmailShipmentTrackingNumberPreference = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @showBidderNoticePreferences = showBidderNoticePreferences
    @showCombinedPaymentPreferences = showCombinedPaymentPreferences
    @showCrossPromotionPreferences = showCrossPromotionPreferences
    @showSellerPaymentPreferences = showSellerPaymentPreferences
    @showEndOfAuctionEmailPreferences = showEndOfAuctionEmailPreferences
    @showSellerFavoriteItemPreferences = showSellerFavoriteItemPreferences
    @showProStoresPreferences = showProStoresPreferences
    @showEmailShipmentTrackingNumberPreference = showEmailShipmentTrackingNumberPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReasonCodeDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   reasonCodeID - SOAP::SOAPLong
#   returnAllSites - SOAP::SOAPBoolean
class GetVeROReasonCodeDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :reasonCodeID
  attr_accessor :returnAllSites

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, reasonCodeID = nil, returnAllSites = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @reasonCodeID = reasonCodeID
    @returnAllSites = returnAllSites
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReportStatusRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   veROReportPacketID - SOAP::SOAPLong
#   itemID - (any)
#   includeReportedItemDetails - SOAP::SOAPBoolean
#   timeFrom - SOAP::SOAPDateTime
#   timeTo - SOAP::SOAPDateTime
#   pagination - PaginationType
class GetVeROReportStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :veROReportPacketID
  attr_accessor :itemID
  attr_accessor :includeReportedItemDetails
  attr_accessor :timeFrom
  attr_accessor :timeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, veROReportPacketID = nil, itemID = nil, includeReportedItemDetails = nil, timeFrom = nil, timeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @veROReportPacketID = veROReportPacketID
    @itemID = itemID
    @includeReportedItemDetails = includeReportedItemDetails
    @timeFrom = timeFrom
    @timeTo = timeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   postID - (any)
class GetWantItNowPostRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   query - SOAP::SOAPString
#   searchInDescription - SOAP::SOAPBoolean
#   searchWorldwide - SOAP::SOAPBoolean
#   pagination - PaginationType
class GetWantItNowSearchResultsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :query
  attr_accessor :searchInDescription
  attr_accessor :searchWorldwide
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, query = nil, searchInDescription = nil, searchWorldwide = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @query = query
    @searchInDescription = searchInDescription
    @searchWorldwide = searchWorldwide
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   detailName - DetailNameCodeType
class GeteBayDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :detailName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, detailName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @detailName = detailName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
class GeteBayOfficialTimeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   refundReason - RefundReasonCodeType
#   refundType - RefundTypeCodeType
#   refundAmount - AmountType
#   refundMessage - SOAP::SOAPString
class IssueRefundRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :refundReason
  attr_accessor :refundType
  attr_accessor :refundAmount
  attr_accessor :refundMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, refundReason = nil, refundType = nil, refundAmount = nil, refundMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @refundReason = refundReason
    @refundType = refundType
    @refundAmount = refundAmount
    @refundMessage = refundMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   commentText - SOAP::SOAPString
#   commentType - CommentTypeCodeType
#   transactionID - SOAP::SOAPString
#   targetUser - (any)
#   sellerItemRatingDetailArray - ItemRatingDetailArrayType
class LeaveFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :transactionID
  attr_accessor :targetUser
  attr_accessor :sellerItemRatingDetailArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, commentText = nil, commentType = nil, transactionID = nil, targetUser = nil, sellerItemRatingDetailArray = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @commentText = commentText
    @commentType = commentType
    @transactionID = transactionID
    @targetUser = targetUser
    @sellerItemRatingDetailArray = sellerItemRatingDetailArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}PlaceOfferRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   offer - OfferType
#   itemID - (any)
#   blockOnWarning - SOAP::SOAPBoolean
#   affiliateTrackingDetails - AffiliateTrackingDetailsType
class PlaceOfferRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :offer
  attr_accessor :itemID
  attr_accessor :blockOnWarning
  attr_accessor :affiliateTrackingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, offer = nil, itemID = nil, blockOnWarning = nil, affiliateTrackingDetails = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @offer = offer
    @itemID = itemID
    @blockOnWarning = blockOnWarning
    @affiliateTrackingDetails = affiliateTrackingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   item - ItemType
#   deletedField - SOAP::SOAPString
class RelistItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   removeAllItems - SOAP::SOAPBoolean
class RemoveFromWatchListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :removeAllItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = [], removeAllItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @removeAllItems = removeAllItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   bestOfferID - (any)
#   action - BestOfferActionCodeType
#   sellerResponse - SOAP::SOAPString
#   counterOfferPrice - AmountType
#   counterOfferQuantity - SOAP::SOAPInt
class RespondToBestOfferRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :action
  attr_accessor :sellerResponse
  attr_accessor :counterOfferPrice
  attr_accessor :counterOfferQuantity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, bestOfferID = [], action = nil, sellerResponse = nil, counterOfferPrice = nil, counterOfferQuantity = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @action = action
    @sellerResponse = sellerResponse
    @counterOfferPrice = counterOfferPrice
    @counterOfferQuantity = counterOfferQuantity
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   feedbackID - SOAP::SOAPString
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   targetUserID - (any)
#   responseType - FeedbackResponseCodeType
#   responseText - SOAP::SOAPString
class RespondToFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :feedbackID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :targetUserID
  attr_accessor :responseType
  attr_accessor :responseText

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, feedbackID = nil, itemID = nil, transactionID = nil, targetUserID = nil, responseType = nil, responseText = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @feedbackID = feedbackID
    @itemID = itemID
    @transactionID = transactionID
    @targetUserID = targetUserID
    @responseType = responseType
    @responseText = responseText
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   postID - (any)
class RespondToWantItNowPostRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - SOAP::SOAPString
#   amountPaid - AmountType
#   paymentMethodUsed - BuyerPaymentMethodCodeType
#   checkoutStatus - CompleteStatusCodeType
#   shippingService - SOAP::SOAPToken
#   shippingIncludedInTax - SOAP::SOAPBoolean
#   checkoutMethod - CheckoutMethodCodeType
#   insuranceType - InsuranceSelectedCodeType
#   paymentStatus - RCSPaymentStatusCodeType
#   adjustmentAmount - AmountType
#   shippingAddress - AddressType
#   buyerID - SOAP::SOAPString
#   shippingInsuranceCost - AmountType
#   salesTax - AmountType
#   shippingCost - AmountType
#   encryptedID - SOAP::SOAPString
#   externalTransaction - ExternalTransactionType
#   multipleSellerPaymentID - SOAP::SOAPString
#   cODCost - AmountType
class ReviseCheckoutStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :amountPaid
  attr_accessor :paymentMethodUsed
  attr_accessor :checkoutStatus
  attr_accessor :shippingService
  attr_accessor :shippingIncludedInTax
  attr_accessor :checkoutMethod
  attr_accessor :insuranceType
  attr_accessor :paymentStatus
  attr_accessor :adjustmentAmount
  attr_accessor :shippingAddress
  attr_accessor :buyerID
  attr_accessor :shippingInsuranceCost
  attr_accessor :salesTax
  attr_accessor :shippingCost
  attr_accessor :encryptedID
  attr_accessor :externalTransaction
  attr_accessor :multipleSellerPaymentID
  attr_accessor :cODCost

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, amountPaid = nil, paymentMethodUsed = nil, checkoutStatus = nil, shippingService = nil, shippingIncludedInTax = nil, checkoutMethod = nil, insuranceType = nil, paymentStatus = nil, adjustmentAmount = nil, shippingAddress = nil, buyerID = nil, shippingInsuranceCost = nil, salesTax = nil, shippingCost = nil, encryptedID = nil, externalTransaction = nil, multipleSellerPaymentID = nil, cODCost = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @amountPaid = amountPaid
    @paymentMethodUsed = paymentMethodUsed
    @checkoutStatus = checkoutStatus
    @shippingService = shippingService
    @shippingIncludedInTax = shippingIncludedInTax
    @checkoutMethod = checkoutMethod
    @insuranceType = insuranceType
    @paymentStatus = paymentStatus
    @adjustmentAmount = adjustmentAmount
    @shippingAddress = shippingAddress
    @buyerID = buyerID
    @shippingInsuranceCost = shippingInsuranceCost
    @salesTax = salesTax
    @shippingCost = shippingCost
    @encryptedID = encryptedID
    @externalTransaction = externalTransaction
    @multipleSellerPaymentID = multipleSellerPaymentID
    @cODCost = cODCost
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   item - ItemType
#   deletedField - SOAP::SOAPString
class ReviseItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseLiveAuctionItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   item - ItemType
#   deletedField - SOAP::SOAPString
class ReviseLiveAuctionItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   messageIDs - MyMessagesMessageIDArrayType
#   alertIDs - MyMessagesAlertIDArrayType
#   read - SOAP::SOAPBoolean
#   flagged - SOAP::SOAPBoolean
#   folderID - SOAP::SOAPLong
class ReviseMyMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :messageIDs
  attr_accessor :alertIDs
  attr_accessor :read
  attr_accessor :flagged
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, messageIDs = nil, alertIDs = nil, read = nil, flagged = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @messageIDs = messageIDs
    @alertIDs = alertIDs
    @read = read
    @flagged = flagged
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   operation - MyMessagesFolderOperationCodeType
#   folderID - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
class ReviseMyMessagesFoldersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :operation
  attr_accessor :folderID
  attr_accessor :folderName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, operation = nil, folderID = [], folderName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @operation = operation
    @folderID = folderID
    @folderName = folderName
  end
end

# {urn:ebay:apis:eBLBaseComponents}RevokeTokenRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   unsubscribeNotification - SOAP::SOAPBoolean
class RevokeTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :unsubscribeNotification

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, unsubscribeNotification = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @unsubscribeNotification = unsubscribeNotification
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   disputeID - (any)
#   disputeResolutionReason - DisputeResolutionReasonCodeType
class SellerReverseDisputeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :disputeResolutionReason

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeID = nil, disputeResolutionReason = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeID = disputeID
    @disputeResolutionReason = disputeResolutionReason
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - (any)
#   internationalShippingServiceOptions - InternationalShippingServiceOptionsType
#   shippingServiceOptions - ShippingServiceOptionsType
#   salesTax - SalesTaxType
#   insuranceOption - InsuranceOptionCodeType
#   insuranceFee - AmountType
#   paymentMethods - BuyerPaymentMethodCodeType
#   payPalEmailAddress - SOAP::SOAPString
#   checkoutInstructions - SOAP::SOAPString
#   emailCopyToSeller - SOAP::SOAPBoolean
#   cODCost - AmountType
class SendInvoiceRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :internationalShippingServiceOptions
  attr_accessor :shippingServiceOptions
  attr_accessor :salesTax
  attr_accessor :insuranceOption
  attr_accessor :insuranceFee
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :checkoutInstructions
  attr_accessor :emailCopyToSeller
  attr_accessor :cODCost

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, internationalShippingServiceOptions = [], shippingServiceOptions = [], salesTax = nil, insuranceOption = nil, insuranceFee = nil, paymentMethods = [], payPalEmailAddress = nil, checkoutInstructions = nil, emailCopyToSeller = nil, cODCost = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @internationalShippingServiceOptions = internationalShippingServiceOptions
    @shippingServiceOptions = shippingServiceOptions
    @salesTax = salesTax
    @insuranceOption = insuranceOption
    @insuranceFee = insuranceFee
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @checkoutInstructions = checkoutInstructions
    @emailCopyToSeller = emailCopyToSeller
    @cODCost = cODCost
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetMessagePreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   aSQPreferences - ASQPreferencesType
class SetMessagePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :aSQPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, aSQPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @aSQPreferences = aSQPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   applicationDeliveryPreferences - ApplicationDeliveryPreferencesType
#   userDeliveryPreferenceArray - NotificationEnableArrayType
#   userData - NotificationUserDataType
#   eventProperty - NotificationEventPropertyType
#   deliveryURLName - SOAP::SOAPString
class SetNotificationPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :userDeliveryPreferenceArray
  attr_accessor :userData
  attr_accessor :eventProperty
  attr_accessor :deliveryURLName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, applicationDeliveryPreferences = nil, userDeliveryPreferenceArray = nil, userData = nil, eventProperty = [], deliveryURLName = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
    @userData = userData
    @eventProperty = eventProperty
    @deliveryURLName = deliveryURLName
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   pictureManagerDetails - PictureManagerDetailsType
#   action - PictureManagerActionCodeType
class SetPictureManagerDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails
  attr_accessor :action

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pictureManagerDetails = nil, action = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
    @action = action
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   action - ModifyActionCodeType
#   promotionalSaleDetails - PromotionalSaleType
class SetPromotionalSaleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :action
  attr_accessor :promotionalSaleDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, action = nil, promotionalSaleDetails = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @action = action
    @promotionalSaleDetails = promotionalSaleDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleListingsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   promotionalSaleID - SOAP::SOAPLong
#   action - ModifyActionCodeType
#   promotionalSaleItemIDArray - ItemIDArrayType
#   storeCategoryID - SOAP::SOAPLong
#   categoryID - SOAP::SOAPLong
#   allFixedPriceItems - SOAP::SOAPBoolean
#   allStoreInventoryItems - SOAP::SOAPBoolean
#   allAuctionItems - SOAP::SOAPBoolean
class SetPromotionalSaleListingsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :promotionalSaleID
  attr_accessor :action
  attr_accessor :promotionalSaleItemIDArray
  attr_accessor :storeCategoryID
  attr_accessor :categoryID
  attr_accessor :allFixedPriceItems
  attr_accessor :allStoreInventoryItems
  attr_accessor :allAuctionItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, promotionalSaleID = nil, action = nil, promotionalSaleItemIDArray = nil, storeCategoryID = nil, categoryID = nil, allFixedPriceItems = nil, allStoreInventoryItems = nil, allAuctionItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @promotionalSaleID = promotionalSaleID
    @action = action
    @promotionalSaleItemIDArray = promotionalSaleItemIDArray
    @storeCategoryID = storeCategoryID
    @categoryID = categoryID
    @allFixedPriceItems = allFixedPriceItems
    @allStoreInventoryItems = allStoreInventoryItems
    @allAuctionItems = allAuctionItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerFeedbackOptionsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   automatedLeaveFeedbackEvent - AutomatedLeaveFeedbackEventCodeType
#   storedComments - FeedbackCommentArrayType
class SetSellingManagerFeedbackOptionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :automatedLeaveFeedbackEvent
  attr_accessor :storedComments

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, automatedLeaveFeedbackEvent = nil, storedComments = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @automatedLeaveFeedbackEvent = automatedLeaveFeedbackEvent
    @storedComments = storedComments
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetShippingDiscountProfilesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   currencyID - CurrencyCodeType
#   combinedDuration - CombinedPaymentPeriodCodeType
#   modifyActionCode - ModifyActionCodeType
#   flatShippingDiscount - FlatShippingDiscountType
#   calculatedShippingDiscount - CalculatedShippingDiscountType
#   calculatedHandlingDiscount - CalculatedHandlingDiscountType
#   promotionalShippingDiscountDetails - PromotionalShippingDiscountDetailsType
#   shippingInsurance - ShippingInsuranceType
#   internationalShippingInsurance - ShippingInsuranceType
class SetShippingDiscountProfilesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :currencyID
  attr_accessor :combinedDuration
  attr_accessor :modifyActionCode
  attr_accessor :flatShippingDiscount
  attr_accessor :calculatedShippingDiscount
  attr_accessor :calculatedHandlingDiscount
  attr_accessor :promotionalShippingDiscountDetails
  attr_accessor :shippingInsurance
  attr_accessor :internationalShippingInsurance

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, currencyID = nil, combinedDuration = nil, modifyActionCode = nil, flatShippingDiscount = nil, calculatedShippingDiscount = nil, calculatedHandlingDiscount = nil, promotionalShippingDiscountDetails = nil, shippingInsurance = nil, internationalShippingInsurance = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @currencyID = currencyID
    @combinedDuration = combinedDuration
    @modifyActionCode = modifyActionCode
    @flatShippingDiscount = flatShippingDiscount
    @calculatedShippingDiscount = calculatedShippingDiscount
    @calculatedHandlingDiscount = calculatedHandlingDiscount
    @promotionalShippingDiscountDetails = promotionalShippingDiscountDetails
    @shippingInsurance = shippingInsurance
    @internationalShippingInsurance = internationalShippingInsurance
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   store - StoreType
class SetStoreRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, store = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCategoriesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   action - StoreCategoryUpdateActionCodeType
#   itemDestinationCategoryID - SOAP::SOAPLong
#   destinationParentCategoryID - SOAP::SOAPLong
#   storeCategories - StoreCustomCategoryArrayType
class SetStoreCategoriesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :action
  attr_accessor :itemDestinationCategoryID
  attr_accessor :destinationParentCategoryID
  attr_accessor :storeCategories

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, action = nil, itemDestinationCategoryID = nil, destinationParentCategoryID = nil, storeCategories = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @action = action
    @itemDestinationCategoryID = itemDestinationCategoryID
    @destinationParentCategoryID = destinationParentCategoryID
    @storeCategories = storeCategories
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   customPage - StoreCustomPageType
class SetStoreCustomPageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, customPage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   storePreferences - StorePreferencesType
class SetStorePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, storePreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   taxTable - TaxTableType
class SetTaxTableRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, taxTable = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   itemID - (any)
#   action - SetUserNotesActionCodeType
#   noteText - SOAP::SOAPString
#   transactionID - SOAP::SOAPString
class SetUserNotesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :action
  attr_accessor :noteText
  attr_accessor :transactionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, action = nil, noteText = nil, transactionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @action = action
    @noteText = noteText
    @transactionID = transactionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   bidderNoticePreferences - BidderNoticePreferencesType
#   combinedPaymentPreferences - CombinedPaymentPreferencesType
#   crossPromotionPreferences - CrossPromotionPreferencesType
#   sellerPaymentPreferences - SellerPaymentPreferencesType
#   sellerFavoriteItemPreferences - SellerFavoriteItemPreferencesType
#   endOfAuctionEmailPreferences - EndOfAuctionEmailPreferencesType
#   emailShipmentTrackingNumberPreference - SOAP::SOAPBoolean
class SetUserPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences
  attr_accessor :emailShipmentTrackingNumberPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil, emailShipmentTrackingNumberPreference = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
    @emailShipmentTrackingNumberPreference = emailShipmentTrackingNumberPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}UploadSiteHostedPicturesRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   pictureName - SOAP::SOAPString
#   pictureSystemVersion - SOAP::SOAPInt
#   pictureSet - PictureSetCodeType
#   pictureData - Base64BinaryType
#   pictureUploadPolicy - PictureUploadPolicyCodeType
class UploadSiteHostedPicturesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pictureName
  attr_accessor :pictureSystemVersion
  attr_accessor :pictureSet
  attr_accessor :pictureData
  attr_accessor :pictureUploadPolicy

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pictureName = nil, pictureSystemVersion = nil, pictureSet = nil, pictureData = nil, pictureUploadPolicy = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pictureName = pictureName
    @pictureSystemVersion = pictureSystemVersion
    @pictureSet = pictureSet
    @pictureData = pictureData
    @pictureUploadPolicy = pictureUploadPolicy
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateChallengeInputRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   challengeToken - SOAP::SOAPString
#   userInput - SOAP::SOAPString
#   keepTokenValid - SOAP::SOAPBoolean
class ValidateChallengeInputRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :challengeToken
  attr_accessor :userInput
  attr_accessor :keepTokenValid

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, challengeToken = nil, userInput = nil, keepTokenValid = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @challengeToken = challengeToken
    @userInput = userInput
    @keepTokenValid = keepTokenValid
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   feedbackScore - SOAP::SOAPInt
#   registrationDate - SOAP::SOAPDateTime
#   subscribeSA - SOAP::SOAPBoolean
#   subscribeSAPro - SOAP::SOAPBoolean
#   subscribeSM - SOAP::SOAPBoolean
#   subscribeSMPro - SOAP::SOAPBoolean
class ValidateTestUserRegistrationRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :feedbackScore
  attr_accessor :registrationDate
  attr_accessor :subscribeSA
  attr_accessor :subscribeSAPro
  attr_accessor :subscribeSM
  attr_accessor :subscribeSMPro

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, feedbackScore = nil, registrationDate = nil, subscribeSA = nil, subscribeSAPro = nil, subscribeSM = nil, subscribeSMPro = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @feedbackScore = feedbackScore
    @registrationDate = registrationDate
    @subscribeSA = subscribeSA
    @subscribeSAPro = subscribeSAPro
    @subscribeSM = subscribeSM
    @subscribeSMPro = subscribeSMPro
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemsRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   rightsOwnerID - (any)
#   reportItems - VeROReportItemsType
class VeROReportItemsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :rightsOwnerID
  attr_accessor :reportItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, rightsOwnerID = nil, reportItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @rightsOwnerID = rightsOwnerID
    @reportItems = reportItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   item - ItemType
#   includeExpressRequirements - SOAP::SOAPBoolean
#   externalProductID - ExternalProductIDType
class VerifyAddItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :includeExpressRequirements
  attr_accessor :externalProductID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, includeExpressRequirements = nil, externalProductID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @includeExpressRequirements = includeExpressRequirements
    @externalProductID = externalProductID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemRequestType
#   detailLevel - DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - WarningLevelCodeType
#   botBlock - BotBlockRequestType
#   recipientBidderUserID - (any)
#   buyItNowPrice - AmountType
#   duration - SecondChanceOfferDurationCodeType
#   itemID - (any)
#   sellerMessage - SOAP::SOAPString
class VerifyAddSecondChanceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :sellerMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, recipientBidderUserID = nil, buyItNowPrice = nil, duration = nil, itemID = nil, sellerMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @duration = duration
    @itemID = itemID
    @sellerMessage = sellerMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AbstractResponseType
# abstract
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   disputeID - (any)
class AddDisputeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, disputeID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddDisputeResponseResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class AddItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddLiveAuctionItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class AddLiveAuctionItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageAAQToPartnerResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddMemberMessageAAQToPartnerResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRTQResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddMemberMessageRTQResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   addMemberMessagesAAQToBidderResponseContainer - AddMemberMessagesAAQToBidderResponseContainerType
class AddMemberMessagesAAQToBidderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :addMemberMessagesAAQToBidderResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, addMemberMessagesAAQToBidderResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @addMemberMessagesAAQToBidderResponseContainer = addMemberMessagesAAQToBidderResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   orderID - (any)
#   createdTime - SOAP::SOAPDateTime
class AddOrderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :orderID
  attr_accessor :createdTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, orderID = nil, createdTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @orderID = orderID
    @createdTime = createdTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class AddSecondChanceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddToItemDescriptionResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   watchListCount - SOAP::SOAPInt
#   watchListMaximum - SOAP::SOAPInt
class AddToWatchListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddTransactionConfirmationItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class AddTransactionConfirmationItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApproveLiveAuctionBiddersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidderUpdateStatus - LiveAuctionApprovalStatusArrayType
class ApproveLiveAuctionBiddersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidderUpdateStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidderUpdateStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidderUpdateStatus = bidderUpdateStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class CompleteSaleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConfirmIdentityResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   userID - SOAP::SOAPString
class ConfirmIdentityResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :userID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, userID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @userID = userID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class DeleteMyMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   endTime - SOAP::SOAPDateTime
class EndItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   eBayAuthToken - SOAP::SOAPString
#   hardExpirationTime - SOAP::SOAPDateTime
#   rESTToken - SOAP::SOAPString
class FetchTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationTime
  attr_accessor :rESTToken

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, eBayAuthToken = nil, hardExpirationTime = nil, rESTToken = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @eBayAuthToken = eBayAuthToken
    @hardExpirationTime = hardExpirationTime
    @rESTToken = rESTToken
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   accountID - SOAP::SOAPString
#   accountSummary - AccountSummaryType
#   currency - CurrencyCodeType
#   accountEntries - AccountEntriesType
#   paginationResult - PaginationResultType
#   hasMoreEntries - SOAP::SOAPBoolean
#   entriesPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
class GetAccountResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :accountID
  attr_accessor :accountSummary
  attr_accessor :currency
  attr_accessor :accountEntries
  attr_accessor :paginationResult
  attr_accessor :hasMoreEntries
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, accountID = nil, accountSummary = nil, currency = nil, accountEntries = nil, paginationResult = nil, hasMoreEntries = nil, entriesPerPage = nil, pageNumber = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @accountID = accountID
    @accountSummary = accountSummary
    @currency = currency
    @accountEntries = accountEntries
    @paginationResult = paginationResult
    @hasMoreEntries = hasMoreEntries
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   adFormatLead - AdFormatLeadType
#   adFormatLeadCount - SOAP::SOAPInt
class GetAdFormatLeadsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :adFormatLead
  attr_accessor :adFormatLeadCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, adFormatLead = [], adFormatLeadCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @adFormatLead = adFormatLead
    @adFormatLeadCount = adFormatLeadCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidArray - OfferArrayType
#   highBidder - (any)
#   highestBid - AmountType
#   listingStatus - ListingStatusCodeType
class GetAllBiddersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :highBidder
  attr_accessor :highestBid
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidArray = nil, highBidder = nil, highestBid = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidArray = bidArray
    @highBidder = highBidder
    @highestBid = highestBid
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   apiAccessRule - ApiAccessRuleType
class GetApiAccessRulesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :apiAccessRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, apiAccessRule = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @apiAccessRule = apiAccessRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
#   attributeData - SOAP::SOAPString
class GetAttributesCSResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, attributeSystemVersion = nil, attributeData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeData = attributeData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   xSLFile - XSLFileType
class GetAttributesXSLResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bestOfferArray - BestOfferArrayType
#   item - ItemType
class GetBestOffersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bestOfferArray
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bestOfferArray = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bestOfferArray = bestOfferArray
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidder - UserType
#   bidItemArray - ItemArrayType
class GetBidderListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidder
  attr_accessor :bidItemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidder = nil, bidItemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidder = bidder
    @bidItemArray = bidItemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryArray - CategoryArrayType
#   categoryCount - SOAP::SOAPInt
#   updateTime - SOAP::SOAPDateTime
#   categoryVersion - SOAP::SOAPString
#   reservePriceAllowed - SOAP::SOAPBoolean
#   minimumReservePrice - SOAP::SOAPDouble
#   reduceReserveAllowed - SOAP::SOAPBoolean
class GetCategoriesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryArray
  attr_accessor :categoryCount
  attr_accessor :updateTime
  attr_accessor :categoryVersion
  attr_accessor :reservePriceAllowed
  attr_accessor :minimumReservePrice
  attr_accessor :reduceReserveAllowed

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryArray = nil, categoryCount = nil, updateTime = nil, categoryVersion = nil, reservePriceAllowed = nil, minimumReservePrice = nil, reduceReserveAllowed = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryArray = categoryArray
    @categoryCount = categoryCount
    @updateTime = updateTime
    @categoryVersion = categoryVersion
    @reservePriceAllowed = reservePriceAllowed
    @minimumReservePrice = minimumReservePrice
    @reduceReserveAllowed = reduceReserveAllowed
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   mappedCategoryArray - CategoryArrayType
#   unmappedCategoryArray - CategoryArrayType
#   attributeSystemVersion - SOAP::SOAPString
#   siteWideCharacteristicSets - SiteWideCharacteristicsType
class GetCategory2CSResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :mappedCategoryArray
  attr_accessor :unmappedCategoryArray
  attr_accessor :attributeSystemVersion
  attr_accessor :siteWideCharacteristicSets

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, mappedCategoryArray = nil, unmappedCategoryArray = nil, attributeSystemVersion = nil, siteWideCharacteristicSets = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @mappedCategoryArray = mappedCategoryArray
    @unmappedCategoryArray = unmappedCategoryArray
    @attributeSystemVersion = attributeSystemVersion
    @siteWideCharacteristicSets = siteWideCharacteristicSets
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
#   category - CategoryFeatureType
#   siteDefaults - SiteDefaultsType
#   featureDefinitions - FeatureDefinitionsType
class GetCategoryFeaturesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion
  attr_accessor :updateTime
  attr_accessor :category
  attr_accessor :siteDefaults
  attr_accessor :featureDefinitions

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryVersion = nil, updateTime = nil, category = [], siteDefaults = nil, featureDefinitions = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
    @updateTime = updateTime
    @category = category
    @siteDefaults = siteDefaults
    @featureDefinitions = featureDefinitions
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryListingsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemArray - ItemArrayType
#   category - CategoryType
#   subCategories - CategoryArrayType
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   hasMoreItems - SOAP::SOAPBoolean
#   paginationResult - PaginationResultType
#   buyingGuideDetails - BuyingGuideDetailsType
#   relatedSearchKeywordArray - RelatedSearchKeywordArrayType
#   duplicateItems - SOAP::SOAPBoolean
class GetCategoryListingsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemArray
  attr_accessor :category
  attr_accessor :subCategories
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreItems
  attr_accessor :paginationResult
  attr_accessor :buyingGuideDetails
  attr_accessor :relatedSearchKeywordArray
  attr_accessor :duplicateItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemArray = nil, category = nil, subCategories = nil, itemsPerPage = nil, pageNumber = nil, hasMoreItems = nil, paginationResult = nil, buyingGuideDetails = nil, relatedSearchKeywordArray = nil, duplicateItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemArray = itemArray
    @category = category
    @subCategories = subCategories
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @hasMoreItems = hasMoreItems
    @paginationResult = paginationResult
    @buyingGuideDetails = buyingGuideDetails
    @relatedSearchKeywordArray = relatedSearchKeywordArray
    @duplicateItems = duplicateItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryMapping - CategoryMappingType
#   categoryVersion - SOAP::SOAPString
class GetCategoryMappingsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryMapping
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryMapping = [], categoryVersion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryMapping = categoryMapping
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategorySpecificsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryItemSpecifics - CategoryItemSpecificsType
class GetCategorySpecificsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryItemSpecifics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryItemSpecifics = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryItemSpecifics = categoryItemSpecifics
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetChallengeTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   challengeToken - SOAP::SOAPString
#   imageChallengeURL - SOAP::SOAPString
#   audioChallengeURL - SOAP::SOAPString
class GetChallengeTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :challengeToken
  attr_accessor :imageChallengeURL
  attr_accessor :audioChallengeURL

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, challengeToken = nil, imageChallengeURL = nil, audioChallengeURL = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @challengeToken = challengeToken
    @imageChallengeURL = imageChallengeURL
    @audioChallengeURL = audioChallengeURL
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   charity - CharityInfoType
class GetCharitiesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :charity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, charity = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @charity = charity
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetClientAlertsAuthTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   clientAlertsAuthToken - SOAP::SOAPString
#   hardExpirationTime - SOAP::SOAPDateTime
class GetClientAlertsAuthTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :clientAlertsAuthToken
  attr_accessor :hardExpirationTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, clientAlertsAuthToken = nil, hardExpirationTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @clientAlertsAuthToken = clientAlertsAuthToken
    @hardExpirationTime = hardExpirationTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetContextualKeywordsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   contextSearchAsset - ContextSearchAssetType
class GetContextualKeywordsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :contextSearchAsset

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, contextSearchAsset = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @contextSearchAsset = contextSearchAsset
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   crossPromotion - CrossPromotionsType
class GetCrossPromotionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :crossPromotion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, crossPromotion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @crossPromotion = crossPromotion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   descriptionTemplate - DescriptionTemplateType
#   layoutTotal - SOAP::SOAPInt
#   obsoleteLayoutID - SOAP::SOAPInt
#   obsoleteThemeID - SOAP::SOAPInt
#   themeGroup - ThemeGroupType
#   themeTotal - SOAP::SOAPInt
class GetDescriptionTemplatesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :descriptionTemplate
  attr_accessor :layoutTotal
  attr_accessor :obsoleteLayoutID
  attr_accessor :obsoleteThemeID
  attr_accessor :themeGroup
  attr_accessor :themeTotal

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, descriptionTemplate = [], layoutTotal = nil, obsoleteLayoutID = [], obsoleteThemeID = [], themeGroup = [], themeTotal = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @descriptionTemplate = descriptionTemplate
    @layoutTotal = layoutTotal
    @obsoleteLayoutID = obsoleteLayoutID
    @obsoleteThemeID = obsoleteThemeID
    @themeGroup = themeGroup
    @themeTotal = themeTotal
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   dispute - DisputeType
class GetDisputeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :dispute

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, dispute = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @dispute = dispute
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   feedbackDetailArray - FeedbackDetailArrayType
#   feedbackDetailItemTotal - SOAP::SOAPInt
#   feedbackSummary - FeedbackSummaryType
#   feedbackScore - SOAP::SOAPInt
#   paginationResult - PaginationResultType
#   entriesPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
class GetFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :feedbackDetailArray
  attr_accessor :feedbackDetailItemTotal
  attr_accessor :feedbackSummary
  attr_accessor :feedbackScore
  attr_accessor :paginationResult
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, feedbackDetailArray = nil, feedbackDetailItemTotal = nil, feedbackSummary = nil, feedbackScore = nil, paginationResult = nil, entriesPerPage = nil, pageNumber = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @feedbackDetailArray = feedbackDetailArray
    @feedbackDetailItemTotal = feedbackDetailItemTotal
    @feedbackSummary = feedbackSummary
    @feedbackScore = feedbackScore
    @paginationResult = paginationResult
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidArray - OfferArrayType
#   listingStatus - ListingStatusCodeType
class GetHighBiddersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidArray = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidArray = bidArray
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   item - ItemType
class GetItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   getRecommendationsResponseContainer - GetRecommendationsResponseContainerType
class GetItemRecommendationsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, getRecommendationsResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @getRecommendationsResponseContainer = getRecommendationsResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   shippingDetails - ShippingDetailsType
class GetItemShippingResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :shippingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, shippingDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @shippingDetails = shippingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   hasMoreTransactions - SOAP::SOAPBoolean
#   transactionsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedTransactionCountActual - SOAP::SOAPInt
#   item - ItemType
#   transactionArray - TransactionArrayType
#   payPalPreferred - SOAP::SOAPBoolean
class GetItemTransactionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :item
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, item = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @item = item
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemsAwaitingFeedback - PaginatedTransactionArrayType
class GetItemsAwaitingFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemsAwaitingFeedback

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemsAwaitingFeedback = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemsAwaitingFeedback = itemsAwaitingFeedback
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionBiddersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidderDetails - BidderDetailArrayType
#   totalPending - SOAP::SOAPInt
#   totalApproved - SOAP::SOAPInt
#   totalDenied - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   paginationResult - PaginationResultType
class GetLiveAuctionBiddersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidderDetails
  attr_accessor :totalPending
  attr_accessor :totalApproved
  attr_accessor :totalDenied
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidderDetails = nil, totalPending = nil, totalApproved = nil, totalDenied = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidderDetails = bidderDetails
    @totalPending = totalPending
    @totalApproved = totalApproved
    @totalDenied = totalDenied
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetLiveAuctionCatalogDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   liveAuctionCatalog - LiveAuctionCatalogType
class GetLiveAuctionCatalogDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :liveAuctionCatalog

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, liveAuctionCatalog = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @liveAuctionCatalog = liveAuctionCatalog
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   memberMessage - MemberMessageExchangeArrayType
#   paginationResult - PaginationResultType
#   hasMoreItems - SOAP::SOAPBoolean
class GetMemberMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :memberMessage
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, memberMessage = nil, paginationResult = nil, hasMoreItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @memberMessage = memberMessage
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMessagePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   aSQPreferences - ASQPreferencesType
class GetMessagePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :aSQPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, aSQPreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @aSQPreferences = aSQPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   summary - MyMessagesSummaryType
#   alerts - MyMessagesAlertArrayType
#   messages - MyMessagesMessageArrayType
class GetMyMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :summary
  attr_accessor :alerts
  attr_accessor :messages

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, summary = nil, alerts = nil, messages = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @summary = summary
    @alerts = alerts
    @messages = messages
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   buyingSummary - BuyingSummaryType
#   watchList - PaginatedItemArrayType
#   bidList - PaginatedItemArrayType
#   bestOfferList - PaginatedItemArrayType
#   wonList - PaginatedOrderTransactionArrayType
#   lostList - PaginatedItemArrayType
#   favoriteSearches - MyeBayFavoriteSearchListType
#   favoriteSellers - MyeBayFavoriteSellerListType
#   secondChanceOffer - ItemType
#   bidAssistantList - BidGroupArrayType
#   deletedFromWonList - PaginatedOrderTransactionArrayType
#   deletedFromLostList - PaginatedItemArrayType
class GetMyeBayBuyingResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :buyingSummary
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer
  attr_accessor :bidAssistantList
  attr_accessor :deletedFromWonList
  attr_accessor :deletedFromLostList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, buyingSummary = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = [], bidAssistantList = nil, deletedFromWonList = nil, deletedFromLostList = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @buyingSummary = buyingSummary
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
    @bidAssistantList = bidAssistantList
    @deletedFromWonList = deletedFromWonList
    @deletedFromLostList = deletedFromLostList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   buyingReminders - RemindersType
#   sellingReminders - RemindersType
class GetMyeBayRemindersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, buyingReminders = nil, sellingReminders = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingSummary - SellingSummaryType
#   scheduledList - PaginatedItemArrayType
#   activeList - PaginatedItemArrayType
#   soldList - PaginatedOrderTransactionArrayType
#   unsoldList - PaginatedItemArrayType
#   summary - MyeBaySellingSummaryType
#   bidList - PaginatedItemArrayType
#   deletedFromSoldList - PaginatedOrderTransactionArrayType
#   deletedFromUnsoldList - PaginatedItemArrayType
class GetMyeBaySellingResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingSummary
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList
  attr_accessor :summary
  attr_accessor :bidList
  attr_accessor :deletedFromSoldList
  attr_accessor :deletedFromUnsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingSummary = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil, summary = nil, bidList = nil, deletedFromSoldList = nil, deletedFromUnsoldList = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingSummary = sellingSummary
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
    @summary = summary
    @bidList = bidList
    @deletedFromSoldList = deletedFromSoldList
    @deletedFromUnsoldList = deletedFromUnsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   applicationDeliveryPreferences - ApplicationDeliveryPreferencesType
#   deliveryURLName - SOAP::SOAPString
#   userDeliveryPreferenceArray - NotificationEnableArrayType
#   userData - NotificationUserDataType
#   eventProperty - NotificationEventPropertyType
class GetNotificationPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :deliveryURLName
  attr_accessor :userDeliveryPreferenceArray
  attr_accessor :userData
  attr_accessor :eventProperty

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, applicationDeliveryPreferences = nil, deliveryURLName = nil, userDeliveryPreferenceArray = nil, userData = nil, eventProperty = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @deliveryURLName = deliveryURLName
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
    @userData = userData
    @eventProperty = eventProperty
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationsUsageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   notificationDetailsArray - NotificationDetailsArrayType
#   markUpMarkDownHistory - MarkUpMarkDownHistoryType
#   notificationStatistics - NotificationStatisticsType
class GetNotificationsUsageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :notificationDetailsArray
  attr_accessor :markUpMarkDownHistory
  attr_accessor :notificationStatistics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, startTime = nil, endTime = nil, notificationDetailsArray = nil, markUpMarkDownHistory = nil, notificationStatistics = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
    @notificationDetailsArray = notificationDetailsArray
    @markUpMarkDownHistory = markUpMarkDownHistory
    @notificationStatistics = notificationStatistics
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrderTransactionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   orderArray - OrderArrayType
class GetOrderTransactionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :orderArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, orderArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @orderArray = orderArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   hasMoreOrders - SOAP::SOAPBoolean
#   orderArray - OrderArrayType
#   ordersPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedOrderCountActual - SOAP::SOAPInt
class GetOrdersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreOrders
  attr_accessor :orderArray
  attr_accessor :ordersPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedOrderCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreOrders = nil, orderArray = nil, ordersPerPage = nil, pageNumber = nil, returnedOrderCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreOrders = hasMoreOrders
    @orderArray = orderArray
    @ordersPerPage = ordersPerPage
    @pageNumber = pageNumber
    @returnedOrderCountActual = returnedOrderCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   pictureManagerDetails - PictureManagerDetailsType
class GetPictureManagerDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, pictureManagerDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   subscription - PictureManagerSubscriptionType
#   pictureType - PictureManagerPictureDisplayType
class GetPictureManagerOptionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :subscription
  attr_accessor :pictureType

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, subscription = [], pictureType = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @subscription = subscription
    @pictureType = pictureType
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPopularKeywordsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   categoryArray - CategoryArrayType
#   hasMore - SOAP::SOAPBoolean
class GetPopularKeywordsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :categoryArray
  attr_accessor :hasMore

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, categoryArray = nil, hasMore = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @categoryArray = categoryArray
    @hasMore = hasMore
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   dataElementSets - DataElementSetType
#   productSearchResult - ProductSearchResultType
class GetProductFamilyMembersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
#   productFinderData - SOAP::SOAPString
class GetProductFinderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, attributeSystemVersion = nil, productFinderData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderData = productFinderData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   xSLFile - XSLFileType
class GetProductFinderXSLResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
#   productSearchPage - ProductSearchPageType
class GetProductSearchPageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productSearchPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, attributeSystemVersion = nil, productSearchPage = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productSearchPage = productSearchPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   dataElementSets - DataElementSetType
#   productSearchResult - ProductSearchResultType
class GetProductSearchResultsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   productSellingPagesData - SOAP::SOAPString
class GetProductSellingPagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :productSellingPagesData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, productSellingPagesData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @productSellingPagesData = productSellingPagesData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   characteristicsSetProductHistogram - CharacteristicsSetProductHistogramType
#   pageNumber - SOAP::SOAPInt
#   approximatePages - SOAP::SOAPInt
#   hasMore - SOAP::SOAPBoolean
#   totalProducts - SOAP::SOAPInt
#   product - CatalogProductType
#   itemArray - ItemArrayType
#   buyingGuideDetails - BuyingGuideDetailsType
#   duplicateItems - SOAP::SOAPBoolean
class GetProductsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :characteristicsSetProductHistogram
  attr_accessor :pageNumber
  attr_accessor :approximatePages
  attr_accessor :hasMore
  attr_accessor :totalProducts
  attr_accessor :product
  attr_accessor :itemArray
  attr_accessor :buyingGuideDetails
  attr_accessor :duplicateItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, characteristicsSetProductHistogram = nil, pageNumber = nil, approximatePages = nil, hasMore = nil, totalProducts = nil, product = [], itemArray = nil, buyingGuideDetails = nil, duplicateItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @characteristicsSetProductHistogram = characteristicsSetProductHistogram
    @pageNumber = pageNumber
    @approximatePages = approximatePages
    @hasMore = hasMore
    @totalProducts = totalProducts
    @product = product
    @itemArray = itemArray
    @buyingGuideDetails = buyingGuideDetails
    @duplicateItems = duplicateItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   promotionRuleArray - PromotionRuleArrayType
class GetPromotionRulesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :promotionRuleArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, promotionRuleArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @promotionRuleArray = promotionRuleArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionalSaleDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   promotionalSaleDetails - PromotionalSaleArrayType
class GetPromotionalSaleDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :promotionalSaleDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, promotionalSaleDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @promotionalSaleDetails = promotionalSaleDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSearchResultsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   searchResultItemArray - SearchResultItemArrayType
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   hasMoreItems - SOAP::SOAPBoolean
#   paginationResult - PaginationResultType
#   categoryArray - CategoryArrayType
#   buyingGuideDetails - BuyingGuideDetailsType
#   storeExpansionArray - ExpansionArrayType
#   internationalExpansionArray - ExpansionArrayType
#   filterRemovedExpansionArray - ExpansionArrayType
#   allCategoriesExpansionArray - ExpansionArrayType
#   spellingSuggestion - SpellingSuggestionType
#   relatedSearchKeywordArray - RelatedSearchKeywordArrayType
#   duplicateItems - SOAP::SOAPBoolean
class GetSearchResultsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :searchResultItemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :hasMoreItems
  attr_accessor :paginationResult
  attr_accessor :categoryArray
  attr_accessor :buyingGuideDetails
  attr_accessor :storeExpansionArray
  attr_accessor :internationalExpansionArray
  attr_accessor :filterRemovedExpansionArray
  attr_accessor :allCategoriesExpansionArray
  attr_accessor :spellingSuggestion
  attr_accessor :relatedSearchKeywordArray
  attr_accessor :duplicateItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, searchResultItemArray = nil, itemsPerPage = nil, pageNumber = nil, hasMoreItems = nil, paginationResult = nil, categoryArray = nil, buyingGuideDetails = nil, storeExpansionArray = nil, internationalExpansionArray = nil, filterRemovedExpansionArray = nil, allCategoriesExpansionArray = nil, spellingSuggestion = nil, relatedSearchKeywordArray = nil, duplicateItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @searchResultItemArray = searchResultItemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @hasMoreItems = hasMoreItems
    @paginationResult = paginationResult
    @categoryArray = categoryArray
    @buyingGuideDetails = buyingGuideDetails
    @storeExpansionArray = storeExpansionArray
    @internationalExpansionArray = internationalExpansionArray
    @filterRemovedExpansionArray = filterRemovedExpansionArray
    @allCategoriesExpansionArray = allCategoriesExpansionArray
    @spellingSuggestion = spellingSuggestion
    @relatedSearchKeywordArray = relatedSearchKeywordArray
    @duplicateItems = duplicateItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerDashboardResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   searchStanding - SearchStandingDashboardType
#   sellerFeeDiscount - SellerFeeDiscountDashboardType
#   powerSellerStatus - PowerSellerDashboardType
#   policyCompliance - PolicyComplianceDashboardType
#   buyerSatisfaction - BuyerSatisfactionDashboardType
#   sellerAccount - SellerAccountDashboardType
class GetSellerDashboardResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :searchStanding
  attr_accessor :sellerFeeDiscount
  attr_accessor :powerSellerStatus
  attr_accessor :policyCompliance
  attr_accessor :buyerSatisfaction
  attr_accessor :sellerAccount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, searchStanding = nil, sellerFeeDiscount = nil, powerSellerStatus = nil, policyCompliance = nil, buyerSatisfaction = nil, sellerAccount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @searchStanding = searchStanding
    @sellerFeeDiscount = sellerFeeDiscount
    @powerSellerStatus = powerSellerStatus
    @policyCompliance = policyCompliance
    @buyerSatisfaction = buyerSatisfaction
    @sellerAccount = sellerAccount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   timeTo - SOAP::SOAPDateTime
#   itemArray - ItemArrayType
class GetSellerEventsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :timeTo
  attr_accessor :itemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, timeTo = nil, itemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @timeTo = timeTo
    @itemArray = itemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   hasMoreItems - SOAP::SOAPBoolean
#   itemArray - ItemArrayType
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedItemCountActual - SOAP::SOAPInt
#   seller - UserType
class GetSellerListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems
  attr_accessor :itemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedItemCountActual
  attr_accessor :seller

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreItems = nil, itemArray = nil, itemsPerPage = nil, pageNumber = nil, returnedItemCountActual = nil, seller = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
    @itemArray = itemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @returnedItemCountActual = returnedItemCountActual
    @seller = seller
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   hasMorePayments - SOAP::SOAPBoolean
#   sellerPayment - SellerPaymentType
#   paymentsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedPaymentCountActual - SOAP::SOAPInt
class GetSellerPaymentsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMorePayments
  attr_accessor :sellerPayment
  attr_accessor :paymentsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedPaymentCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMorePayments = nil, sellerPayment = [], paymentsPerPage = nil, pageNumber = nil, returnedPaymentCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMorePayments = hasMorePayments
    @sellerPayment = sellerPayment
    @paymentsPerPage = paymentsPerPage
    @pageNumber = pageNumber
    @returnedPaymentCountActual = returnedPaymentCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   hasMoreTransactions - SOAP::SOAPBoolean
#   transactionsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedTransactionCountActual - SOAP::SOAPInt
#   seller - UserType
#   transactionArray - TransactionArrayType
#   payPalPreferred - SOAP::SOAPBoolean
class GetSellerTransactionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :seller
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, seller = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @seller = seller
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSessionIDResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sessionID - SOAP::SOAPString
class GetSessionIDResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sessionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sessionID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sessionID = sessionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetShippingDiscountProfilesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   currencyID - CurrencyCodeType
#   flatShippingDiscount - FlatShippingDiscountType
#   calculatedShippingDiscount - CalculatedShippingDiscountType
#   promotionalShippingDiscount - SOAP::SOAPBoolean
#   calculatedHandlingDiscount - CalculatedHandlingDiscountType
#   promotionalShippingDiscountDetails - PromotionalShippingDiscountDetailsType
#   shippingInsurance - ShippingInsuranceType
#   internationalShippingInsurance - ShippingInsuranceType
#   combinedDuration - CombinedPaymentPeriodCodeType
class GetShippingDiscountProfilesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :currencyID
  attr_accessor :flatShippingDiscount
  attr_accessor :calculatedShippingDiscount
  attr_accessor :promotionalShippingDiscount
  attr_accessor :calculatedHandlingDiscount
  attr_accessor :promotionalShippingDiscountDetails
  attr_accessor :shippingInsurance
  attr_accessor :internationalShippingInsurance
  attr_accessor :combinedDuration

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, currencyID = nil, flatShippingDiscount = nil, calculatedShippingDiscount = nil, promotionalShippingDiscount = nil, calculatedHandlingDiscount = nil, promotionalShippingDiscountDetails = nil, shippingInsurance = nil, internationalShippingInsurance = nil, combinedDuration = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @currencyID = currencyID
    @flatShippingDiscount = flatShippingDiscount
    @calculatedShippingDiscount = calculatedShippingDiscount
    @promotionalShippingDiscount = promotionalShippingDiscount
    @calculatedHandlingDiscount = calculatedHandlingDiscount
    @promotionalShippingDiscountDetails = promotionalShippingDiscountDetails
    @shippingInsurance = shippingInsurance
    @internationalShippingInsurance = internationalShippingInsurance
    @combinedDuration = combinedDuration
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   store - StoreType
class GetStoreResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, store = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCategoryUpdateStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   status - TaskStatusCodeType
class GetStoreCategoryUpdateStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   customPageArray - StoreCustomPageArrayType
class GetStoreCustomPageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :customPageArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, customPageArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @customPageArray = customPageArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   basicThemeArray - StoreThemeArrayType
#   advancedThemeArray - StoreThemeArrayType
#   logoArray - StoreLogoArrayType
#   subscriptionArray - StoreSubscriptionArrayType
#   maxCategories - SOAP::SOAPInt
#   maxCategoryLevels - SOAP::SOAPInt
class GetStoreOptionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :basicThemeArray
  attr_accessor :advancedThemeArray
  attr_accessor :logoArray
  attr_accessor :subscriptionArray
  attr_accessor :maxCategories
  attr_accessor :maxCategoryLevels

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, basicThemeArray = nil, advancedThemeArray = nil, logoArray = nil, subscriptionArray = nil, maxCategories = nil, maxCategoryLevels = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @basicThemeArray = basicThemeArray
    @advancedThemeArray = advancedThemeArray
    @logoArray = logoArray
    @subscriptionArray = subscriptionArray
    @maxCategories = maxCategories
    @maxCategoryLevels = maxCategoryLevels
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   storePreferences - StorePreferencesType
class GetStorePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, storePreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   suggestedCategoryArray - SuggestedCategoryArrayType
#   categoryCount - SOAP::SOAPInt
class GetSuggestedCategoriesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :suggestedCategoryArray
  attr_accessor :categoryCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, suggestedCategoryArray = nil, categoryCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @suggestedCategoryArray = suggestedCategoryArray
    @categoryCount = categoryCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   lastUpdateTime - SOAP::SOAPDateTime
#   taxTable - TaxTableType
class GetTaxTableResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :lastUpdateTime
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, lastUpdateTime = nil, taxTable = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @lastUpdateTime = lastUpdateTime
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTokenStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   tokenStatus - TokenStatusType
class GetTokenStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :tokenStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, tokenStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @tokenStatus = tokenStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   user - UserType
class GetUserResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :user

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, user = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @user = user
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserContactDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   userID - SOAP::SOAPString
#   contactAddress - AddressType
#   registrationDate - SOAP::SOAPDateTime
class GetUserContactDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :contactAddress
  attr_accessor :registrationDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, userID = nil, contactAddress = nil, registrationDate = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @userID = userID
    @contactAddress = contactAddress
    @registrationDate = registrationDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   startingDisputeID - (any)
#   endingDisputeID - (any)
#   disputeArray - DisputeArrayType
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   disputeFilterCount - DisputeFilterCountType
#   paginationResult - PaginationResultType
class GetUserDisputesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :startingDisputeID
  attr_accessor :endingDisputeID
  attr_accessor :disputeArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :disputeFilterCount
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, startingDisputeID = nil, endingDisputeID = nil, disputeArray = nil, itemsPerPage = nil, pageNumber = nil, disputeFilterCount = [], paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @startingDisputeID = startingDisputeID
    @endingDisputeID = endingDisputeID
    @disputeArray = disputeArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @disputeFilterCount = disputeFilterCount
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidderNoticePreferences - BidderNoticePreferencesType
#   combinedPaymentPreferences - CombinedPaymentPreferencesType
#   crossPromotionPreferences - CrossPromotionPreferencesType
#   sellerPaymentPreferences - SellerPaymentPreferencesType
#   sellerFavoriteItemPreferences - SellerFavoriteItemPreferencesType
#   endOfAuctionEmailPreferences - EndOfAuctionEmailPreferencesType
#   emailShipmentTrackingNumberPreference - SOAP::SOAPBoolean
#   proStoresPreference - ProStoresCheckoutPreferenceType
class GetUserPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences
  attr_accessor :emailShipmentTrackingNumberPreference
  attr_accessor :proStoresPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil, emailShipmentTrackingNumberPreference = nil, proStoresPreference = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
    @emailShipmentTrackingNumberPreference = emailShipmentTrackingNumberPreference
    @proStoresPreference = proStoresPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReasonCodeDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   veROReasonCodeDetails - VeROReasonCodeDetailsType
class GetVeROReasonCodeDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :veROReasonCodeDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, veROReasonCodeDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @veROReasonCodeDetails = veROReasonCodeDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReportStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - PaginationResultType
#   hasMoreItems - SOAP::SOAPBoolean
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   veROReportPacketID - SOAP::SOAPLong
#   veROReportPacketStatus - VeROReportPacketStatusCodeType
#   reportedItemDetails - VeROReportedItemDetailsType
class GetVeROReportStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :veROReportPacketID
  attr_accessor :veROReportPacketStatus
  attr_accessor :reportedItemDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreItems = nil, itemsPerPage = nil, pageNumber = nil, veROReportPacketID = nil, veROReportPacketStatus = nil, reportedItemDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @veROReportPacketID = veROReportPacketID
    @veROReportPacketStatus = veROReportPacketStatus
    @reportedItemDetails = reportedItemDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   wantItNowPost - WantItNowPostType
class GetWantItNowPostResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPost

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, wantItNowPost = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @wantItNowPost = wantItNowPost
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   wantItNowPostArray - WantItNowPostArrayType
#   hasMoreItems - SOAP::SOAPBoolean
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   paginationResult - PaginationResultType
class GetWantItNowSearchResultsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPostArray
  attr_accessor :hasMoreItems
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, wantItNowPostArray = nil, hasMoreItems = nil, itemsPerPage = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @wantItNowPostArray = wantItNowPostArray
    @hasMoreItems = hasMoreItems
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   countryDetails - CountryDetailsType
#   currencyDetails - CurrencyDetailsType
#   dispatchTimeMaxDetails - DispatchTimeMaxDetailsType
#   paymentOptionDetails - PaymentOptionDetailsType
#   regionDetails - RegionDetailsType
#   shippingLocationDetails - ShippingLocationDetailsType
#   shippingServiceDetails - ShippingServiceDetailsType
#   siteDetails - SiteDetailsType
#   taxJurisdiction - TaxJurisdictionType
#   uRLDetails - URLDetailsType
#   timeZoneDetails - TimeZoneDetailsType
#   itemSpecificDetails - ItemSpecificDetailsType
#   unitOfMeasurementDetails - UnitOfMeasurementDetailsType
#   regionOfOriginDetails - RegionOfOriginDetailsType
#   shippingPackageDetails - ShippingPackageDetailsType
#   shippingCarrierDetails - ShippingCarrierDetailsType
#   returnPolicyDetails - ReturnPolicyDetailsType
class GeteBayDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :countryDetails
  attr_accessor :currencyDetails
  attr_accessor :dispatchTimeMaxDetails
  attr_accessor :paymentOptionDetails
  attr_accessor :regionDetails
  attr_accessor :shippingLocationDetails
  attr_accessor :shippingServiceDetails
  attr_accessor :siteDetails
  attr_accessor :taxJurisdiction
  attr_accessor :uRLDetails
  attr_accessor :timeZoneDetails
  attr_accessor :itemSpecificDetails
  attr_accessor :unitOfMeasurementDetails
  attr_accessor :regionOfOriginDetails
  attr_accessor :shippingPackageDetails
  attr_accessor :shippingCarrierDetails
  attr_accessor :returnPolicyDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, countryDetails = [], currencyDetails = [], dispatchTimeMaxDetails = [], paymentOptionDetails = [], regionDetails = [], shippingLocationDetails = [], shippingServiceDetails = [], siteDetails = [], taxJurisdiction = [], uRLDetails = [], timeZoneDetails = [], itemSpecificDetails = [], unitOfMeasurementDetails = [], regionOfOriginDetails = [], shippingPackageDetails = [], shippingCarrierDetails = [], returnPolicyDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @countryDetails = countryDetails
    @currencyDetails = currencyDetails
    @dispatchTimeMaxDetails = dispatchTimeMaxDetails
    @paymentOptionDetails = paymentOptionDetails
    @regionDetails = regionDetails
    @shippingLocationDetails = shippingLocationDetails
    @shippingServiceDetails = shippingServiceDetails
    @siteDetails = siteDetails
    @taxJurisdiction = taxJurisdiction
    @uRLDetails = uRLDetails
    @timeZoneDetails = timeZoneDetails
    @itemSpecificDetails = itemSpecificDetails
    @unitOfMeasurementDetails = unitOfMeasurementDetails
    @regionOfOriginDetails = regionOfOriginDetails
    @shippingPackageDetails = shippingPackageDetails
    @shippingCarrierDetails = shippingCarrierDetails
    @returnPolicyDetails = returnPolicyDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class GeteBayOfficialTimeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   refundFromSeller - AmountType
#   totalRefundToBuyer - AmountType
class IssueRefundResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :refundFromSeller
  attr_accessor :totalRefundToBuyer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, refundFromSeller = nil, totalRefundToBuyer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @refundFromSeller = refundFromSeller
    @totalRefundToBuyer = totalRefundToBuyer
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   feedbackID - SOAP::SOAPString
class LeaveFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :feedbackID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, feedbackID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @feedbackID = feedbackID
  end
end

# {urn:ebay:apis:eBLBaseComponents}PlaceOfferResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingStatus - SellingStatusType
#   transactionID - SOAP::SOAPString
#   bestOffer - BestOfferType
class PlaceOfferResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingStatus
  attr_accessor :transactionID
  attr_accessor :bestOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingStatus = nil, transactionID = nil, bestOffer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingStatus = sellingStatus
    @transactionID = transactionID
    @bestOffer = bestOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - FeesType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class RelistItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, startTime = nil, endTime = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @startTime = startTime
    @endTime = endTime
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   watchListCount - SOAP::SOAPInt
#   watchListMaximum - SOAP::SOAPInt
class RemoveFromWatchListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   respondToBestOffer - BestOfferArrayType
class RespondToBestOfferResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :respondToBestOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, respondToBestOffer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @respondToBestOffer = respondToBestOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class RespondToFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class RespondToWantItNowPostResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseCheckoutStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class ReviseItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseLiveAuctionItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class ReviseLiveAuctionItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseMyMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseMyMessagesFoldersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RevokeTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class RevokeTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SellerReverseDisputeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SendInvoiceResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetMessagePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetMessagePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetNotificationPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetPictureManagerDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   status - PromotionalSaleStatusCodeType
#   promotionalSaleID - SOAP::SOAPLong
class SetPromotionalSaleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :status
  attr_accessor :promotionalSaleID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, status = nil, promotionalSaleID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @status = status
    @promotionalSaleID = promotionalSaleID
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleListingsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   status - PromotionalSaleStatusCodeType
class SetPromotionalSaleListingsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerFeedbackOptionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetSellingManagerFeedbackOptionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetShippingDiscountProfilesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetShippingDiscountProfilesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetStoreResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCategoriesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   taskID - SOAP::SOAPLong
#   status - TaskStatusCodeType
class SetStoreCategoriesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :taskID
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, taskID = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @taskID = taskID
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   customPage - StoreCustomPageType
class SetStoreCustomPageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, customPage = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetStorePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetTaxTableResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetUserNotesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetUserPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UploadSiteHostedPicturesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   pictureSystemVersion - SOAP::SOAPInt
#   siteHostedPictureDetails - SiteHostedPictureDetailsType
class UploadSiteHostedPicturesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :pictureSystemVersion
  attr_accessor :siteHostedPictureDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, pictureSystemVersion = nil, siteHostedPictureDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @pictureSystemVersion = pictureSystemVersion
    @siteHostedPictureDetails = siteHostedPictureDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateChallengeInputResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   validToken - SOAP::SOAPBoolean
class ValidateChallengeInputResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :validToken

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, validToken = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @validToken = validToken
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ValidateTestUserRegistrationResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   veROReportPacketID - SOAP::SOAPLong
#   veROReportPacketStatus - VeROReportPacketStatusCodeType
class VeROReportItemsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :veROReportPacketID
  attr_accessor :veROReportPacketStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, veROReportPacketID = nil, veROReportPacketStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @veROReportPacketID = veROReportPacketID
    @veROReportPacketStatus = veROReportPacketStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - FeesType
#   expressListing - SOAP::SOAPBoolean
#   expressItemRequirements - ExpressItemRequirementsType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class VerifyAddItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :expressListing
  attr_accessor :expressItemRequirements
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, expressListing = nil, expressItemRequirements = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @expressListing = expressListing
    @expressItemRequirements = expressItemRequirements
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class VerifyAddSecondChanceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemsCanceledEventType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   canceledItemIDArray - ItemIDArrayType
#   eligibleForRelist - SOAP::SOAPBoolean
#   sellerID - (any)
class ItemsCanceledEventType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :canceledItemIDArray
  attr_accessor :eligibleForRelist
  attr_accessor :sellerID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, canceledItemIDArray = nil, eligibleForRelist = nil, sellerID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @canceledItemIDArray = canceledItemIDArray
    @eligibleForRelist = eligibleForRelist
    @sellerID = sellerID
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationMessageType
#   timestamp - SOAP::SOAPDateTime
#   ack - AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   messageBody - SOAP::SOAPString
#   eIAS - SOAP::SOAPString
class NotificationMessageType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :messageBody
  attr_accessor :eIAS

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, messageBody = nil, eIAS = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @messageBody = messageBody
    @eIAS = eIAS
  end
end

# {urn:ebay:apis:eBLBaseComponents}BotBlockRequestType
#   botBlockToken - SOAP::SOAPString
#   botBlockUserInput - SOAP::SOAPString
class BotBlockRequestType
  attr_accessor :botBlockToken
  attr_accessor :botBlockUserInput
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(botBlockToken = nil, botBlockUserInput = nil)
    @botBlockToken = botBlockToken
    @botBlockUserInput = botBlockUserInput
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BotBlockResponseType
#   botBlockToken - SOAP::SOAPString
#   botBlockUrl - SOAP::SOAPString
#   botBlockAudioUrl - SOAP::SOAPString
class BotBlockResponseType
  attr_accessor :botBlockToken
  attr_accessor :botBlockUrl
  attr_accessor :botBlockAudioUrl
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(botBlockToken = nil, botBlockUrl = nil, botBlockAudioUrl = nil)
    @botBlockToken = botBlockToken
    @botBlockUrl = botBlockUrl
    @botBlockAudioUrl = botBlockAudioUrl
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CustomSecurityHeaderType
#   eBayAuthToken - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   credentials - UserIdPasswordType
#   notificationSignature - SOAP::SOAPString
class CustomSecurityHeaderType
  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationWarning
  attr_accessor :credentials
  attr_accessor :notificationSignature
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayAuthToken = nil, hardExpirationWarning = nil, credentials = nil, notificationSignature = nil)
    @eBayAuthToken = eBayAuthToken
    @hardExpirationWarning = hardExpirationWarning
    @credentials = credentials
    @notificationSignature = notificationSignature
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterCountType
#   disputeFilterType - DisputeFilterTypeCodeType
#   totalAvailable - SOAP::SOAPInt
class DisputeFilterCountType
  attr_accessor :disputeFilterType
  attr_accessor :totalAvailable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeFilterType = nil, totalAvailable = nil)
    @disputeFilterType = disputeFilterType
    @totalAvailable = totalAvailable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageType
#   messageID - SOAP::SOAPInt
#   messageSource - DisputeMessageSourceCodeType
#   messageCreationTime - SOAP::SOAPDateTime
#   messageText - SOAP::SOAPString
class DisputeMessageType
  attr_accessor :messageID
  attr_accessor :messageSource
  attr_accessor :messageCreationTime
  attr_accessor :messageText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageID = nil, messageSource = nil, messageCreationTime = nil, messageText = nil)
    @messageID = messageID
    @messageSource = messageSource
    @messageCreationTime = messageCreationTime
    @messageText = messageText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionType
#   disputeResolutionRecordType - DisputeResolutionRecordTypeCodeType
#   disputeResolutionReason - DisputeResolutionReasonCodeType
#   resolutionTime - SOAP::SOAPDateTime
class DisputeResolutionType
  attr_accessor :disputeResolutionRecordType
  attr_accessor :disputeResolutionReason
  attr_accessor :resolutionTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeResolutionRecordType = nil, disputeResolutionReason = nil, resolutionTime = nil)
    @disputeResolutionRecordType = disputeResolutionRecordType
    @disputeResolutionReason = disputeResolutionReason
    @resolutionTime = resolutionTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DuplicateInvocationDetailsType
#   duplicateInvocationID - (any)
#   status - InvocationStatusType
#   invocationTrackingID - SOAP::SOAPString
class DuplicateInvocationDetailsType
  attr_accessor :duplicateInvocationID
  attr_accessor :status
  attr_accessor :invocationTrackingID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duplicateInvocationID = nil, status = nil, invocationTrackingID = nil)
    @duplicateInvocationID = duplicateInvocationID
    @status = status
    @invocationTrackingID = invocationTrackingID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorParameterType
#   value - SOAP::SOAPString
#   xmlattr_ParamID - SOAP::SOAPString
class ErrorParameterType
  AttrParamID = XSD::QName.new(nil, "ParamID")

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_ParamID
    __xmlattr[AttrParamID]
  end

  def xmlattr_ParamID=(value)
    __xmlattr[AttrParamID] = value
  end

  def initialize(value = nil)
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorType
#   shortMessage - SOAP::SOAPString
#   longMessage - SOAP::SOAPString
#   errorCode - SOAP::SOAPToken
#   userDisplayHint - SOAP::SOAPBoolean
#   severityCode - SeverityCodeType
#   errorParameters - ErrorParameterType
#   errorClassification - ErrorClassificationCodeType
class ErrorType
  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :errorCode
  attr_accessor :userDisplayHint
  attr_accessor :severityCode
  attr_accessor :errorParameters
  attr_accessor :errorClassification
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shortMessage = nil, longMessage = nil, errorCode = nil, userDisplayHint = nil, severityCode = nil, errorParameters = [], errorClassification = nil)
    @shortMessage = shortMessage
    @longMessage = longMessage
    @errorCode = errorCode
    @userDisplayHint = userDisplayHint
    @severityCode = severityCode
    @errorParameters = errorParameters
    @errorClassification = errorClassification
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FaultDetailsType
#   errorCode - SOAP::SOAPString
#   severity - SOAP::SOAPString
#   detailedMessage - SOAP::SOAPString
class FaultDetailsType
  attr_accessor :errorCode
  attr_accessor :severity
  attr_accessor :detailedMessage
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(errorCode = nil, severity = nil, detailedMessage = nil)
    @errorCode = errorCode
    @severity = severity
    @detailedMessage = detailedMessage
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MeasureType
#   xmlattr_unit - SOAP::SOAPToken
#   xmlattr_measurementSystem - SOAP::SOAPToken
class MeasureType < ::String
  AttrMeasurementSystem = XSD::QName.new(nil, "measurementSystem")
  AttrUnit = XSD::QName.new(nil, "unit")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_unit
    __xmlattr[AttrUnit]
  end

  def xmlattr_unit=(value)
    __xmlattr[AttrUnit] = value
  end

  def xmlattr_measurementSystem
    __xmlattr[AttrMeasurementSystem]
  end

  def xmlattr_measurementSystem=(value)
    __xmlattr[AttrMeasurementSystem] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationType
#   entriesPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
class PaginationType
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(entriesPerPage = nil, pageNumber = nil)
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}QuantityType
#   xmlattr_unit - SOAP::SOAPToken
class QuantityType < ::String
  AttrUnit = XSD::QName.new(nil, "unit")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_unit
    __xmlattr[AttrUnit]
  end

  def xmlattr_unit=(value)
    __xmlattr[AttrUnit] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdPasswordType
#   appId - SOAP::SOAPString
#   devId - SOAP::SOAPString
#   authCert - SOAP::SOAPString
#   username - SOAP::SOAPString
#   password - SOAP::SOAPString
class UserIdPasswordType
  attr_accessor :appId
  attr_accessor :devId
  attr_accessor :authCert
  attr_accessor :username
  attr_accessor :password
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(appId = nil, devId = nil, authCert = nil, username = nil, password = nil)
    @appId = appId
    @devId = devId
    @authCert = authCert
    @username = username
    @password = password
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}XMLRequesterCredentialsType
#   username - SOAP::SOAPString
#   password - SOAP::SOAPString
#   eBayAuthToken - SOAP::SOAPString
class XMLRequesterCredentialsType
  attr_accessor :username
  attr_accessor :password
  attr_accessor :eBayAuthToken
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(username = nil, password = nil, eBayAuthToken = nil)
    @username = username
    @password = password
    @eBayAuthToken = eBayAuthToken
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ASQPreferencesType
#   resetDefaultSubjects - SOAP::SOAPBoolean
#   subject - SOAP::SOAPString
class ASQPreferencesType
  attr_accessor :resetDefaultSubjects
  attr_accessor :subject
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(resetDefaultSubjects = nil, subject = [])
    @resetDefaultSubjects = resetDefaultSubjects
    @subject = subject
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntriesType
#   accountEntry - AccountEntryType
class AccountEntriesType
  attr_accessor :accountEntry
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountEntry = [])
    @accountEntry = accountEntry
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntryType
#   accountDetailsEntryType - AccountDetailEntryCodeType
#   description - SOAP::SOAPString
#   balance - AmountType
#   date - SOAP::SOAPDateTime
#   grossDetailAmount - AmountType
#   itemID - (any)
#   memo - SOAP::SOAPString
#   netDetailAmount - AmountType
#   refNumber - SOAP::SOAPString
#   vATPercent - SOAP::SOAPDecimal
#   title - SOAP::SOAPString
class AccountEntryType
  attr_accessor :accountDetailsEntryType
  attr_accessor :description
  attr_accessor :balance
  attr_accessor :date
  attr_accessor :grossDetailAmount
  attr_accessor :itemID
  attr_accessor :memo
  attr_accessor :netDetailAmount
  attr_accessor :refNumber
  attr_accessor :vATPercent
  attr_accessor :title
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountDetailsEntryType = nil, description = nil, balance = nil, date = nil, grossDetailAmount = nil, itemID = nil, memo = nil, netDetailAmount = nil, refNumber = nil, vATPercent = nil, title = nil)
    @accountDetailsEntryType = accountDetailsEntryType
    @description = description
    @balance = balance
    @date = date
    @grossDetailAmount = grossDetailAmount
    @itemID = itemID
    @memo = memo
    @netDetailAmount = netDetailAmount
    @refNumber = refNumber
    @vATPercent = vATPercent
    @title = title
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountSummaryType
#   accountState - AccountStateCodeType
#   invoicePayment - AmountType
#   invoiceCredit - AmountType
#   invoiceNewFee - AmountType
#   additionalAccount - AdditionalAccountType
#   amountPastDue - AmountType
#   bankAccountInfo - SOAP::SOAPString
#   bankModifyDate - SOAP::SOAPDateTime
#   billingCycleDate - SOAP::SOAPInt
#   creditCardExpiration - SOAP::SOAPDateTime
#   creditCardInfo - SOAP::SOAPString
#   creditCardModifyDate - SOAP::SOAPDateTime
#   currentBalance - AmountType
#   email - SOAP::SOAPString
#   invoiceBalance - AmountType
#   invoiceDate - SOAP::SOAPDateTime
#   lastAmountPaid - AmountType
#   lastPaymentDate - SOAP::SOAPDateTime
#   pastDue - SOAP::SOAPBoolean
#   paymentMethod - SellerPaymentMethodCodeType
class AccountSummaryType
  attr_accessor :accountState
  attr_accessor :invoicePayment
  attr_accessor :invoiceCredit
  attr_accessor :invoiceNewFee
  attr_accessor :additionalAccount
  attr_accessor :amountPastDue
  attr_accessor :bankAccountInfo
  attr_accessor :bankModifyDate
  attr_accessor :billingCycleDate
  attr_accessor :creditCardExpiration
  attr_accessor :creditCardInfo
  attr_accessor :creditCardModifyDate
  attr_accessor :currentBalance
  attr_accessor :email
  attr_accessor :invoiceBalance
  attr_accessor :invoiceDate
  attr_accessor :lastAmountPaid
  attr_accessor :lastPaymentDate
  attr_accessor :pastDue
  attr_accessor :paymentMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountState = nil, invoicePayment = nil, invoiceCredit = nil, invoiceNewFee = nil, additionalAccount = [], amountPastDue = nil, bankAccountInfo = nil, bankModifyDate = nil, billingCycleDate = nil, creditCardExpiration = nil, creditCardInfo = nil, creditCardModifyDate = nil, currentBalance = nil, email = nil, invoiceBalance = nil, invoiceDate = nil, lastAmountPaid = nil, lastPaymentDate = nil, pastDue = nil, paymentMethod = nil)
    @accountState = accountState
    @invoicePayment = invoicePayment
    @invoiceCredit = invoiceCredit
    @invoiceNewFee = invoiceNewFee
    @additionalAccount = additionalAccount
    @amountPastDue = amountPastDue
    @bankAccountInfo = bankAccountInfo
    @bankModifyDate = bankModifyDate
    @billingCycleDate = billingCycleDate
    @creditCardExpiration = creditCardExpiration
    @creditCardInfo = creditCardInfo
    @creditCardModifyDate = creditCardModifyDate
    @currentBalance = currentBalance
    @email = email
    @invoiceBalance = invoiceBalance
    @invoiceDate = invoiceDate
    @lastAmountPaid = lastAmountPaid
    @lastPaymentDate = lastPaymentDate
    @pastDue = pastDue
    @paymentMethod = paymentMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatEnabledDefinitionType
class AdFormatEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatLeadType
#   additionalInformation - SOAP::SOAPString
#   address - AddressType
#   bestTimeToCall - SOAP::SOAPString
#   email - SOAP::SOAPString
#   submittedTime - SOAP::SOAPDateTime
#   itemID - (any)
#   itemTitle - SOAP::SOAPString
#   userID - (any)
#   memberMessage - MemberMessageExchangeArrayType
#   status - AdFormatLeadStatusCodeType
#   leadFee - AmountType
#   externalEmail - SOAP::SOAPString
#   purchaseTimeFrame - SOAP::SOAPString
#   tradeInYear - SOAP::SOAPString
#   tradeInMake - SOAP::SOAPString
#   tradeInModel - SOAP::SOAPString
#   financingAnswer - SOAP::SOAPBoolean
#   answer1 - SOAP::SOAPBoolean
#   answer2 - SOAP::SOAPBoolean
class AdFormatLeadType
  attr_accessor :additionalInformation
  attr_accessor :address
  attr_accessor :bestTimeToCall
  attr_accessor :email
  attr_accessor :submittedTime
  attr_accessor :itemID
  attr_accessor :itemTitle
  attr_accessor :userID
  attr_accessor :memberMessage
  attr_accessor :status
  attr_accessor :leadFee
  attr_accessor :externalEmail
  attr_accessor :purchaseTimeFrame
  attr_accessor :tradeInYear
  attr_accessor :tradeInMake
  attr_accessor :tradeInModel
  attr_accessor :financingAnswer
  attr_accessor :answer1
  attr_accessor :answer2
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(additionalInformation = nil, address = nil, bestTimeToCall = nil, email = nil, submittedTime = nil, itemID = nil, itemTitle = nil, userID = nil, memberMessage = nil, status = nil, leadFee = nil, externalEmail = nil, purchaseTimeFrame = nil, tradeInYear = nil, tradeInMake = nil, tradeInModel = nil, financingAnswer = nil, answer1 = nil, answer2 = nil)
    @additionalInformation = additionalInformation
    @address = address
    @bestTimeToCall = bestTimeToCall
    @email = email
    @submittedTime = submittedTime
    @itemID = itemID
    @itemTitle = itemTitle
    @userID = userID
    @memberMessage = memberMessage
    @status = status
    @leadFee = leadFee
    @externalEmail = externalEmail
    @purchaseTimeFrame = purchaseTimeFrame
    @tradeInYear = tradeInYear
    @tradeInMake = tradeInMake
    @tradeInModel = tradeInModel
    @financingAnswer = financingAnswer
    @answer1 = answer1
    @answer2 = answer2
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderRequestContainerType
#   correlationID - SOAP::SOAPString
#   itemID - SOAP::SOAPString
#   memberMessage - MemberMessageType
class AddMemberMessagesAAQToBidderRequestContainerType
  attr_accessor :correlationID
  attr_accessor :itemID
  attr_accessor :memberMessage

  def initialize(correlationID = nil, itemID = nil, memberMessage = nil)
    @correlationID = correlationID
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderResponseContainerType
#   correlationID - SOAP::SOAPString
#   ack - AckCodeType
class AddMemberMessagesAAQToBidderResponseContainerType
  attr_accessor :correlationID
  attr_accessor :ack

  def initialize(correlationID = nil, ack = nil)
    @correlationID = correlationID
    @ack = ack
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdditionalAccountType
#   balance - AmountType
#   currency - CurrencyCodeType
#   accountCode - SOAP::SOAPString
class AdditionalAccountType
  attr_accessor :balance
  attr_accessor :currency
  attr_accessor :accountCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(balance = nil, currency = nil, accountCode = nil)
    @balance = balance
    @currency = currency
    @accountCode = accountCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddressType
#   name - SOAP::SOAPString
#   street - SOAP::SOAPString
#   street1 - SOAP::SOAPString
#   street2 - SOAP::SOAPString
#   cityName - SOAP::SOAPString
#   county - SOAP::SOAPString
#   stateOrProvince - SOAP::SOAPString
#   country - CountryCodeType
#   countryName - SOAP::SOAPString
#   phone - SOAP::SOAPString
#   phoneCountryCode - CountryCodeType
#   phoneCountryPrefix - SOAP::SOAPString
#   phoneAreaOrCityCode - SOAP::SOAPString
#   phoneLocalNumber - SOAP::SOAPString
#   phone2CountryCode - CountryCodeType
#   phone2CountryPrefix - SOAP::SOAPString
#   phone2AreaOrCityCode - SOAP::SOAPString
#   phone2LocalNumber - SOAP::SOAPString
#   postalCode - SOAP::SOAPString
#   addressID - SOAP::SOAPString
#   addressOwner - AddressOwnerCodeType
#   addressStatus - AddressStatusCodeType
#   externalAddressID - SOAP::SOAPString
#   internationalName - SOAP::SOAPString
#   internationalStateAndCity - SOAP::SOAPString
#   internationalStreet - SOAP::SOAPString
#   companyName - SOAP::SOAPString
#   addressRecordType - AddressRecordTypeCodeType
#   firstName - SOAP::SOAPString
#   lastName - SOAP::SOAPString
#   phone2 - SOAP::SOAPString
class AddressType
  attr_accessor :name
  attr_accessor :street
  attr_accessor :street1
  attr_accessor :street2
  attr_accessor :cityName
  attr_accessor :county
  attr_accessor :stateOrProvince
  attr_accessor :country
  attr_accessor :countryName
  attr_accessor :phone
  attr_accessor :phoneCountryCode
  attr_accessor :phoneCountryPrefix
  attr_accessor :phoneAreaOrCityCode
  attr_accessor :phoneLocalNumber
  attr_accessor :phone2CountryCode
  attr_accessor :phone2CountryPrefix
  attr_accessor :phone2AreaOrCityCode
  attr_accessor :phone2LocalNumber
  attr_accessor :postalCode
  attr_accessor :addressID
  attr_accessor :addressOwner
  attr_accessor :addressStatus
  attr_accessor :externalAddressID
  attr_accessor :internationalName
  attr_accessor :internationalStateAndCity
  attr_accessor :internationalStreet
  attr_accessor :companyName
  attr_accessor :addressRecordType
  attr_accessor :firstName
  attr_accessor :lastName
  attr_accessor :phone2
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, street = nil, street1 = nil, street2 = nil, cityName = nil, county = nil, stateOrProvince = nil, country = nil, countryName = nil, phone = nil, phoneCountryCode = nil, phoneCountryPrefix = nil, phoneAreaOrCityCode = nil, phoneLocalNumber = nil, phone2CountryCode = nil, phone2CountryPrefix = nil, phone2AreaOrCityCode = nil, phone2LocalNumber = nil, postalCode = nil, addressID = nil, addressOwner = nil, addressStatus = nil, externalAddressID = nil, internationalName = nil, internationalStateAndCity = nil, internationalStreet = nil, companyName = nil, addressRecordType = nil, firstName = nil, lastName = nil, phone2 = nil)
    @name = name
    @street = street
    @street1 = street1
    @street2 = street2
    @cityName = cityName
    @county = county
    @stateOrProvince = stateOrProvince
    @country = country
    @countryName = countryName
    @phone = phone
    @phoneCountryCode = phoneCountryCode
    @phoneCountryPrefix = phoneCountryPrefix
    @phoneAreaOrCityCode = phoneAreaOrCityCode
    @phoneLocalNumber = phoneLocalNumber
    @phone2CountryCode = phone2CountryCode
    @phone2CountryPrefix = phone2CountryPrefix
    @phone2AreaOrCityCode = phone2AreaOrCityCode
    @phone2LocalNumber = phone2LocalNumber
    @postalCode = postalCode
    @addressID = addressID
    @addressOwner = addressOwner
    @addressStatus = addressStatus
    @externalAddressID = externalAddressID
    @internationalName = internationalName
    @internationalStateAndCity = internationalStateAndCity
    @internationalStreet = internationalStreet
    @companyName = companyName
    @addressRecordType = addressRecordType
    @firstName = firstName
    @lastName = lastName
    @phone2 = phone2
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AffiliateTrackingDetailsType
#   trackingID - SOAP::SOAPString
#   trackingPartnerCode - SOAP::SOAPString
#   applicationDeviceType - ApplicationDeviceTypeCodeType
#   affiliateUserID - SOAP::SOAPString
class AffiliateTrackingDetailsType
  attr_accessor :trackingID
  attr_accessor :trackingPartnerCode
  attr_accessor :applicationDeviceType
  attr_accessor :affiliateUserID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(trackingID = nil, trackingPartnerCode = nil, applicationDeviceType = nil, affiliateUserID = nil)
    @trackingID = trackingID
    @trackingPartnerCode = trackingPartnerCode
    @applicationDeviceType = applicationDeviceType
    @affiliateUserID = affiliateUserID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AmountType
#   xmlattr_currencyID - SOAP::SOAPToken
class AmountType < ::String
  AttrCurrencyID = XSD::QName.new(nil, "currencyID")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_currencyID
    __xmlattr[AttrCurrencyID]
  end

  def xmlattr_currencyID=(value)
    __xmlattr[AttrCurrencyID] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AnnouncementMessageType
#   announcementStartTime - SOAP::SOAPDateTime
#   eventTime - SOAP::SOAPDateTime
#   messageType - AnnouncementMessageCodeType
class AnnouncementMessageType
  attr_accessor :announcementStartTime
  attr_accessor :eventTime
  attr_accessor :messageType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(announcementStartTime = nil, eventTime = nil, messageType = nil)
    @announcementStartTime = announcementStartTime
    @eventTime = eventTime
    @messageType = messageType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApiAccessRuleType
#   callName - SOAP::SOAPString
#   countsTowardAggregate - SOAP::SOAPBoolean
#   dailyHardLimit - SOAP::SOAPLong
#   dailySoftLimit - SOAP::SOAPLong
#   dailyUsage - SOAP::SOAPLong
#   hourlyHardLimit - SOAP::SOAPLong
#   hourlySoftLimit - SOAP::SOAPLong
#   hourlyUsage - SOAP::SOAPLong
#   period - SOAP::SOAPInt
#   periodicHardLimit - SOAP::SOAPLong
#   periodicSoftLimit - SOAP::SOAPLong
#   periodicUsage - SOAP::SOAPLong
#   periodicStartDate - SOAP::SOAPDateTime
#   modTime - SOAP::SOAPDateTime
#   ruleCurrentStatus - AccessRuleCurrentStatusCodeType
#   ruleStatus - AccessRuleStatusCodeType
class ApiAccessRuleType
  attr_accessor :callName
  attr_accessor :countsTowardAggregate
  attr_accessor :dailyHardLimit
  attr_accessor :dailySoftLimit
  attr_accessor :dailyUsage
  attr_accessor :hourlyHardLimit
  attr_accessor :hourlySoftLimit
  attr_accessor :hourlyUsage
  attr_accessor :period
  attr_accessor :periodicHardLimit
  attr_accessor :periodicSoftLimit
  attr_accessor :periodicUsage
  attr_accessor :periodicStartDate
  attr_accessor :modTime
  attr_accessor :ruleCurrentStatus
  attr_accessor :ruleStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(callName = nil, countsTowardAggregate = nil, dailyHardLimit = nil, dailySoftLimit = nil, dailyUsage = nil, hourlyHardLimit = nil, hourlySoftLimit = nil, hourlyUsage = nil, period = nil, periodicHardLimit = nil, periodicSoftLimit = nil, periodicUsage = nil, periodicStartDate = nil, modTime = nil, ruleCurrentStatus = nil, ruleStatus = nil)
    @callName = callName
    @countsTowardAggregate = countsTowardAggregate
    @dailyHardLimit = dailyHardLimit
    @dailySoftLimit = dailySoftLimit
    @dailyUsage = dailyUsage
    @hourlyHardLimit = hourlyHardLimit
    @hourlySoftLimit = hourlySoftLimit
    @hourlyUsage = hourlyUsage
    @period = period
    @periodicHardLimit = periodicHardLimit
    @periodicSoftLimit = periodicSoftLimit
    @periodicUsage = periodicUsage
    @periodicStartDate = periodicStartDate
    @modTime = modTime
    @ruleCurrentStatus = ruleCurrentStatus
    @ruleStatus = ruleStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApplicationDeliveryPreferencesType
#   applicationURL - SOAP::SOAPAnyURI
#   applicationEnable - EnableCodeType
#   alertEmail - SOAP::SOAPAnyURI
#   alertEnable - EnableCodeType
#   notificationPayloadType - NotificationPayloadTypeCodeType
#   deviceType - DeviceTypeCodeType
#   payloadVersion - SOAP::SOAPString
#   deliveryURLDetails - DeliveryURLDetailType
class ApplicationDeliveryPreferencesType
  attr_accessor :applicationURL
  attr_accessor :applicationEnable
  attr_accessor :alertEmail
  attr_accessor :alertEnable
  attr_accessor :notificationPayloadType
  attr_accessor :deviceType
  attr_accessor :payloadVersion
  attr_accessor :deliveryURLDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationURL = nil, applicationEnable = nil, alertEmail = nil, alertEnable = nil, notificationPayloadType = nil, deviceType = nil, payloadVersion = nil, deliveryURLDetails = [])
    @applicationURL = applicationURL
    @applicationEnable = applicationEnable
    @alertEmail = alertEmail
    @alertEnable = alertEnable
    @notificationPayloadType = notificationPayloadType
    @deviceType = deviceType
    @payloadVersion = payloadVersion
    @deliveryURLDetails = deliveryURLDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeArrayType
class AttributeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}AttributeRecommendationsType
#   attributeSetArray - AttributeSetArrayType
class AttributeRecommendationsType
  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetArrayType
class AttributeSetArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetType
#   attribute - AttributeType
#   xmlattr_attributeSetID - SOAP::SOAPInt
#   xmlattr_attributeSetVersion - SOAP::SOAPString
class AttributeSetType
  AttrAttributeSetID = XSD::QName.new(nil, "attributeSetID")
  AttrAttributeSetVersion = XSD::QName.new(nil, "attributeSetVersion")

  attr_accessor :attribute
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_attributeSetID
    __xmlattr[AttrAttributeSetID]
  end

  def xmlattr_attributeSetID=(value)
    __xmlattr[AttrAttributeSetID] = value
  end

  def xmlattr_attributeSetVersion
    __xmlattr[AttrAttributeSetVersion]
  end

  def xmlattr_attributeSetVersion=(value)
    __xmlattr[AttrAttributeSetVersion] = value
  end

  def initialize(attribute = [])
    @attribute = attribute
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeType
#   value - ValType
#   xmlattr_attributeID - SOAP::SOAPInt
#   xmlattr_attributeLabel - SOAP::SOAPString
class AttributeType
  AttrAttributeID = XSD::QName.new(nil, "attributeID")
  AttrAttributeLabel = XSD::QName.new(nil, "attributeLabel")

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_attributeID
    __xmlattr[AttrAttributeID]
  end

  def xmlattr_attributeID=(value)
    __xmlattr[AttrAttributeID] = value
  end

  def xmlattr_attributeLabel
    __xmlattr[AttrAttributeLabel]
  end

  def xmlattr_attributeLabel=(value)
    __xmlattr[AttrAttributeLabel] = value
  end

  def initialize(value = [])
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AverageRatingDetailArrayType
class AverageRatingDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}AverageRatingDetailsType
#   ratingDetail - FeedbackRatingDetailCodeType
#   rating - SOAP::SOAPDouble
#   ratingCount - SOAP::SOAPInt
class AverageRatingDetailsType
  attr_accessor :ratingDetail
  attr_accessor :rating
  attr_accessor :ratingCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(ratingDetail = nil, rating = nil, ratingCount = nil)
    @ratingDetail = ratingDetail
    @rating = rating
    @ratingCount = ratingCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AverageRatingSummaryType
#   feedbackSummaryPeriod - FeedbackSummaryPeriodCodeType
#   averageRatingDetails - AverageRatingDetailsType
class AverageRatingSummaryType
  attr_accessor :feedbackSummaryPeriod
  attr_accessor :averageRatingDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(feedbackSummaryPeriod = nil, averageRatingDetails = [])
    @feedbackSummaryPeriod = feedbackSummaryPeriod
    @averageRatingDetails = averageRatingDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}Base64BinaryType
#   xmlattr_contentType - SOAP::SOAPString
class Base64BinaryType < ::String
  AttrContentType = XSD::QName.new(nil, "contentType")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_contentType
    __xmlattr[AttrContentType]
  end

  def xmlattr_contentType=(value)
    __xmlattr[AttrContentType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicAmountType
#   xmlattr_currencyID - SOAP::SOAPToken
class BasicAmountType < ::String
  AttrCurrencyID = XSD::QName.new(nil, "currencyID")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_currencyID
    __xmlattr[AttrCurrencyID]
  end

  def xmlattr_currencyID=(value)
    __xmlattr[AttrCurrencyID] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicUpgradePackEnabledDefinitionType
class BasicUpgradePackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferArrayType
class BestOfferArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferAutoAcceptEnabledDefinitionType
class BestOfferAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferAutoDeclineEnabledDefinitionType
class BestOfferAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferCounterEnabledDefinitionType
class BestOfferCounterEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferDetailsType
#   bestOfferCount - SOAP::SOAPInt
#   bestOfferEnabled - SOAP::SOAPBoolean
#   bestOffer - AmountType
#   bestOfferStatus - BestOfferStatusCodeType
#   bestOfferType - BestOfferTypeCodeType
class BestOfferDetailsType
  attr_accessor :bestOfferCount
  attr_accessor :bestOfferEnabled
  attr_accessor :bestOffer
  attr_accessor :bestOfferStatus
  attr_accessor :bestOfferType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferCount = nil, bestOfferEnabled = nil, bestOffer = nil, bestOfferStatus = nil, bestOfferType = nil)
    @bestOfferCount = bestOfferCount
    @bestOfferEnabled = bestOfferEnabled
    @bestOffer = bestOffer
    @bestOfferStatus = bestOfferStatus
    @bestOfferType = bestOfferType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferEnabledDefinitionType
class BestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferType
#   bestOfferID - (any)
#   expirationTime - SOAP::SOAPDateTime
#   buyer - UserType
#   price - AmountType
#   status - BestOfferStatusCodeType
#   quantity - SOAP::SOAPInt
#   buyerMessage - SOAP::SOAPString
#   sellerMessage - SOAP::SOAPString
#   bestOfferCodeType - BestOfferTypeCodeType
#   callStatus - SOAP::SOAPString
class BestOfferType
  attr_accessor :bestOfferID
  attr_accessor :expirationTime
  attr_accessor :buyer
  attr_accessor :price
  attr_accessor :status
  attr_accessor :quantity
  attr_accessor :buyerMessage
  attr_accessor :sellerMessage
  attr_accessor :bestOfferCodeType
  attr_accessor :callStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferID = nil, expirationTime = nil, buyer = nil, price = nil, status = nil, quantity = nil, buyerMessage = nil, sellerMessage = nil, bestOfferCodeType = nil, callStatus = nil)
    @bestOfferID = bestOfferID
    @expirationTime = expirationTime
    @buyer = buyer
    @price = price
    @status = status
    @quantity = quantity
    @buyerMessage = buyerMessage
    @sellerMessage = sellerMessage
    @bestOfferCodeType = bestOfferCodeType
    @callStatus = callStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidApprovalArrayType
#   liveAuctionBid - BidApprovalType
class BidApprovalArrayType
  attr_accessor :liveAuctionBid
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(liveAuctionBid = [])
    @liveAuctionBid = liveAuctionBid
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidApprovalType
#   userID - (any)
#   approvedBiddingLimit - AmountType
#   declinedComment - SOAP::SOAPString
#   status - BidderStatusCodeType
class BidApprovalType
  attr_accessor :userID
  attr_accessor :approvedBiddingLimit
  attr_accessor :declinedComment
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, approvedBiddingLimit = nil, declinedComment = nil, status = nil)
    @userID = userID
    @approvedBiddingLimit = approvedBiddingLimit
    @declinedComment = declinedComment
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidAssistantListType
#   bidGroupID - SOAP::SOAPLong
#   includeNotes - SOAP::SOAPBoolean
class BidAssistantListType
  attr_accessor :bidGroupID
  attr_accessor :includeNotes
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidGroupID = nil, includeNotes = nil)
    @bidGroupID = bidGroupID
    @includeNotes = includeNotes
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupArrayType
class BidGroupArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupItemType
#   item - ItemType
#   bidGroupItemStatus - BidGroupItemStatusCodeType
#   maxBidAmount - AmountType
class BidGroupItemType
  attr_accessor :item
  attr_accessor :bidGroupItemStatus
  attr_accessor :maxBidAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, bidGroupItemStatus = nil, maxBidAmount = nil)
    @item = item
    @bidGroupItemStatus = bidGroupItemStatus
    @maxBidAmount = maxBidAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupType
#   bidGroupItem - BidGroupItemType
#   bidGroupID - SOAP::SOAPLong
#   bidGroupName - SOAP::SOAPString
#   bidGroupStatus - BidGroupStatusCodeType
class BidGroupType
  attr_accessor :bidGroupItem
  attr_accessor :bidGroupID
  attr_accessor :bidGroupName
  attr_accessor :bidGroupStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidGroupItem = [], bidGroupID = nil, bidGroupName = nil, bidGroupStatus = nil)
    @bidGroupItem = bidGroupItem
    @bidGroupID = bidGroupID
    @bidGroupName = bidGroupName
    @bidGroupStatus = bidGroupStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidRangeType
#   minimumBidCount - SOAP::SOAPInt
#   maximumBidCount - SOAP::SOAPInt
class BidRangeType
  attr_accessor :minimumBidCount
  attr_accessor :maximumBidCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(minimumBidCount = nil, maximumBidCount = nil)
    @minimumBidCount = minimumBidCount
    @maximumBidCount = maximumBidCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderDetailArrayType
class BidderDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}BidderDetailType
#   userID - (any)
#   email - SOAP::SOAPString
#   feedbackScore - SOAP::SOAPInt
#   uniqueNegativeFeedbackCount - SOAP::SOAPInt
#   uniquePositiveFeedbackCount - SOAP::SOAPInt
#   liveAuctionBidResult - LiveAuctionBidType
#   uniqueNeutralFeedbackCount - SOAP::SOAPInt
class BidderDetailType
  attr_accessor :userID
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :liveAuctionBidResult
  attr_accessor :uniqueNeutralFeedbackCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, liveAuctionBidResult = nil, uniqueNeutralFeedbackCount = nil)
    @userID = userID
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @liveAuctionBidResult = liveAuctionBidResult
    @uniqueNeutralFeedbackCount = uniqueNeutralFeedbackCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderNoticePreferencesType
#   unsuccessfulBidderNoticeIncludeMyItems - SOAP::SOAPBoolean
class BidderNoticePreferencesType
  attr_accessor :unsuccessfulBidderNoticeIncludeMyItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unsuccessfulBidderNoticeIncludeMyItems = nil)
    @unsuccessfulBidderNoticeIncludeMyItems = unsuccessfulBidderNoticeIncludeMyItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BiddingDetailsType
#   convertedMaxBid - AmountType
#   maxBid - AmountType
#   quantityBid - SOAP::SOAPInt
#   quantityWon - SOAP::SOAPInt
#   winning - SOAP::SOAPBoolean
#   bidAssistant - SOAP::SOAPBoolean
class BiddingDetailsType
  attr_accessor :convertedMaxBid
  attr_accessor :maxBid
  attr_accessor :quantityBid
  attr_accessor :quantityWon
  attr_accessor :winning
  attr_accessor :bidAssistant
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(convertedMaxBid = nil, maxBid = nil, quantityBid = nil, quantityWon = nil, winning = nil, bidAssistant = nil)
    @convertedMaxBid = convertedMaxBid
    @maxBid = maxBid
    @quantityBid = quantityBid
    @quantityWon = quantityWon
    @winning = winning
    @bidAssistant = bidAssistant
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BiddingSummaryType
#   summaryDays - SOAP::SOAPInt
#   totalBids - SOAP::SOAPInt
#   bidActivityWithSeller - SOAP::SOAPInt
#   bidsToUniqueSellers - SOAP::SOAPInt
#   bidsToUniqueCategories - SOAP::SOAPInt
#   bidRetractions - SOAP::SOAPInt
#   itemBidDetails - ItemBidDetailsType
class BiddingSummaryType
  attr_accessor :summaryDays
  attr_accessor :totalBids
  attr_accessor :bidActivityWithSeller
  attr_accessor :bidsToUniqueSellers
  attr_accessor :bidsToUniqueCategories
  attr_accessor :bidRetractions
  attr_accessor :itemBidDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(summaryDays = nil, totalBids = nil, bidActivityWithSeller = nil, bidsToUniqueSellers = nil, bidsToUniqueCategories = nil, bidRetractions = nil, itemBidDetails = [])
    @summaryDays = summaryDays
    @totalBids = totalBids
    @bidActivityWithSeller = bidActivityWithSeller
    @bidsToUniqueSellers = bidsToUniqueSellers
    @bidsToUniqueCategories = bidsToUniqueCategories
    @bidRetractions = bidRetractions
    @itemBidDetails = itemBidDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BusinessSellerDetailsType
#   address - AddressType
#   fax - SOAP::SOAPString
#   email - SOAP::SOAPString
#   additionalContactInformation - SOAP::SOAPString
#   tradeRegistrationNumber - SOAP::SOAPString
#   legalInvoice - SOAP::SOAPBoolean
#   termsAndConditions - SOAP::SOAPString
#   vATDetails - VATDetailsType
class BusinessSellerDetailsType
  attr_accessor :address
  attr_accessor :fax
  attr_accessor :email
  attr_accessor :additionalContactInformation
  attr_accessor :tradeRegistrationNumber
  attr_accessor :legalInvoice
  attr_accessor :termsAndConditions
  attr_accessor :vATDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(address = nil, fax = nil, email = nil, additionalContactInformation = nil, tradeRegistrationNumber = nil, legalInvoice = nil, termsAndConditions = nil, vATDetails = nil)
    @address = address
    @fax = fax
    @email = email
    @additionalContactInformation = additionalContactInformation
    @tradeRegistrationNumber = tradeRegistrationNumber
    @legalInvoice = legalInvoice
    @termsAndConditions = termsAndConditions
    @vATDetails = vATDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerGuaranteeEnabledDefinitionType
class BuyerGuaranteeEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionDetailsType
#   buyerProtectionSource - BuyerProtectionSourceCodeType
#   buyerProtectionStatus - BuyerProtectionCodeType
class BuyerProtectionDetailsType
  attr_accessor :buyerProtectionSource
  attr_accessor :buyerProtectionStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyerProtectionSource = nil, buyerProtectionStatus = nil)
    @buyerProtectionSource = buyerProtectionSource
    @buyerProtectionStatus = buyerProtectionStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerRequirementDetailsType
#   shipToRegistrationCountry - SOAP::SOAPBoolean
#   zeroFeedbackScore - SOAP::SOAPBoolean
#   minimumFeedbackScore - SOAP::SOAPInt
#   maximumItemRequirements - MaximumItemRequirementsType
#   linkedPayPalAccount - SOAP::SOAPBoolean
#   verifiedUserRequirements - VerifiedUserRequirementsType
#   maximumUnpaidItemStrikesInfo - MaximumUnpaidItemStrikesInfoType
#   maximumBuyerPolicyViolations - MaximumBuyerPolicyViolationsType
class BuyerRequirementDetailsType
  attr_accessor :shipToRegistrationCountry
  attr_accessor :zeroFeedbackScore
  attr_accessor :minimumFeedbackScore
  attr_accessor :maximumItemRequirements
  attr_accessor :linkedPayPalAccount
  attr_accessor :verifiedUserRequirements
  attr_accessor :maximumUnpaidItemStrikesInfo
  attr_accessor :maximumBuyerPolicyViolations
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shipToRegistrationCountry = nil, zeroFeedbackScore = nil, minimumFeedbackScore = nil, maximumItemRequirements = nil, linkedPayPalAccount = nil, verifiedUserRequirements = nil, maximumUnpaidItemStrikesInfo = nil, maximumBuyerPolicyViolations = nil)
    @shipToRegistrationCountry = shipToRegistrationCountry
    @zeroFeedbackScore = zeroFeedbackScore
    @minimumFeedbackScore = minimumFeedbackScore
    @maximumItemRequirements = maximumItemRequirements
    @linkedPayPalAccount = linkedPayPalAccount
    @verifiedUserRequirements = verifiedUserRequirements
    @maximumUnpaidItemStrikesInfo = maximumUnpaidItemStrikesInfo
    @maximumBuyerPolicyViolations = maximumBuyerPolicyViolations
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerRoleMetricsType
#   positiveFeedbackLeftCount - SOAP::SOAPInt
#   negativeFeedbackLeftCount - SOAP::SOAPInt
#   neutralFeedbackLeftCount - SOAP::SOAPInt
#   feedbackLeftPercent - SOAP::SOAPFloat
class BuyerRoleMetricsType
  attr_accessor :positiveFeedbackLeftCount
  attr_accessor :negativeFeedbackLeftCount
  attr_accessor :neutralFeedbackLeftCount
  attr_accessor :feedbackLeftPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(positiveFeedbackLeftCount = nil, negativeFeedbackLeftCount = nil, neutralFeedbackLeftCount = nil, feedbackLeftPercent = nil)
    @positiveFeedbackLeftCount = positiveFeedbackLeftCount
    @negativeFeedbackLeftCount = negativeFeedbackLeftCount
    @neutralFeedbackLeftCount = neutralFeedbackLeftCount
    @feedbackLeftPercent = feedbackLeftPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerSatisfactionDashboardType
#   status - BuyerSatisfactionStatusCodeType
#   alert - SellerDashboardAlertType
class BuyerSatisfactionDashboardType
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, alert = [])
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerType
#   shippingAddress - AddressType
class BuyerType
  attr_accessor :shippingAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingAddress = nil)
    @shippingAddress = shippingAddress
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideDetailsType
#   buyingGuide - BuyingGuideType
#   buyingGuideHub - SOAP::SOAPAnyURI
class BuyingGuideDetailsType
  attr_accessor :buyingGuide
  attr_accessor :buyingGuideHub
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyingGuide = [], buyingGuideHub = nil)
    @buyingGuide = buyingGuide
    @buyingGuideHub = buyingGuideHub
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideType
#   name - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
#   categoryID - SOAP::SOAPString
#   productFinderID - SOAP::SOAPInt
#   title - SOAP::SOAPString
#   text - SOAP::SOAPString
#   creationTime - SOAP::SOAPDateTime
#   userID - (any)
class BuyingGuideType
  attr_accessor :name
  attr_accessor :uRL
  attr_accessor :categoryID
  attr_accessor :productFinderID
  attr_accessor :title
  attr_accessor :text
  attr_accessor :creationTime
  attr_accessor :userID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRL = nil, categoryID = nil, productFinderID = nil, title = nil, text = nil, creationTime = nil, userID = nil)
    @name = name
    @uRL = uRL
    @categoryID = categoryID
    @productFinderID = productFinderID
    @title = title
    @text = text
    @creationTime = creationTime
    @userID = userID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingSummaryType
#   biddingCount - SOAP::SOAPInt
#   winningCount - SOAP::SOAPInt
#   totalWinningCost - AmountType
#   wonCount - SOAP::SOAPInt
#   totalWonCost - AmountType
#   wonDurationInDays - SOAP::SOAPInt
#   bestOfferCount - SOAP::SOAPInt
class BuyingSummaryType
  attr_accessor :biddingCount
  attr_accessor :winningCount
  attr_accessor :totalWinningCost
  attr_accessor :wonCount
  attr_accessor :totalWonCost
  attr_accessor :wonDurationInDays
  attr_accessor :bestOfferCount

  def initialize(biddingCount = nil, winningCount = nil, totalWinningCost = nil, wonCount = nil, totalWonCost = nil, wonDurationInDays = nil, bestOfferCount = nil)
    @biddingCount = biddingCount
    @winningCount = winningCount
    @totalWinningCost = totalWinningCost
    @wonCount = wonCount
    @totalWonCost = totalWonCost
    @wonDurationInDays = wonDurationInDays
    @bestOfferCount = bestOfferCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedHandlingDiscountType
#   discountName - HandlingNameCodeType
#   orderHandlingAmount - AmountType
#   eachAdditionalAmount - AmountType
#   eachAdditionalOffAmount - AmountType
#   eachAdditionalPercentOff - SOAP::SOAPFloat
class CalculatedHandlingDiscountType
  attr_accessor :discountName
  attr_accessor :orderHandlingAmount
  attr_accessor :eachAdditionalAmount
  attr_accessor :eachAdditionalOffAmount
  attr_accessor :eachAdditionalPercentOff
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, orderHandlingAmount = nil, eachAdditionalAmount = nil, eachAdditionalOffAmount = nil, eachAdditionalPercentOff = nil)
    @discountName = discountName
    @orderHandlingAmount = orderHandlingAmount
    @eachAdditionalAmount = eachAdditionalAmount
    @eachAdditionalOffAmount = eachAdditionalOffAmount
    @eachAdditionalPercentOff = eachAdditionalPercentOff
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingDiscountType
#   discountName - DiscountNameCodeType
#   discountProfile - DiscountProfileType
class CalculatedShippingDiscountType
  attr_accessor :discountName
  attr_accessor :discountProfile
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, discountProfile = [])
    @discountName = discountName
    @discountProfile = discountProfile
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingPreferencesType
#   calculatedShippingAmountForEntireOrder - AmountType
#   calculatedShippingChargeOption - CalculatedShippingChargeOptionCodeType
#   calculatedShippingRateOption - CalculatedShippingRateOptionCodeType
#   insuranceOption - InsuranceOptionCodeType
class CalculatedShippingPreferencesType
  attr_accessor :calculatedShippingAmountForEntireOrder
  attr_accessor :calculatedShippingChargeOption
  attr_accessor :calculatedShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingAmountForEntireOrder = nil, calculatedShippingChargeOption = nil, calculatedShippingRateOption = nil, insuranceOption = nil)
    @calculatedShippingAmountForEntireOrder = calculatedShippingAmountForEntireOrder
    @calculatedShippingChargeOption = calculatedShippingChargeOption
    @calculatedShippingRateOption = calculatedShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateType
#   originatingPostalCode - SOAP::SOAPString
#   measurementUnit - MeasurementSystemCodeType
#   packageDepth - MeasureType
#   packageLength - MeasureType
#   packageWidth - MeasureType
#   packagingHandlingCosts - AmountType
#   shippingIrregular - SOAP::SOAPBoolean
#   shippingPackage - ShippingPackageCodeType
#   weightMajor - MeasureType
#   weightMinor - MeasureType
#   internationalPackagingHandlingCosts - AmountType
class CalculatedShippingRateType
  attr_accessor :originatingPostalCode
  attr_accessor :measurementUnit
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :packagingHandlingCosts
  attr_accessor :shippingIrregular
  attr_accessor :shippingPackage
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :internationalPackagingHandlingCosts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originatingPostalCode = nil, measurementUnit = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, packagingHandlingCosts = nil, shippingIrregular = nil, shippingPackage = nil, weightMajor = nil, weightMinor = nil, internationalPackagingHandlingCosts = nil)
    @originatingPostalCode = originatingPostalCode
    @measurementUnit = measurementUnit
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @packagingHandlingCosts = packagingHandlingCosts
    @shippingIrregular = shippingIrregular
    @shippingPackage = shippingPackage
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @internationalPackagingHandlingCosts = internationalPackagingHandlingCosts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferArrayType
#   cancelOffer - CancelOfferType
class CancelOfferArrayType
  attr_accessor :cancelOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(cancelOffer = [])
    @cancelOffer = cancelOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferType
#   offer - OfferType
#   explanation - SOAP::SOAPString
class CancelOfferType
  attr_accessor :offer
  attr_accessor :explanation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(offer = nil, explanation = nil)
    @offer = offer
    @explanation = explanation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CartItemType
#   item - ItemType
#   referenceID - SOAP::SOAPLong
#   action - ModifyActionCodeType
class CartItemType
  attr_accessor :item
  attr_accessor :referenceID
  attr_accessor :action
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, referenceID = nil, action = nil)
    @item = item
    @referenceID = referenceID
    @action = action
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CatalogProductType
#   title - SOAP::SOAPString
#   detailsURL - SOAP::SOAPAnyURI
#   stockPhotoURL - SOAP::SOAPAnyURI
#   displayStockPhotos - SOAP::SOAPBoolean
#   itemCount - SOAP::SOAPInt
#   externalProductID - ExternalProductIDType
#   productReferenceID - SOAP::SOAPLong
#   attributeSetID - SOAP::SOAPInt
#   itemSpecifics - NameValueListArrayType
#   reviewCount - SOAP::SOAPInt
#   reviewDetails - ReviewDetailsType
#   productState - ProductStateCodeType
class CatalogProductType
  attr_accessor :title
  attr_accessor :detailsURL
  attr_accessor :stockPhotoURL
  attr_accessor :displayStockPhotos
  attr_accessor :itemCount
  attr_accessor :externalProductID
  attr_accessor :productReferenceID
  attr_accessor :attributeSetID
  attr_accessor :itemSpecifics
  attr_accessor :reviewCount
  attr_accessor :reviewDetails
  attr_accessor :productState
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(title = nil, detailsURL = nil, stockPhotoURL = nil, displayStockPhotos = nil, itemCount = nil, externalProductID = nil, productReferenceID = nil, attributeSetID = nil, itemSpecifics = nil, reviewCount = nil, reviewDetails = nil, productState = nil)
    @title = title
    @detailsURL = detailsURL
    @stockPhotoURL = stockPhotoURL
    @displayStockPhotos = displayStockPhotos
    @itemCount = itemCount
    @externalProductID = externalProductID
    @productReferenceID = productReferenceID
    @attributeSetID = attributeSetID
    @itemSpecifics = itemSpecifics
    @reviewCount = reviewCount
    @reviewDetails = reviewDetails
    @productState = productState
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryArrayType
class CategoryArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureType
#   categoryID - SOAP::SOAPString
#   listingDuration - ListingDurationReferenceType
#   shippingTermsRequired - SOAP::SOAPBoolean
#   bestOfferEnabled - SOAP::SOAPBoolean
#   dutchBINEnabled - SOAP::SOAPBoolean
#   userConsentRequired - SOAP::SOAPBoolean
#   homePageFeaturedEnabled - SOAP::SOAPBoolean
#   proPackEnabled - SOAP::SOAPBoolean
#   basicUpgradePackEnabled - SOAP::SOAPBoolean
#   valuePackEnabled - SOAP::SOAPBoolean
#   proPackPlusEnabled - SOAP::SOAPBoolean
#   adFormatEnabled - AdFormatEnabledCodeType
#   bestOfferCounterEnabled - SOAP::SOAPBoolean
#   bestOfferAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketSpecialitySubscription - SOAP::SOAPBoolean
#   localMarketRegularSubscription - SOAP::SOAPBoolean
#   localMarketPremiumSubscription - SOAP::SOAPBoolean
#   localMarketNonSubscription - SOAP::SOAPBoolean
#   expressEnabled - SOAP::SOAPBoolean
#   expressPicturesRequired - SOAP::SOAPBoolean
#   expressConditionRequired - SOAP::SOAPBoolean
#   minimumReservePrice - SOAP::SOAPDouble
#   sellerContactDetailsEnabled - SOAP::SOAPBoolean
#   transactionConfirmationRequestEnabled - SOAP::SOAPBoolean
#   storeInventoryEnabled - SOAP::SOAPBoolean
#   skypeMeTransactionalEnabled - SOAP::SOAPBoolean
#   skypeMeNonTransactionalEnabled - SOAP::SOAPBoolean
#   classifiedAdPaymentMethodEnabled - ClassifiedAdPaymentMethodEnabledCodeType
#   classifiedAdShippingMethodEnabled - SOAP::SOAPBoolean
#   classifiedAdBestOfferEnabled - ClassifiedAdBestOfferEnabledCodeType
#   classifiedAdCounterOfferEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoDeclineEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByPhoneEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByEmailEnabled - SOAP::SOAPBoolean
#   safePaymentRequired - SOAP::SOAPBoolean
#   classifiedAdPayPerLeadEnabled - SOAP::SOAPBoolean
#   itemSpecificsEnabled - ItemSpecificsEnabledCodeType
#   paisaPayFullEscrowEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoAcceptEnabled - SOAP::SOAPBoolean
#   bestOfferAutoAcceptEnabled - SOAP::SOAPBoolean
#   crossBorderTradeNorthAmericaEnabled - SOAP::SOAPBoolean
#   crossBorderTradeGBEnabled - SOAP::SOAPBoolean
#   crossBorderTradeAustraliaEnabled - SOAP::SOAPBoolean
#   payPalBuyerProtectionEnabled - SOAP::SOAPBoolean
#   buyerGuaranteeEnabled - SOAP::SOAPBoolean
#   combinedFixedPriceTreatmentEnabled - SOAP::SOAPBoolean
#   galleryFeaturedDurations - ListingEnhancementDurationReferenceType
#   payPalRequired - SOAP::SOAPBoolean
#   eBayMotorsProAdFormatEnabled - AdFormatEnabledCodeType
#   eBayMotorsProContactByPhoneEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPhoneCount - SOAP::SOAPInt
#   eBayMotorsProContactByAddressEnabled - SOAP::SOAPBoolean
#   eBayMotorsProStreetCount - SOAP::SOAPInt
#   eBayMotorsProCompanyNameEnabled - SOAP::SOAPBoolean
#   eBayMotorsProContactByEmailEnabled - SOAP::SOAPBoolean
#   eBayMotorsProBestOfferEnabled - ClassifiedAdBestOfferEnabledCodeType
#   eBayMotorsProAutoAcceptEnabled - SOAP::SOAPBoolean
#   eBayMotorsProAutoDeclineEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPaymentMethodCheckOutEnabled - ClassifiedAdPaymentMethodEnabledCodeType
#   eBayMotorsProShippingMethodEnabled - SOAP::SOAPBoolean
#   eBayMotorsProCounterOfferEnabled - SOAP::SOAPBoolean
#   eBayMotorsProSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   localMarketAdFormatEnabled - AdFormatEnabledCodeType
#   localMarketContactByPhoneEnabled - SOAP::SOAPBoolean
#   localMarketPhoneCount - SOAP::SOAPInt
#   localMarketContactByAddressEnabled - SOAP::SOAPBoolean
#   localMarketStreetCount - SOAP::SOAPInt
#   localMarketCompanyNameEnabled - SOAP::SOAPBoolean
#   localMarketContactByEmailEnabled - SOAP::SOAPBoolean
#   localMarketBestOfferEnabled - ClassifiedAdBestOfferEnabledCodeType
#   localMarketAutoAcceptEnabled - SOAP::SOAPBoolean
#   localMarketAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketPaymentMethodCheckOutEnabled - ClassifiedAdPaymentMethodEnabledCodeType
#   localMarketShippingMethodEnabled - SOAP::SOAPBoolean
#   localMarketCounterOfferEnabled - SOAP::SOAPBoolean
#   localMarketSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   classifiedAdPhoneCount - SOAP::SOAPInt
#   classifiedAdContactByAddressEnabled - SOAP::SOAPBoolean
#   classifiedAdStreetCount - SOAP::SOAPInt
#   classifiedAdCompanyNameEnabled - SOAP::SOAPBoolean
#   specialitySubscription - GeographicExposureCodeType
#   regularSubscription - GeographicExposureCodeType
#   premiumSubscription - GeographicExposureCodeType
#   nonSubscription - GeographicExposureCodeType
#   iNEscrowWorkflowTimeline - INEscrowWorkflowTimelineCodeType
#   payPalRequiredForStoreOwner - SOAP::SOAPBoolean
#   reviseQuantityAllowed - SOAP::SOAPBoolean
#   revisePriceAllowed - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurationsEnabled - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurations - StoreOwnerExtendedListingDurationsType
#   returnPolicyEnabled - SOAP::SOAPBoolean
#   handlingTimeEnabled - SOAP::SOAPBoolean
#   maxFlatShippingCost - SOAP::SOAPDouble
class CategoryFeatureType
  attr_accessor :categoryID
  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :classifiedAdPaymentMethodEnabled
  attr_accessor :classifiedAdShippingMethodEnabled
  attr_accessor :classifiedAdBestOfferEnabled
  attr_accessor :classifiedAdCounterOfferEnabled
  attr_accessor :classifiedAdAutoDeclineEnabled
  attr_accessor :classifiedAdContactByPhoneEnabled
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :safePaymentRequired
  attr_accessor :classifiedAdPayPerLeadEnabled
  attr_accessor :itemSpecificsEnabled
  attr_accessor :paisaPayFullEscrowEnabled
  attr_accessor :classifiedAdAutoAcceptEnabled
  attr_accessor :bestOfferAutoAcceptEnabled
  attr_accessor :crossBorderTradeNorthAmericaEnabled
  attr_accessor :crossBorderTradeGBEnabled
  attr_accessor :crossBorderTradeAustraliaEnabled
  attr_accessor :payPalBuyerProtectionEnabled
  attr_accessor :buyerGuaranteeEnabled
  attr_accessor :combinedFixedPriceTreatmentEnabled
  attr_accessor :galleryFeaturedDurations
  attr_accessor :payPalRequired
  attr_accessor :eBayMotorsProAdFormatEnabled
  attr_accessor :eBayMotorsProContactByPhoneEnabled
  attr_accessor :eBayMotorsProPhoneCount
  attr_accessor :eBayMotorsProContactByAddressEnabled
  attr_accessor :eBayMotorsProStreetCount
  attr_accessor :eBayMotorsProCompanyNameEnabled
  attr_accessor :eBayMotorsProContactByEmailEnabled
  attr_accessor :eBayMotorsProBestOfferEnabled
  attr_accessor :eBayMotorsProAutoAcceptEnabled
  attr_accessor :eBayMotorsProAutoDeclineEnabled
  attr_accessor :eBayMotorsProPaymentMethodCheckOutEnabled
  attr_accessor :eBayMotorsProShippingMethodEnabled
  attr_accessor :eBayMotorsProCounterOfferEnabled
  attr_accessor :eBayMotorsProSellerContactDetailsEnabled
  attr_accessor :localMarketAdFormatEnabled
  attr_accessor :localMarketContactByPhoneEnabled
  attr_accessor :localMarketPhoneCount
  attr_accessor :localMarketContactByAddressEnabled
  attr_accessor :localMarketStreetCount
  attr_accessor :localMarketCompanyNameEnabled
  attr_accessor :localMarketContactByEmailEnabled
  attr_accessor :localMarketBestOfferEnabled
  attr_accessor :localMarketAutoAcceptEnabled
  attr_accessor :localMarketAutoDeclineEnabled
  attr_accessor :localMarketPaymentMethodCheckOutEnabled
  attr_accessor :localMarketShippingMethodEnabled
  attr_accessor :localMarketCounterOfferEnabled
  attr_accessor :localMarketSellerContactDetailsEnabled
  attr_accessor :classifiedAdPhoneCount
  attr_accessor :classifiedAdContactByAddressEnabled
  attr_accessor :classifiedAdStreetCount
  attr_accessor :classifiedAdCompanyNameEnabled
  attr_accessor :specialitySubscription
  attr_accessor :regularSubscription
  attr_accessor :premiumSubscription
  attr_accessor :nonSubscription
  attr_accessor :iNEscrowWorkflowTimeline
  attr_accessor :payPalRequiredForStoreOwner
  attr_accessor :reviseQuantityAllowed
  attr_accessor :revisePriceAllowed
  attr_accessor :storeOwnerExtendedListingDurationsEnabled
  attr_accessor :storeOwnerExtendedListingDurations
  attr_accessor :returnPolicyEnabled
  attr_accessor :handlingTimeEnabled
  attr_accessor :maxFlatShippingCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, sellerContactDetailsEnabled = nil, transactionConfirmationRequestEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, classifiedAdPaymentMethodEnabled = nil, classifiedAdShippingMethodEnabled = nil, classifiedAdBestOfferEnabled = nil, classifiedAdCounterOfferEnabled = nil, classifiedAdAutoDeclineEnabled = nil, classifiedAdContactByPhoneEnabled = nil, classifiedAdContactByEmailEnabled = nil, safePaymentRequired = nil, classifiedAdPayPerLeadEnabled = nil, itemSpecificsEnabled = nil, paisaPayFullEscrowEnabled = nil, classifiedAdAutoAcceptEnabled = nil, bestOfferAutoAcceptEnabled = nil, crossBorderTradeNorthAmericaEnabled = nil, crossBorderTradeGBEnabled = nil, crossBorderTradeAustraliaEnabled = nil, payPalBuyerProtectionEnabled = nil, buyerGuaranteeEnabled = nil, combinedFixedPriceTreatmentEnabled = nil, galleryFeaturedDurations = nil, payPalRequired = nil, eBayMotorsProAdFormatEnabled = nil, eBayMotorsProContactByPhoneEnabled = nil, eBayMotorsProPhoneCount = nil, eBayMotorsProContactByAddressEnabled = nil, eBayMotorsProStreetCount = nil, eBayMotorsProCompanyNameEnabled = nil, eBayMotorsProContactByEmailEnabled = nil, eBayMotorsProBestOfferEnabled = nil, eBayMotorsProAutoAcceptEnabled = nil, eBayMotorsProAutoDeclineEnabled = nil, eBayMotorsProPaymentMethodCheckOutEnabled = nil, eBayMotorsProShippingMethodEnabled = nil, eBayMotorsProCounterOfferEnabled = nil, eBayMotorsProSellerContactDetailsEnabled = nil, localMarketAdFormatEnabled = nil, localMarketContactByPhoneEnabled = nil, localMarketPhoneCount = nil, localMarketContactByAddressEnabled = nil, localMarketStreetCount = nil, localMarketCompanyNameEnabled = nil, localMarketContactByEmailEnabled = nil, localMarketBestOfferEnabled = nil, localMarketAutoAcceptEnabled = nil, localMarketAutoDeclineEnabled = nil, localMarketPaymentMethodCheckOutEnabled = nil, localMarketShippingMethodEnabled = nil, localMarketCounterOfferEnabled = nil, localMarketSellerContactDetailsEnabled = nil, classifiedAdPhoneCount = nil, classifiedAdContactByAddressEnabled = nil, classifiedAdStreetCount = nil, classifiedAdCompanyNameEnabled = nil, specialitySubscription = nil, regularSubscription = nil, premiumSubscription = nil, nonSubscription = nil, iNEscrowWorkflowTimeline = nil, payPalRequiredForStoreOwner = nil, reviseQuantityAllowed = nil, revisePriceAllowed = nil, storeOwnerExtendedListingDurationsEnabled = nil, storeOwnerExtendedListingDurations = nil, returnPolicyEnabled = nil, handlingTimeEnabled = nil, maxFlatShippingCost = nil)
    @categoryID = categoryID
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @classifiedAdPaymentMethodEnabled = classifiedAdPaymentMethodEnabled
    @classifiedAdShippingMethodEnabled = classifiedAdShippingMethodEnabled
    @classifiedAdBestOfferEnabled = classifiedAdBestOfferEnabled
    @classifiedAdCounterOfferEnabled = classifiedAdCounterOfferEnabled
    @classifiedAdAutoDeclineEnabled = classifiedAdAutoDeclineEnabled
    @classifiedAdContactByPhoneEnabled = classifiedAdContactByPhoneEnabled
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @safePaymentRequired = safePaymentRequired
    @classifiedAdPayPerLeadEnabled = classifiedAdPayPerLeadEnabled
    @itemSpecificsEnabled = itemSpecificsEnabled
    @paisaPayFullEscrowEnabled = paisaPayFullEscrowEnabled
    @classifiedAdAutoAcceptEnabled = classifiedAdAutoAcceptEnabled
    @bestOfferAutoAcceptEnabled = bestOfferAutoAcceptEnabled
    @crossBorderTradeNorthAmericaEnabled = crossBorderTradeNorthAmericaEnabled
    @crossBorderTradeGBEnabled = crossBorderTradeGBEnabled
    @crossBorderTradeAustraliaEnabled = crossBorderTradeAustraliaEnabled
    @payPalBuyerProtectionEnabled = payPalBuyerProtectionEnabled
    @buyerGuaranteeEnabled = buyerGuaranteeEnabled
    @combinedFixedPriceTreatmentEnabled = combinedFixedPriceTreatmentEnabled
    @galleryFeaturedDurations = galleryFeaturedDurations
    @payPalRequired = payPalRequired
    @eBayMotorsProAdFormatEnabled = eBayMotorsProAdFormatEnabled
    @eBayMotorsProContactByPhoneEnabled = eBayMotorsProContactByPhoneEnabled
    @eBayMotorsProPhoneCount = eBayMotorsProPhoneCount
    @eBayMotorsProContactByAddressEnabled = eBayMotorsProContactByAddressEnabled
    @eBayMotorsProStreetCount = eBayMotorsProStreetCount
    @eBayMotorsProCompanyNameEnabled = eBayMotorsProCompanyNameEnabled
    @eBayMotorsProContactByEmailEnabled = eBayMotorsProContactByEmailEnabled
    @eBayMotorsProBestOfferEnabled = eBayMotorsProBestOfferEnabled
    @eBayMotorsProAutoAcceptEnabled = eBayMotorsProAutoAcceptEnabled
    @eBayMotorsProAutoDeclineEnabled = eBayMotorsProAutoDeclineEnabled
    @eBayMotorsProPaymentMethodCheckOutEnabled = eBayMotorsProPaymentMethodCheckOutEnabled
    @eBayMotorsProShippingMethodEnabled = eBayMotorsProShippingMethodEnabled
    @eBayMotorsProCounterOfferEnabled = eBayMotorsProCounterOfferEnabled
    @eBayMotorsProSellerContactDetailsEnabled = eBayMotorsProSellerContactDetailsEnabled
    @localMarketAdFormatEnabled = localMarketAdFormatEnabled
    @localMarketContactByPhoneEnabled = localMarketContactByPhoneEnabled
    @localMarketPhoneCount = localMarketPhoneCount
    @localMarketContactByAddressEnabled = localMarketContactByAddressEnabled
    @localMarketStreetCount = localMarketStreetCount
    @localMarketCompanyNameEnabled = localMarketCompanyNameEnabled
    @localMarketContactByEmailEnabled = localMarketContactByEmailEnabled
    @localMarketBestOfferEnabled = localMarketBestOfferEnabled
    @localMarketAutoAcceptEnabled = localMarketAutoAcceptEnabled
    @localMarketAutoDeclineEnabled = localMarketAutoDeclineEnabled
    @localMarketPaymentMethodCheckOutEnabled = localMarketPaymentMethodCheckOutEnabled
    @localMarketShippingMethodEnabled = localMarketShippingMethodEnabled
    @localMarketCounterOfferEnabled = localMarketCounterOfferEnabled
    @localMarketSellerContactDetailsEnabled = localMarketSellerContactDetailsEnabled
    @classifiedAdPhoneCount = classifiedAdPhoneCount
    @classifiedAdContactByAddressEnabled = classifiedAdContactByAddressEnabled
    @classifiedAdStreetCount = classifiedAdStreetCount
    @classifiedAdCompanyNameEnabled = classifiedAdCompanyNameEnabled
    @specialitySubscription = specialitySubscription
    @regularSubscription = regularSubscription
    @premiumSubscription = premiumSubscription
    @nonSubscription = nonSubscription
    @iNEscrowWorkflowTimeline = iNEscrowWorkflowTimeline
    @payPalRequiredForStoreOwner = payPalRequiredForStoreOwner
    @reviseQuantityAllowed = reviseQuantityAllowed
    @revisePriceAllowed = revisePriceAllowed
    @storeOwnerExtendedListingDurationsEnabled = storeOwnerExtendedListingDurationsEnabled
    @storeOwnerExtendedListingDurations = storeOwnerExtendedListingDurations
    @returnPolicyEnabled = returnPolicyEnabled
    @handlingTimeEnabled = handlingTimeEnabled
    @maxFlatShippingCost = maxFlatShippingCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryItemSpecificsType
#   categoryID - SOAP::SOAPString
#   updated - SOAP::SOAPBoolean
#   itemSpecifics - NameValueListArrayType
class CategoryItemSpecificsType
  attr_accessor :categoryID
  attr_accessor :updated
  attr_accessor :itemSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, updated = nil, itemSpecifics = nil)
    @categoryID = categoryID
    @updated = updated
    @itemSpecifics = itemSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryMappingType
#   xmlattr_oldID - SOAP::SOAPString
#   xmlattr_id - SOAP::SOAPString
class CategoryMappingType
  AttrId = XSD::QName.new(nil, "id")
  AttrOldID = XSD::QName.new(nil, "oldID")

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_oldID
    __xmlattr[AttrOldID]
  end

  def xmlattr_oldID=(value)
    __xmlattr[AttrOldID] = value
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryType
#   bestOfferEnabled - SOAP::SOAPBoolean
#   autoPayEnabled - SOAP::SOAPBoolean
#   b2BVATEnabled - SOAP::SOAPBoolean
#   catalogEnabled - SOAP::SOAPBoolean
#   categoryID - SOAP::SOAPString
#   categoryLevel - SOAP::SOAPInt
#   categoryName - SOAP::SOAPString
#   categoryParentID - SOAP::SOAPString
#   categoryParentName - SOAP::SOAPString
#   productSearchPageAvailable - SOAP::SOAPBoolean
#   productFinderIDs - ExtendedProductFinderIDType
#   characteristicsSets - CharacteristicsSetType
#   expired - SOAP::SOAPBoolean
#   intlAutosFixedCat - SOAP::SOAPBoolean
#   leafCategory - SOAP::SOAPBoolean
#   virtual - SOAP::SOAPBoolean
#   numOfItems - SOAP::SOAPInt
#   sellerGuaranteeEligible - SOAP::SOAPBoolean
#   oRPA - SOAP::SOAPBoolean
#   oRRA - SOAP::SOAPBoolean
#   lSD - SOAP::SOAPBoolean
#   keywords - SOAP::SOAPString
class CategoryType
  attr_accessor :bestOfferEnabled
  attr_accessor :autoPayEnabled
  attr_accessor :b2BVATEnabled
  attr_accessor :catalogEnabled
  attr_accessor :categoryID
  attr_accessor :categoryLevel
  attr_accessor :categoryName
  attr_accessor :categoryParentID
  attr_accessor :categoryParentName
  attr_accessor :productSearchPageAvailable
  attr_accessor :productFinderIDs
  attr_accessor :characteristicsSets
  attr_accessor :expired
  attr_accessor :intlAutosFixedCat
  attr_accessor :leafCategory
  attr_accessor :virtual
  attr_accessor :numOfItems
  attr_accessor :sellerGuaranteeEligible
  attr_accessor :oRPA
  attr_accessor :oRRA
  attr_accessor :lSD
  attr_accessor :keywords
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferEnabled = nil, autoPayEnabled = nil, b2BVATEnabled = nil, catalogEnabled = nil, categoryID = nil, categoryLevel = nil, categoryName = nil, categoryParentID = [], categoryParentName = [], productSearchPageAvailable = nil, productFinderIDs = [], characteristicsSets = [], expired = nil, intlAutosFixedCat = nil, leafCategory = nil, virtual = nil, numOfItems = nil, sellerGuaranteeEligible = nil, oRPA = nil, oRRA = nil, lSD = nil, keywords = nil)
    @bestOfferEnabled = bestOfferEnabled
    @autoPayEnabled = autoPayEnabled
    @b2BVATEnabled = b2BVATEnabled
    @catalogEnabled = catalogEnabled
    @categoryID = categoryID
    @categoryLevel = categoryLevel
    @categoryName = categoryName
    @categoryParentID = categoryParentID
    @categoryParentName = categoryParentName
    @productSearchPageAvailable = productSearchPageAvailable
    @productFinderIDs = productFinderIDs
    @characteristicsSets = characteristicsSets
    @expired = expired
    @intlAutosFixedCat = intlAutosFixedCat
    @leafCategory = leafCategory
    @virtual = virtual
    @numOfItems = numOfItems
    @sellerGuaranteeEligible = sellerGuaranteeEligible
    @oRPA = oRPA
    @oRRA = oRRA
    @lSD = lSD
    @keywords = keywords
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicSetIDsType
class CharacteristicSetIDsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicType
#   attributeID - SOAP::SOAPInt
#   dateFormat - SOAP::SOAPString
#   displaySequence - SOAP::SOAPString
#   displayUOM - SOAP::SOAPString
#   label - LabelType
#   sortOrder - SortOrderCodeType
#   valueList - ValType
class CharacteristicType
  attr_accessor :attributeID
  attr_accessor :dateFormat
  attr_accessor :displaySequence
  attr_accessor :displayUOM
  attr_accessor :label
  attr_accessor :sortOrder
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateFormat = nil, displaySequence = nil, displayUOM = nil, label = nil, sortOrder = nil, valueList = [])
    @attributeID = attributeID
    @dateFormat = dateFormat
    @displaySequence = displaySequence
    @displayUOM = displayUOM
    @label = label
    @sortOrder = sortOrder
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSetProductHistogramType
#   histogramEntry - HistogramEntryType
class CharacteristicsSetProductHistogramType
  attr_accessor :histogramEntry
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(histogramEntry = [])
    @histogramEntry = histogramEntry
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSetType
#   name - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
#   attributeSetVersion - SOAP::SOAPString
#   characteristics - CharacteristicType
class CharacteristicsSetType
  attr_accessor :name
  attr_accessor :attributeSetID
  attr_accessor :attributeSetVersion
  attr_accessor :characteristics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, attributeSetID = nil, attributeSetVersion = nil, characteristics = [])
    @name = name
    @attributeSetID = attributeSetID
    @attributeSetVersion = attributeSetVersion
    @characteristics = characteristics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationDetailType
#   charityID - SOAP::SOAPString
#   affiliationType - CharityAffiliationTypeCodeType
#   lastUsedTime - SOAP::SOAPDateTime
class CharityAffiliationDetailType
  attr_accessor :charityID
  attr_accessor :affiliationType
  attr_accessor :lastUsedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityID = nil, affiliationType = nil, lastUsedTime = nil)
    @charityID = charityID
    @affiliationType = affiliationType
    @lastUsedTime = lastUsedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationDetailsType
class CharityAffiliationDetailsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationType
#   xmlattr_id - SOAP::SOAPString
#   xmlattr_type - SOAP::SOAPToken
class CharityAffiliationType
  AttrId = XSD::QName.new(nil, "id")
  AttrType = XSD::QName.new(nil, "type")

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationsType
#   charityID - CharityIDType
class CharityAffiliationsType
  attr_accessor :charityID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityID = [])
    @charityID = charityID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityIDType
#   xmlattr_type - SOAP::SOAPToken
class CharityIDType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityInfoType
#   name - SOAP::SOAPString
#   mission - SOAP::SOAPString
#   logoURL - SOAP::SOAPAnyURI
#   status - CharityStatusCodeType
#   searchableString - SOAP::SOAPString
#   charityRegion - SOAP::SOAPInt
#   charityDomain - SOAP::SOAPInt
#   charityID - SOAP::SOAPString
#   logoURLSelling - SOAP::SOAPAnyURI
#   displayLogoSelling - SOAP::SOAPBoolean
#   displayNameInCheckout - SOAP::SOAPBoolean
#   xmlattr_id - SOAP::SOAPString
class CharityInfoType
  AttrId = XSD::QName.new(nil, "id")

  attr_accessor :name
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :searchableString
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :charityID
  attr_accessor :logoURLSelling
  attr_accessor :displayLogoSelling
  attr_accessor :displayNameInCheckout
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def initialize(name = nil, mission = nil, logoURL = nil, status = nil, searchableString = nil, charityRegion = nil, charityDomain = [], charityID = nil, logoURLSelling = nil, displayLogoSelling = nil, displayNameInCheckout = nil)
    @name = name
    @mission = mission
    @logoURL = logoURL
    @status = status
    @searchableString = searchableString
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @charityID = charityID
    @logoURLSelling = logoURLSelling
    @displayLogoSelling = displayLogoSelling
    @displayNameInCheckout = displayNameInCheckout
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerType
#   charitySellerStatus - CharitySellerStatusCodeType
#   charityAffiliation - CharityAffiliationType
#   termsAndConditionsAccepted - SOAP::SOAPBoolean
class CharitySellerType
  attr_accessor :charitySellerStatus
  attr_accessor :charityAffiliation
  attr_accessor :termsAndConditionsAccepted
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charitySellerStatus = nil, charityAffiliation = [], termsAndConditionsAccepted = nil)
    @charitySellerStatus = charitySellerStatus
    @charityAffiliation = charityAffiliation
    @termsAndConditionsAccepted = termsAndConditionsAccepted
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityType
#   charityName - SOAP::SOAPString
#   charityNumber - SOAP::SOAPInt
#   donationPercent - SOAP::SOAPFloat
#   charityID - SOAP::SOAPString
#   mission - SOAP::SOAPString
#   logoURL - SOAP::SOAPString
#   status - CharityStatusCodeType
#   charityListing - SOAP::SOAPBoolean
class CharityType
  attr_accessor :charityName
  attr_accessor :charityNumber
  attr_accessor :donationPercent
  attr_accessor :charityID
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :charityListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityName = nil, charityNumber = nil, donationPercent = nil, charityID = nil, mission = nil, logoURL = nil, status = nil, charityListing = nil)
    @charityName = charityName
    @charityNumber = charityNumber
    @donationPercent = donationPercent
    @charityID = charityID
    @mission = mission
    @logoURL = logoURL
    @status = status
    @charityListing = charityListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutOrderDetailType
#   totalCartMerchandiseCost - AmountType
#   totalCartShippingCost - AmountType
#   totalTaxAmount - AmountType
#   totalAmount - AmountType
class CheckoutOrderDetailType
  attr_accessor :totalCartMerchandiseCost
  attr_accessor :totalCartShippingCost
  attr_accessor :totalTaxAmount
  attr_accessor :totalAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalCartMerchandiseCost = nil, totalCartShippingCost = nil, totalTaxAmount = nil, totalAmount = nil)
    @totalCartMerchandiseCost = totalCartMerchandiseCost
    @totalCartShippingCost = totalCartShippingCost
    @totalTaxAmount = totalTaxAmount
    @totalAmount = totalAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusType
#   eBayPaymentStatus - PaymentStatusCodeType
#   lastModifiedTime - SOAP::SOAPDateTime
#   paymentMethod - BuyerPaymentMethodCodeType
#   status - CompleteStatusCodeType
class CheckoutStatusType
  attr_accessor :eBayPaymentStatus
  attr_accessor :lastModifiedTime
  attr_accessor :paymentMethod
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, lastModifiedTime = nil, paymentMethod = nil, status = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @lastModifiedTime = lastModifiedTime
    @paymentMethod = paymentMethod
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdAutoAcceptEnabledDefinitionType
class ClassifiedAdAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdAutoDeclineEnabledDefinitionType
class ClassifiedAdAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdBestOfferEnabledDefinitionType
class ClassifiedAdBestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdCompanyNameEnabledDefinitionType
class ClassifiedAdCompanyNameEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdContactByAddressEnabledDefinitionType
class ClassifiedAdContactByAddressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdContactByEmailEnabledDefintionType
class ClassifiedAdContactByEmailEnabledDefintionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdContactByPhoneEnabledDefinitionType
class ClassifiedAdContactByPhoneEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdCounterOfferEnabledDefinitionType
class ClassifiedAdCounterOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPayPerLeadEnabledDefinitionType
class ClassifiedAdPayPerLeadEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPaymentMethodEnabledDefinitionType
class ClassifiedAdPaymentMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPhoneCountDefinitionType
class ClassifiedAdPhoneCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdShippingMethodEnabledDefinitionType
class ClassifiedAdShippingMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdStreetCountDefinitionType
class ClassifiedAdStreetCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CombinedFixedPriceTreatmentEnabledDefinitionType
class CombinedFixedPriceTreatmentEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPreferencesType
#   calculatedShippingPreferences - CalculatedShippingPreferencesType
#   combinedPaymentOption - CombinedPaymentOptionCodeType
#   combinedPaymentPeriod - CombinedPaymentPeriodCodeType
#   flatShippingPreferences - FlatShippingPreferencesType
class CombinedPaymentPreferencesType
  attr_accessor :calculatedShippingPreferences
  attr_accessor :combinedPaymentOption
  attr_accessor :combinedPaymentPeriod
  attr_accessor :flatShippingPreferences
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingPreferences = nil, combinedPaymentOption = nil, combinedPaymentPeriod = nil, flatShippingPreferences = nil)
    @calculatedShippingPreferences = calculatedShippingPreferences
    @combinedPaymentOption = combinedPaymentOption
    @combinedPaymentPeriod = combinedPaymentPeriod
    @flatShippingPreferences = flatShippingPreferences
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ContactHoursDetailsType
#   timeZoneID - SOAP::SOAPString
#   hours1Days - DaysCodeType
#   hours1AnyTime - SOAP::SOAPBoolean
#   hours1From - SOAP::SOAPTime
#   hours1To - SOAP::SOAPTime
#   hours2Days - DaysCodeType
#   hours2AnyTime - SOAP::SOAPBoolean
#   hours2From - SOAP::SOAPTime
#   hours2To - SOAP::SOAPTime
class ContactHoursDetailsType
  attr_accessor :timeZoneID
  attr_accessor :hours1Days
  attr_accessor :hours1AnyTime
  attr_accessor :hours1From
  attr_accessor :hours1To
  attr_accessor :hours2Days
  attr_accessor :hours2AnyTime
  attr_accessor :hours2From
  attr_accessor :hours2To
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timeZoneID = nil, hours1Days = nil, hours1AnyTime = nil, hours1From = nil, hours1To = nil, hours2Days = nil, hours2AnyTime = nil, hours2From = nil, hours2To = nil)
    @timeZoneID = timeZoneID
    @hours1Days = hours1Days
    @hours1AnyTime = hours1AnyTime
    @hours1From = hours1From
    @hours1To = hours1To
    @hours2Days = hours2Days
    @hours2AnyTime = hours2AnyTime
    @hours2From = hours2From
    @hours2To = hours2To
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ContextSearchAssetType
#   keyword - SOAP::SOAPString
#   category - CategoryType
#   ranking - SOAP::SOAPInt
class ContextSearchAssetType
  attr_accessor :keyword
  attr_accessor :category
  attr_accessor :ranking

  def initialize(keyword = nil, category = nil, ranking = nil)
    @keyword = keyword
    @category = category
    @ranking = ranking
  end
end

# {urn:ebay:apis:eBLBaseComponents}CountryDetailsType
#   country - CountryCodeType
#   description - SOAP::SOAPString
class CountryDetailsType
  attr_accessor :country
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(country = nil, description = nil)
    @country = country
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossBorderTradeAustraliaEnabledDefinitionType
class CrossBorderTradeAustraliaEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossBorderTradeGBEnabledDefinitionType
class CrossBorderTradeGBEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossBorderTradeNorthAmericaEnabledDefinitionType
class CrossBorderTradeNorthAmericaEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionPreferencesType
#   crossPromotionEnabled - SOAP::SOAPBoolean
#   crossSellItemFormatSortFilter - ItemFormatSortFilterCodeType
#   crossSellGallerySortFilter - GallerySortFilterCodeType
#   crossSellItemSortFilter - ItemSortFilterCodeType
#   upSellItemFormatSortFilter - ItemFormatSortFilterCodeType
#   upSellGallerySortFilter - GallerySortFilterCodeType
#   upSellItemSortFilter - ItemSortFilterCodeType
class CrossPromotionPreferencesType
  attr_accessor :crossPromotionEnabled
  attr_accessor :crossSellItemFormatSortFilter
  attr_accessor :crossSellGallerySortFilter
  attr_accessor :crossSellItemSortFilter
  attr_accessor :upSellItemFormatSortFilter
  attr_accessor :upSellGallerySortFilter
  attr_accessor :upSellItemSortFilter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(crossPromotionEnabled = nil, crossSellItemFormatSortFilter = nil, crossSellGallerySortFilter = nil, crossSellItemSortFilter = nil, upSellItemFormatSortFilter = nil, upSellGallerySortFilter = nil, upSellItemSortFilter = nil)
    @crossPromotionEnabled = crossPromotionEnabled
    @crossSellItemFormatSortFilter = crossSellItemFormatSortFilter
    @crossSellGallerySortFilter = crossSellGallerySortFilter
    @crossSellItemSortFilter = crossSellItemSortFilter
    @upSellItemFormatSortFilter = upSellItemFormatSortFilter
    @upSellGallerySortFilter = upSellGallerySortFilter
    @upSellItemSortFilter = upSellItemSortFilter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionsType
#   itemID - (any)
#   primaryScheme - PromotionSchemeCodeType
#   promotionMethod - PromotionMethodCodeType
#   sellerID - SOAP::SOAPString
#   shippingDiscount - SOAP::SOAPBoolean
#   storeName - SOAP::SOAPString
#   promotedItem - PromotedItemType
class CrossPromotionsType
  attr_accessor :itemID
  attr_accessor :primaryScheme
  attr_accessor :promotionMethod
  attr_accessor :sellerID
  attr_accessor :shippingDiscount
  attr_accessor :storeName
  attr_accessor :promotedItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, primaryScheme = nil, promotionMethod = nil, sellerID = nil, shippingDiscount = nil, storeName = nil, promotedItem = [])
    @itemID = itemID
    @primaryScheme = primaryScheme
    @promotionMethod = promotionMethod
    @sellerID = sellerID
    @shippingDiscount = shippingDiscount
    @storeName = storeName
    @promotedItem = promotedItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyDetailsType
#   currency - CurrencyCodeType
#   description - SOAP::SOAPString
class CurrencyDetailsType
  attr_accessor :currency
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(currency = nil, description = nil)
    @currency = currency
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DataElementSetType
#   dataElement - SOAP::SOAPString
#   dataElementID - SOAP::SOAPInt
#   xmlattr_attributeSetID - SOAP::SOAPInt
class DataElementSetType
  AttrAttributeSetID = XSD::QName.new(nil, "attributeSetID")

  attr_accessor :dataElement
  attr_accessor :dataElementID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_attributeSetID
    __xmlattr[AttrAttributeSetID]
  end

  def xmlattr_attributeSetID=(value)
    __xmlattr[AttrAttributeSetID] = value
  end

  def initialize(dataElement = nil, dataElementID = nil)
    @dataElement = dataElement
    @dataElementID = dataElementID
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}DateType
#   year - SOAP::SOAPInt
#   month - SOAP::SOAPInt
#   day - SOAP::SOAPInt
class DateType
  attr_accessor :year
  attr_accessor :month
  attr_accessor :day
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(year = nil, month = nil, day = nil)
    @year = year
    @month = month
    @day = day
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeliveryURLDetailType
#   deliveryURLName - SOAP::SOAPString
#   deliveryURL - SOAP::SOAPAnyURI
#   status - EnableCodeType
class DeliveryURLDetailType
  attr_accessor :deliveryURLName
  attr_accessor :deliveryURL
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveryURLName = nil, deliveryURL = nil, status = nil)
    @deliveryURLName = deliveryURLName
    @deliveryURL = deliveryURL
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateType
#   groupID - SOAP::SOAPInt
#   iD - SOAP::SOAPInt
#   imageURL - SOAP::SOAPAnyURI
#   name - SOAP::SOAPString
#   templateXML - SOAP::SOAPString
#   type - DescriptionTemplateCodeType
class DescriptionTemplateType
  attr_accessor :groupID
  attr_accessor :iD
  attr_accessor :imageURL
  attr_accessor :name
  attr_accessor :templateXML
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, iD = nil, imageURL = nil, name = nil, templateXML = nil, type = nil)
    @groupID = groupID
    @iD = iD
    @imageURL = imageURL
    @name = name
    @templateXML = templateXML
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DiscountProfileType
#   discountProfileID - SOAP::SOAPString
#   discountProfileName - SOAP::SOAPString
#   eachAdditionalAmount - AmountType
#   eachAdditionalAmountOff - AmountType
#   eachAdditionalPercentOff - SOAP::SOAPFloat
#   weightOff - MeasureType
#   mappedDiscountProfileID - SOAP::SOAPString
class DiscountProfileType
  attr_accessor :discountProfileID
  attr_accessor :discountProfileName
  attr_accessor :eachAdditionalAmount
  attr_accessor :eachAdditionalAmountOff
  attr_accessor :eachAdditionalPercentOff
  attr_accessor :weightOff
  attr_accessor :mappedDiscountProfileID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountProfileID = nil, discountProfileName = nil, eachAdditionalAmount = nil, eachAdditionalAmountOff = nil, eachAdditionalPercentOff = nil, weightOff = nil, mappedDiscountProfileID = nil)
    @discountProfileID = discountProfileID
    @discountProfileName = discountProfileName
    @eachAdditionalAmount = eachAdditionalAmount
    @eachAdditionalAmountOff = eachAdditionalAmountOff
    @eachAdditionalPercentOff = eachAdditionalPercentOff
    @weightOff = weightOff
    @mappedDiscountProfileID = mappedDiscountProfileID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DispatchTimeMaxDetailsType
#   dispatchTimeMax - SOAP::SOAPInt
#   description - SOAP::SOAPString
class DispatchTimeMaxDetailsType
  attr_accessor :dispatchTimeMax
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(dispatchTimeMax = nil, description = nil)
    @dispatchTimeMax = dispatchTimeMax
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeArrayType
class DisputeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}DisputeType
#   disputeID - (any)
#   disputeRecordType - DisputeRecordTypeCodeType
#   disputeState - DisputeStateCodeType
#   disputeStatus - DisputeStatusCodeType
#   otherPartyRole - TradingRoleCodeType
#   otherPartyName - SOAP::SOAPString
#   userRole - TradingRoleCodeType
#   buyerUserID - (any)
#   sellerUserID - (any)
#   transactionID - SOAP::SOAPString
#   item - ItemType
#   disputeReason - DisputeReasonCodeType
#   disputeExplanation - DisputeExplanationCodeType
#   disputeCreditEligibility - DisputeCreditEligibilityCodeType
#   disputeCreatedTime - SOAP::SOAPDateTime
#   disputeModifiedTime - SOAP::SOAPDateTime
#   disputeResolution - DisputeResolutionType
#   disputeMessage - DisputeMessageType
#   escalation - SOAP::SOAPBoolean
#   purchaseProtection - SOAP::SOAPBoolean
class DisputeType
  attr_accessor :disputeID
  attr_accessor :disputeRecordType
  attr_accessor :disputeState
  attr_accessor :disputeStatus
  attr_accessor :otherPartyRole
  attr_accessor :otherPartyName
  attr_accessor :userRole
  attr_accessor :buyerUserID
  attr_accessor :sellerUserID
  attr_accessor :transactionID
  attr_accessor :item
  attr_accessor :disputeReason
  attr_accessor :disputeExplanation
  attr_accessor :disputeCreditEligibility
  attr_accessor :disputeCreatedTime
  attr_accessor :disputeModifiedTime
  attr_accessor :disputeResolution
  attr_accessor :disputeMessage
  attr_accessor :escalation
  attr_accessor :purchaseProtection
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeID = nil, disputeRecordType = nil, disputeState = nil, disputeStatus = nil, otherPartyRole = nil, otherPartyName = nil, userRole = nil, buyerUserID = nil, sellerUserID = nil, transactionID = nil, item = nil, disputeReason = nil, disputeExplanation = nil, disputeCreditEligibility = nil, disputeCreatedTime = nil, disputeModifiedTime = nil, disputeResolution = [], disputeMessage = [], escalation = nil, purchaseProtection = nil)
    @disputeID = disputeID
    @disputeRecordType = disputeRecordType
    @disputeState = disputeState
    @disputeStatus = disputeStatus
    @otherPartyRole = otherPartyRole
    @otherPartyName = otherPartyName
    @userRole = userRole
    @buyerUserID = buyerUserID
    @sellerUserID = sellerUserID
    @transactionID = transactionID
    @item = item
    @disputeReason = disputeReason
    @disputeExplanation = disputeExplanation
    @disputeCreditEligibility = disputeCreditEligibility
    @disputeCreatedTime = disputeCreatedTime
    @disputeModifiedTime = disputeModifiedTime
    @disputeResolution = disputeResolution
    @disputeMessage = disputeMessage
    @escalation = escalation
    @purchaseProtection = purchaseProtection
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DistanceType
#   distanceMeasurement - SOAP::SOAPInt
#   distanceUnit - SOAP::SOAPString
class DistanceType
  attr_accessor :distanceMeasurement
  attr_accessor :distanceUnit
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(distanceMeasurement = nil, distanceUnit = nil)
    @distanceMeasurement = distanceMeasurement
    @distanceUnit = distanceUnit
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DutchBINEnabledDefinitionType
class DutchBINEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionEmailPreferencesType
#   templateText - SOAP::SOAPString
#   logoURL - SOAP::SOAPAnyURI
#   logoType - EndOfAuctionLogoTypeCodeType
#   emailCustomized - SOAP::SOAPBoolean
#   textCustomized - SOAP::SOAPBoolean
#   logoCustomized - SOAP::SOAPBoolean
#   copyEmail - SOAP::SOAPBoolean
class EndOfAuctionEmailPreferencesType
  attr_accessor :templateText
  attr_accessor :logoURL
  attr_accessor :logoType
  attr_accessor :emailCustomized
  attr_accessor :textCustomized
  attr_accessor :logoCustomized
  attr_accessor :copyEmail
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(templateText = nil, logoURL = nil, logoType = nil, emailCustomized = nil, textCustomized = nil, logoCustomized = nil, copyEmail = nil)
    @templateText = templateText
    @logoURL = logoURL
    @logoType = logoType
    @emailCustomized = emailCustomized
    @textCustomized = textCustomized
    @logoCustomized = logoCustomized
    @copyEmail = copyEmail
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpansionArrayType
#   expansionItem - SearchResultItemType
#   totalAvailable - SOAP::SOAPInt
class ExpansionArrayType
  attr_accessor :expansionItem
  attr_accessor :totalAvailable

  def initialize(expansionItem = [], totalAvailable = nil)
    @expansionItem = expansionItem
    @totalAvailable = totalAvailable
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressConditionRequiredDefinitionType
class ExpressConditionRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressDetailsType
#   expressLargeImage - SOAP::SOAPAnyURI
#   expressSmallImage - SOAP::SOAPAnyURI
#   condition - SOAP::SOAPString
class ExpressDetailsType
  attr_accessor :expressLargeImage
  attr_accessor :expressSmallImage
  attr_accessor :condition
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expressLargeImage = nil, expressSmallImage = nil, condition = nil)
    @expressLargeImage = expressLargeImage
    @expressSmallImage = expressSmallImage
    @condition = condition
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressEnabledDefinitionType
class ExpressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramAisleType
#   domainDetails - ExpressHistogramDomainDetailsType
#   productType - ExpressHistogramProductType
class ExpressHistogramAisleType
  attr_accessor :domainDetails
  attr_accessor :productType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domainDetails = nil, productType = [])
    @domainDetails = domainDetails
    @productType = productType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramDepartmentType
#   domainDetails - ExpressHistogramDomainDetailsType
#   aisle - ExpressHistogramAisleType
class ExpressHistogramDepartmentType
  attr_accessor :domainDetails
  attr_accessor :aisle
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domainDetails = nil, aisle = [])
    @domainDetails = domainDetails
    @aisle = aisle
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramDomainDetailsType
#   name - SOAP::SOAPString
#   breadCrumb - SOAP::SOAPString
#   itemCount - SOAP::SOAPInt
#   productCount - SOAP::SOAPInt
#   imageURL - SOAP::SOAPAnyURI
class ExpressHistogramDomainDetailsType
  attr_accessor :name
  attr_accessor :breadCrumb
  attr_accessor :itemCount
  attr_accessor :productCount
  attr_accessor :imageURL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, breadCrumb = nil, itemCount = nil, productCount = nil, imageURL = nil)
    @name = name
    @breadCrumb = breadCrumb
    @itemCount = itemCount
    @productCount = productCount
    @imageURL = imageURL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressHistogramProductType
#   domainDetails - ExpressHistogramDomainDetailsType
class ExpressHistogramProductType
  attr_accessor :domainDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domainDetails = nil)
    @domainDetails = domainDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressItemRequirementsType
#   sellerExpressEligible - SOAP::SOAPBoolean
#   expressOptOut - SOAP::SOAPBoolean
#   expressApproved - SOAP::SOAPBoolean
#   expressEligibleListingType - SOAP::SOAPBoolean
#   expressEnabledCategory - SOAP::SOAPBoolean
#   eligiblePayPalAccount - SOAP::SOAPBoolean
#   domesticShippingCost - SOAP::SOAPBoolean
#   eligibleReturnPolicy - SOAP::SOAPBoolean
#   picture - SOAP::SOAPBoolean
#   eligibleItemCondition - SOAP::SOAPBoolean
#   priceAboveMinimum - SOAP::SOAPBoolean
#   priceBelowMaximum - SOAP::SOAPBoolean
#   eligibleCheckout - SOAP::SOAPBoolean
#   noPreapprovedBidderList - SOAP::SOAPBoolean
#   noCharity - SOAP::SOAPBoolean
#   combinedShippingDiscount - SOAP::SOAPBoolean
#   shipFromEligibleCountry - SOAP::SOAPBoolean
#   payPalAccountAcceptsUnconfirmedAddress - SOAP::SOAPBoolean
class ExpressItemRequirementsType
  attr_accessor :sellerExpressEligible
  attr_accessor :expressOptOut
  attr_accessor :expressApproved
  attr_accessor :expressEligibleListingType
  attr_accessor :expressEnabledCategory
  attr_accessor :eligiblePayPalAccount
  attr_accessor :domesticShippingCost
  attr_accessor :eligibleReturnPolicy
  attr_accessor :picture
  attr_accessor :eligibleItemCondition
  attr_accessor :priceAboveMinimum
  attr_accessor :priceBelowMaximum
  attr_accessor :eligibleCheckout
  attr_accessor :noPreapprovedBidderList
  attr_accessor :noCharity
  attr_accessor :combinedShippingDiscount
  attr_accessor :shipFromEligibleCountry
  attr_accessor :payPalAccountAcceptsUnconfirmedAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerExpressEligible = nil, expressOptOut = nil, expressApproved = nil, expressEligibleListingType = nil, expressEnabledCategory = nil, eligiblePayPalAccount = nil, domesticShippingCost = nil, eligibleReturnPolicy = nil, picture = nil, eligibleItemCondition = nil, priceAboveMinimum = nil, priceBelowMaximum = nil, eligibleCheckout = nil, noPreapprovedBidderList = nil, noCharity = nil, combinedShippingDiscount = nil, shipFromEligibleCountry = nil, payPalAccountAcceptsUnconfirmedAddress = nil)
    @sellerExpressEligible = sellerExpressEligible
    @expressOptOut = expressOptOut
    @expressApproved = expressApproved
    @expressEligibleListingType = expressEligibleListingType
    @expressEnabledCategory = expressEnabledCategory
    @eligiblePayPalAccount = eligiblePayPalAccount
    @domesticShippingCost = domesticShippingCost
    @eligibleReturnPolicy = eligibleReturnPolicy
    @picture = picture
    @eligibleItemCondition = eligibleItemCondition
    @priceAboveMinimum = priceAboveMinimum
    @priceBelowMaximum = priceBelowMaximum
    @eligibleCheckout = eligibleCheckout
    @noPreapprovedBidderList = noPreapprovedBidderList
    @noCharity = noCharity
    @combinedShippingDiscount = combinedShippingDiscount
    @shipFromEligibleCountry = shipFromEligibleCountry
    @payPalAccountAcceptsUnconfirmedAddress = payPalAccountAcceptsUnconfirmedAddress
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressPicturesRequiredDefinitionType
class ExpressPicturesRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressPreferencesType
#   expressSellingPreference - ExpressSellingPreferenceCodeType
#   defaultPayPalAccount - SOAP::SOAPString
class ExpressPreferencesType
  attr_accessor :expressSellingPreference
  attr_accessor :defaultPayPalAccount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expressSellingPreference = nil, defaultPayPalAccount = nil)
    @expressSellingPreference = expressSellingPreference
    @defaultPayPalAccount = defaultPayPalAccount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressProductType
#   title - SOAP::SOAPString
#   minPrice - AmountType
#   maxPrice - AmountType
#   stockPhotoURL - SOAP::SOAPAnyURI
#   itemCount - SOAP::SOAPInt
#   externalProductID - ExternalProductIDType
#   productReferenceID - SOAP::SOAPLong
#   itemSpecifics - NameValueListArrayType
#   detailsURL - SOAP::SOAPAnyURI
#   productState - ProductStateCodeType
class ExpressProductType
  attr_accessor :title
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :stockPhotoURL
  attr_accessor :itemCount
  attr_accessor :externalProductID
  attr_accessor :productReferenceID
  attr_accessor :itemSpecifics
  attr_accessor :detailsURL
  attr_accessor :productState
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(title = nil, minPrice = nil, maxPrice = nil, stockPhotoURL = nil, itemCount = nil, externalProductID = nil, productReferenceID = nil, itemSpecifics = nil, detailsURL = nil, productState = nil)
    @title = title
    @minPrice = minPrice
    @maxPrice = maxPrice
    @stockPhotoURL = stockPhotoURL
    @itemCount = itemCount
    @externalProductID = externalProductID
    @productReferenceID = productReferenceID
    @itemSpecifics = itemSpecifics
    @detailsURL = detailsURL
    @productState = productState
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressSellerRequirementsType
#   expressSellingPreference - SOAP::SOAPBoolean
#   expressApproved - SOAP::SOAPBoolean
#   goodStanding - SOAP::SOAPBoolean
#   feedbackScore - FeedbackRequirementsType
#   positiveFeedbackPercent - FeedbackRequirementsType
#   feedbackAsSellerScore - FeedbackRequirementsType
#   positiveFeedbackAsSellerPercent - FeedbackRequirementsType
#   businessSeller - SOAP::SOAPBoolean
#   eligiblePayPalAccount - SOAP::SOAPBoolean
#   payPalAccountAcceptsUnconfirmedAddress - SOAP::SOAPBoolean
#   combinedPaymentsAccepted - SOAP::SOAPBoolean
#   feedbackPublic - SOAP::SOAPBoolean
class ExpressSellerRequirementsType
  attr_accessor :expressSellingPreference
  attr_accessor :expressApproved
  attr_accessor :goodStanding
  attr_accessor :feedbackScore
  attr_accessor :positiveFeedbackPercent
  attr_accessor :feedbackAsSellerScore
  attr_accessor :positiveFeedbackAsSellerPercent
  attr_accessor :businessSeller
  attr_accessor :eligiblePayPalAccount
  attr_accessor :payPalAccountAcceptsUnconfirmedAddress
  attr_accessor :combinedPaymentsAccepted
  attr_accessor :feedbackPublic
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expressSellingPreference = nil, expressApproved = nil, goodStanding = nil, feedbackScore = nil, positiveFeedbackPercent = nil, feedbackAsSellerScore = nil, positiveFeedbackAsSellerPercent = nil, businessSeller = nil, eligiblePayPalAccount = nil, payPalAccountAcceptsUnconfirmedAddress = nil, combinedPaymentsAccepted = nil, feedbackPublic = nil)
    @expressSellingPreference = expressSellingPreference
    @expressApproved = expressApproved
    @goodStanding = goodStanding
    @feedbackScore = feedbackScore
    @positiveFeedbackPercent = positiveFeedbackPercent
    @feedbackAsSellerScore = feedbackAsSellerScore
    @positiveFeedbackAsSellerPercent = positiveFeedbackAsSellerPercent
    @businessSeller = businessSeller
    @eligiblePayPalAccount = eligiblePayPalAccount
    @payPalAccountAcceptsUnconfirmedAddress = payPalAccountAcceptsUnconfirmedAddress
    @combinedPaymentsAccepted = combinedPaymentsAccepted
    @feedbackPublic = feedbackPublic
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedContactDetailsType
#   contactHoursDetails - ContactHoursDetailsType
#   classifiedAdContactByEmailEnabled - SOAP::SOAPBoolean
#   payPerLeadPhoneNumber - SOAP::SOAPString
class ExtendedContactDetailsType
  attr_accessor :contactHoursDetails
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :payPerLeadPhoneNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(contactHoursDetails = nil, classifiedAdContactByEmailEnabled = nil, payPerLeadPhoneNumber = nil)
    @contactHoursDetails = contactHoursDetails
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @payPerLeadPhoneNumber = payPerLeadPhoneNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedProductFinderIDType
#   productFinderID - SOAP::SOAPInt
#   productFinderBuySide - SOAP::SOAPBoolean
class ExtendedProductFinderIDType
  attr_accessor :productFinderID
  attr_accessor :productFinderBuySide

  def initialize(productFinderID = nil, productFinderBuySide = nil)
    @productFinderID = productFinderID
    @productFinderBuySide = productFinderBuySide
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalAlertIDArrayType
class ExternalAlertIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductIDType
#   value - SOAP::SOAPString
#   returnSearchResultOnDuplicates - SOAP::SOAPBoolean
#   type - ExternalProductCodeType
#   alternateValue - SOAP::SOAPString
class ExternalProductIDType
  attr_accessor :value
  attr_accessor :returnSearchResultOnDuplicates
  attr_accessor :type
  attr_accessor :alternateValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(value = nil, returnSearchResultOnDuplicates = nil, type = nil, alternateValue = [])
    @value = value
    @returnSearchResultOnDuplicates = returnSearchResultOnDuplicates
    @type = type
    @alternateValue = alternateValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalTransactionType
#   externalTransactionID - SOAP::SOAPString
#   externalTransactionTime - SOAP::SOAPDateTime
#   feeOrCreditAmount - AmountType
#   paymentOrRefundAmount - AmountType
class ExternalTransactionType
  attr_accessor :externalTransactionID
  attr_accessor :externalTransactionTime
  attr_accessor :feeOrCreditAmount
  attr_accessor :paymentOrRefundAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(externalTransactionID = nil, externalTransactionTime = nil, feeOrCreditAmount = nil, paymentOrRefundAmount = nil)
    @externalTransactionID = externalTransactionID
    @externalTransactionTime = externalTransactionTime
    @feeOrCreditAmount = feeOrCreditAmount
    @paymentOrRefundAmount = paymentOrRefundAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeatureDefinitionsType
#   listingDurations - ListingDurationDefinitionsType
#   shippingTermsRequired - ShippingTermRequiredDefinitionType
#   bestOfferEnabled - BestOfferEnabledDefinitionType
#   dutchBINEnabled - DutchBINEnabledDefinitionType
#   userConsentRequired - UserConsentRequiredDefinitionType
#   homePageFeaturedEnabled - HomePageFeaturedEnabledDefinitionType
#   proPackEnabled - ProPackEnabledDefinitionType
#   basicUpgradePackEnabled - BasicUpgradePackEnabledDefinitionType
#   valuePackEnabled - ValuePackEnabledDefinitionType
#   proPackPlusEnabled - ProPackPlusEnabledDefinitionType
#   adFormatEnabled - AdFormatEnabledDefinitionType
#   bestOfferCounterEnabled - BestOfferCounterEnabledDefinitionType
#   bestOfferAutoDeclineEnabled - BestOfferAutoDeclineEnabledDefinitionType
#   localMarketSpecialitySubscription - LocalMarketSpecialitySubscriptionDefinitionType
#   localMarketRegularSubscription - LocalMarketRegularSubscriptionDefinitionType
#   localMarketPremiumSubscription - LocalMarketPremiumSubscriptionDefinitionType
#   localMarketNonSubscription - LocalMarketNonSubscriptionDefinitionType
#   expressEnabled - ExpressEnabledDefinitionType
#   expressPicturesRequired - ExpressPicturesRequiredDefinitionType
#   expressConditionRequired - ExpressConditionRequiredDefinitionType
#   minimumReservePrice - MinimumReservePriceDefinitionType
#   transactionConfirmationRequestEnabled - TCREnabledDefinitionType
#   sellerContactDetailsEnabled - SellerContactDetailsEnabledDefinitionType
#   storeInventoryEnabled - StoreInventoryEnabledDefinitionType
#   skypeMeTransactionalEnabled - SkypeMeTransactionalEnabledDefinitionType
#   skypeMeNonTransactionalEnabled - SkypeMeNonTransactionalEnabledDefinitionType
#   localListingDistancesRegular - LocalListingDistancesRegularDefinitionType
#   localListingDistancesSpecialty - LocalListingDistancesSpecialtyDefinitionType
#   localListingDistancesNonSubscription - LocalListingDistancesNonSubscriptionDefinitionType
#   classifiedAdPaymentMethodEnabled - ClassifiedAdPaymentMethodEnabledDefinitionType
#   classifiedAdShippingMethodEnabled - ClassifiedAdShippingMethodEnabledDefinitionType
#   classifiedAdBestOfferEnabled - ClassifiedAdBestOfferEnabledDefinitionType
#   classifiedAdCounterOfferEnabled - ClassifiedAdCounterOfferEnabledDefinitionType
#   classifiedAdAutoDeclineEnabled - ClassifiedAdAutoDeclineEnabledDefinitionType
#   classifiedAdContactByPhoneEnabled - ClassifiedAdContactByPhoneEnabledDefinitionType
#   classifiedAdContactByEmailEnabled - ClassifiedAdContactByEmailEnabledDefintionType
#   safePaymentRequired - SafePaymentRequiredDefinitionType
#   classifiedAdPayPerLeadEnabled - ClassifiedAdPayPerLeadEnabledDefinitionType
#   itemSpecificsEnabled - ItemSpecificsEnabledDefinitionType
#   paisaPayFullEscrowEnabled - PaisaPayFullEscrowEnabledDefinitionType
#   bestOfferAutoAcceptEnabled - BestOfferAutoAcceptEnabledDefinitionType
#   classifiedAdAutoAcceptEnabled - ClassifiedAdAutoAcceptEnabledDefinitionType
#   crossBorderTradeNorthAmericaEnabled - CrossBorderTradeNorthAmericaEnabledDefinitionType
#   crossBorderTradeGBEnabled - CrossBorderTradeGBEnabledDefinitionType
#   crossBorderTradeAustraliaEnabled - CrossBorderTradeAustraliaEnabledDefinitionType
#   payPalBuyerProtectionEnabled - PayPalBuyerProtectionEnabledDefinitionType
#   buyerGuaranteeEnabled - BuyerGuaranteeEnabledDefinitionType
#   combinedFixedPriceTreatmentEnabled - CombinedFixedPriceTreatmentEnabledDefinitionType
#   galleryFeaturedDurations - ListingEnhancementDurationDefinitionType
#   iNEscrowWorkflowTimeline - INEscrowWorkflowTimelineDefinitionType
#   payPalRequired - PayPalRequiredDefinitionType
#   eBayMotorsProAdFormatEnabled - EBayMotorsProAdFormatEnabledDefinitionType
#   eBayMotorsProContactByPhoneEnabled - EBayMotorsProContactByPhoneEnabledDefinitionType
#   eBayMotorsProPhoneCount - EBayMotorsProPhoneCountDefinitionType
#   eBayMotorsProContactByAddressEnabled - EBayMotorsProContactByAddressEnabledDefinitionType
#   eBayMotorsProStreetCount - EBayMotorsProStreetCountDefinitionType
#   eBayMotorsProCompanyNameEnabled - EBayMotorsProCompanyNameEnabledDefinitionType
#   eBayMotorsProContactByEmailEnabled - EBayMotorsProContactByEmailEnabledDefinitionType
#   eBayMotorsProBestOfferEnabled - EBayMotorsProBestOfferEnabledDefinitionType
#   eBayMotorsProAutoAcceptEnabled - EBayMotorsProAutoAcceptEnabledDefinitionType
#   eBayMotorsProAutoDeclineEnabled - EBayMotorsProAutoDeclineEnabledDefinitionType
#   eBayMotorsProPaymentMethodCheckOutEnabled - EBayMotorsProPaymentMethodCheckOutEnabledDefinitionType
#   eBayMotorsProShippingMethodEnabled - EBayMotorsProShippingMethodEnabledDefinitionType
#   eBayMotorsProCounterOfferEnabled - EBayMotorsProCounterOfferEnabledDefinitionType
#   eBayMotorsProSellerContactDetailsEnabled - EBayMotorsProSellerContactDetailsEnabledDefinitionType
#   localMarketAdFormatEnabled - LocalMarketAdFormatEnabledDefinitionType
#   localMarketContactByPhoneEnabled - LocalMarketContactByPhoneEnabledDefinitionType
#   localMarketPhoneCount - LocalMarketPhoneCountDefinitionType
#   localMarketContactByAddressEnabled - LocalMarketContactByAddressEnabledDefinitionType
#   localMarketStreetCount - LocalMarketStreetCountDefinitionType
#   localMarketCompanyNameEnabled - LocalMarketCompanyNameEnabledDefinitionType
#   localMarketContactByEmailEnabled - LocalMarketContactByEmailEnabledDefinitionType
#   localMarketBestOfferEnabled - LocalMarketBestOfferEnabledDefinitionType
#   localMarketAutoAcceptEnabled - LocalMarketAutoAcceptEnabledDefinitionType
#   localMarketAutoDeclineEnabled - LocalMarketAutoDeclineEnabledDefinitionType
#   localMarketPaymentMethodCheckOutEnabled - LocalMarketPaymentMethodCheckOutEnabledDefinitionType
#   localMarketShippingMethodEnabled - LocalMarketShippingMethodEnabledDefinitionType
#   localMarketCounterOfferEnabled - LocalMarketCounterOfferEnabledDefinitionType
#   localMarketSellerContactDetailsEnabled - LocalMarketSellerContactDetailsEnabledDefinitionType
#   classifiedAdPhoneCount - ClassifiedAdPhoneCountDefinitionType
#   classifiedAdContactByAddressEnabled - ClassifiedAdContactByAddressEnabledDefinitionType
#   classifiedAdStreetCount - ClassifiedAdStreetCountDefinitionType
#   classifiedAdCompanyNameEnabled - ClassifiedAdCompanyNameEnabledDefinitionType
#   specialitySubscription - SpecialitySubscriptionDefinitionType
#   regularSubscription - RegularSubscriptionDefinitionType
#   premiumSubscription - PremiumSubscriptionDefinitionType
#   nonSubscription - NonSubscriptionDefinitionType
#   returnPolicyEnabled - ReturnPolicyEnabledDefinitionType
#   handlingTimeEnabled - HandlingTimeEnabledDefinitionType
#   payPalRequiredForStoreOwner - PayPalRequiredForStoreOwnerDefinitionType
#   reviseQuantityAllowed - ReviseQuantityAllowedDefinitionType
#   revisePriceAllowed - RevisePriceAllowedDefinitionType
#   storeOwnerExtendedListingDurationsEnabled - StoreOwnerExtendedListingDurationsEnabledDefinitionType
#   storeOwnerExtendedListingDurations - StoreOwnerExtendedListingDurationsDefinitionType
class FeatureDefinitionsType
  attr_accessor :listingDurations
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :localListingDistancesRegular
  attr_accessor :localListingDistancesSpecialty
  attr_accessor :localListingDistancesNonSubscription
  attr_accessor :classifiedAdPaymentMethodEnabled
  attr_accessor :classifiedAdShippingMethodEnabled
  attr_accessor :classifiedAdBestOfferEnabled
  attr_accessor :classifiedAdCounterOfferEnabled
  attr_accessor :classifiedAdAutoDeclineEnabled
  attr_accessor :classifiedAdContactByPhoneEnabled
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :safePaymentRequired
  attr_accessor :classifiedAdPayPerLeadEnabled
  attr_accessor :itemSpecificsEnabled
  attr_accessor :paisaPayFullEscrowEnabled
  attr_accessor :bestOfferAutoAcceptEnabled
  attr_accessor :classifiedAdAutoAcceptEnabled
  attr_accessor :crossBorderTradeNorthAmericaEnabled
  attr_accessor :crossBorderTradeGBEnabled
  attr_accessor :crossBorderTradeAustraliaEnabled
  attr_accessor :payPalBuyerProtectionEnabled
  attr_accessor :buyerGuaranteeEnabled
  attr_accessor :combinedFixedPriceTreatmentEnabled
  attr_accessor :galleryFeaturedDurations
  attr_accessor :iNEscrowWorkflowTimeline
  attr_accessor :payPalRequired
  attr_accessor :eBayMotorsProAdFormatEnabled
  attr_accessor :eBayMotorsProContactByPhoneEnabled
  attr_accessor :eBayMotorsProPhoneCount
  attr_accessor :eBayMotorsProContactByAddressEnabled
  attr_accessor :eBayMotorsProStreetCount
  attr_accessor :eBayMotorsProCompanyNameEnabled
  attr_accessor :eBayMotorsProContactByEmailEnabled
  attr_accessor :eBayMotorsProBestOfferEnabled
  attr_accessor :eBayMotorsProAutoAcceptEnabled
  attr_accessor :eBayMotorsProAutoDeclineEnabled
  attr_accessor :eBayMotorsProPaymentMethodCheckOutEnabled
  attr_accessor :eBayMotorsProShippingMethodEnabled
  attr_accessor :eBayMotorsProCounterOfferEnabled
  attr_accessor :eBayMotorsProSellerContactDetailsEnabled
  attr_accessor :localMarketAdFormatEnabled
  attr_accessor :localMarketContactByPhoneEnabled
  attr_accessor :localMarketPhoneCount
  attr_accessor :localMarketContactByAddressEnabled
  attr_accessor :localMarketStreetCount
  attr_accessor :localMarketCompanyNameEnabled
  attr_accessor :localMarketContactByEmailEnabled
  attr_accessor :localMarketBestOfferEnabled
  attr_accessor :localMarketAutoAcceptEnabled
  attr_accessor :localMarketAutoDeclineEnabled
  attr_accessor :localMarketPaymentMethodCheckOutEnabled
  attr_accessor :localMarketShippingMethodEnabled
  attr_accessor :localMarketCounterOfferEnabled
  attr_accessor :localMarketSellerContactDetailsEnabled
  attr_accessor :classifiedAdPhoneCount
  attr_accessor :classifiedAdContactByAddressEnabled
  attr_accessor :classifiedAdStreetCount
  attr_accessor :classifiedAdCompanyNameEnabled
  attr_accessor :specialitySubscription
  attr_accessor :regularSubscription
  attr_accessor :premiumSubscription
  attr_accessor :nonSubscription
  attr_accessor :returnPolicyEnabled
  attr_accessor :handlingTimeEnabled
  attr_accessor :payPalRequiredForStoreOwner
  attr_accessor :reviseQuantityAllowed
  attr_accessor :revisePriceAllowed
  attr_accessor :storeOwnerExtendedListingDurationsEnabled
  attr_accessor :storeOwnerExtendedListingDurations
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDurations = nil, shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, transactionConfirmationRequestEnabled = nil, sellerContactDetailsEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, localListingDistancesRegular = nil, localListingDistancesSpecialty = nil, localListingDistancesNonSubscription = nil, classifiedAdPaymentMethodEnabled = nil, classifiedAdShippingMethodEnabled = nil, classifiedAdBestOfferEnabled = nil, classifiedAdCounterOfferEnabled = nil, classifiedAdAutoDeclineEnabled = nil, classifiedAdContactByPhoneEnabled = nil, classifiedAdContactByEmailEnabled = nil, safePaymentRequired = nil, classifiedAdPayPerLeadEnabled = nil, itemSpecificsEnabled = nil, paisaPayFullEscrowEnabled = nil, bestOfferAutoAcceptEnabled = nil, classifiedAdAutoAcceptEnabled = nil, crossBorderTradeNorthAmericaEnabled = nil, crossBorderTradeGBEnabled = nil, crossBorderTradeAustraliaEnabled = nil, payPalBuyerProtectionEnabled = nil, buyerGuaranteeEnabled = nil, combinedFixedPriceTreatmentEnabled = nil, galleryFeaturedDurations = nil, iNEscrowWorkflowTimeline = nil, payPalRequired = nil, eBayMotorsProAdFormatEnabled = nil, eBayMotorsProContactByPhoneEnabled = nil, eBayMotorsProPhoneCount = nil, eBayMotorsProContactByAddressEnabled = nil, eBayMotorsProStreetCount = nil, eBayMotorsProCompanyNameEnabled = nil, eBayMotorsProContactByEmailEnabled = nil, eBayMotorsProBestOfferEnabled = nil, eBayMotorsProAutoAcceptEnabled = nil, eBayMotorsProAutoDeclineEnabled = nil, eBayMotorsProPaymentMethodCheckOutEnabled = nil, eBayMotorsProShippingMethodEnabled = nil, eBayMotorsProCounterOfferEnabled = nil, eBayMotorsProSellerContactDetailsEnabled = nil, localMarketAdFormatEnabled = nil, localMarketContactByPhoneEnabled = nil, localMarketPhoneCount = nil, localMarketContactByAddressEnabled = nil, localMarketStreetCount = nil, localMarketCompanyNameEnabled = nil, localMarketContactByEmailEnabled = nil, localMarketBestOfferEnabled = nil, localMarketAutoAcceptEnabled = nil, localMarketAutoDeclineEnabled = nil, localMarketPaymentMethodCheckOutEnabled = nil, localMarketShippingMethodEnabled = nil, localMarketCounterOfferEnabled = nil, localMarketSellerContactDetailsEnabled = nil, classifiedAdPhoneCount = nil, classifiedAdContactByAddressEnabled = nil, classifiedAdStreetCount = nil, classifiedAdCompanyNameEnabled = nil, specialitySubscription = nil, regularSubscription = nil, premiumSubscription = nil, nonSubscription = nil, returnPolicyEnabled = nil, handlingTimeEnabled = nil, payPalRequiredForStoreOwner = nil, reviseQuantityAllowed = nil, revisePriceAllowed = nil, storeOwnerExtendedListingDurationsEnabled = nil, storeOwnerExtendedListingDurations = nil)
    @listingDurations = listingDurations
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @localListingDistancesRegular = localListingDistancesRegular
    @localListingDistancesSpecialty = localListingDistancesSpecialty
    @localListingDistancesNonSubscription = localListingDistancesNonSubscription
    @classifiedAdPaymentMethodEnabled = classifiedAdPaymentMethodEnabled
    @classifiedAdShippingMethodEnabled = classifiedAdShippingMethodEnabled
    @classifiedAdBestOfferEnabled = classifiedAdBestOfferEnabled
    @classifiedAdCounterOfferEnabled = classifiedAdCounterOfferEnabled
    @classifiedAdAutoDeclineEnabled = classifiedAdAutoDeclineEnabled
    @classifiedAdContactByPhoneEnabled = classifiedAdContactByPhoneEnabled
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @safePaymentRequired = safePaymentRequired
    @classifiedAdPayPerLeadEnabled = classifiedAdPayPerLeadEnabled
    @itemSpecificsEnabled = itemSpecificsEnabled
    @paisaPayFullEscrowEnabled = paisaPayFullEscrowEnabled
    @bestOfferAutoAcceptEnabled = bestOfferAutoAcceptEnabled
    @classifiedAdAutoAcceptEnabled = classifiedAdAutoAcceptEnabled
    @crossBorderTradeNorthAmericaEnabled = crossBorderTradeNorthAmericaEnabled
    @crossBorderTradeGBEnabled = crossBorderTradeGBEnabled
    @crossBorderTradeAustraliaEnabled = crossBorderTradeAustraliaEnabled
    @payPalBuyerProtectionEnabled = payPalBuyerProtectionEnabled
    @buyerGuaranteeEnabled = buyerGuaranteeEnabled
    @combinedFixedPriceTreatmentEnabled = combinedFixedPriceTreatmentEnabled
    @galleryFeaturedDurations = galleryFeaturedDurations
    @iNEscrowWorkflowTimeline = iNEscrowWorkflowTimeline
    @payPalRequired = payPalRequired
    @eBayMotorsProAdFormatEnabled = eBayMotorsProAdFormatEnabled
    @eBayMotorsProContactByPhoneEnabled = eBayMotorsProContactByPhoneEnabled
    @eBayMotorsProPhoneCount = eBayMotorsProPhoneCount
    @eBayMotorsProContactByAddressEnabled = eBayMotorsProContactByAddressEnabled
    @eBayMotorsProStreetCount = eBayMotorsProStreetCount
    @eBayMotorsProCompanyNameEnabled = eBayMotorsProCompanyNameEnabled
    @eBayMotorsProContactByEmailEnabled = eBayMotorsProContactByEmailEnabled
    @eBayMotorsProBestOfferEnabled = eBayMotorsProBestOfferEnabled
    @eBayMotorsProAutoAcceptEnabled = eBayMotorsProAutoAcceptEnabled
    @eBayMotorsProAutoDeclineEnabled = eBayMotorsProAutoDeclineEnabled
    @eBayMotorsProPaymentMethodCheckOutEnabled = eBayMotorsProPaymentMethodCheckOutEnabled
    @eBayMotorsProShippingMethodEnabled = eBayMotorsProShippingMethodEnabled
    @eBayMotorsProCounterOfferEnabled = eBayMotorsProCounterOfferEnabled
    @eBayMotorsProSellerContactDetailsEnabled = eBayMotorsProSellerContactDetailsEnabled
    @localMarketAdFormatEnabled = localMarketAdFormatEnabled
    @localMarketContactByPhoneEnabled = localMarketContactByPhoneEnabled
    @localMarketPhoneCount = localMarketPhoneCount
    @localMarketContactByAddressEnabled = localMarketContactByAddressEnabled
    @localMarketStreetCount = localMarketStreetCount
    @localMarketCompanyNameEnabled = localMarketCompanyNameEnabled
    @localMarketContactByEmailEnabled = localMarketContactByEmailEnabled
    @localMarketBestOfferEnabled = localMarketBestOfferEnabled
    @localMarketAutoAcceptEnabled = localMarketAutoAcceptEnabled
    @localMarketAutoDeclineEnabled = localMarketAutoDeclineEnabled
    @localMarketPaymentMethodCheckOutEnabled = localMarketPaymentMethodCheckOutEnabled
    @localMarketShippingMethodEnabled = localMarketShippingMethodEnabled
    @localMarketCounterOfferEnabled = localMarketCounterOfferEnabled
    @localMarketSellerContactDetailsEnabled = localMarketSellerContactDetailsEnabled
    @classifiedAdPhoneCount = classifiedAdPhoneCount
    @classifiedAdContactByAddressEnabled = classifiedAdContactByAddressEnabled
    @classifiedAdStreetCount = classifiedAdStreetCount
    @classifiedAdCompanyNameEnabled = classifiedAdCompanyNameEnabled
    @specialitySubscription = specialitySubscription
    @regularSubscription = regularSubscription
    @premiumSubscription = premiumSubscription
    @nonSubscription = nonSubscription
    @returnPolicyEnabled = returnPolicyEnabled
    @handlingTimeEnabled = handlingTimeEnabled
    @payPalRequiredForStoreOwner = payPalRequiredForStoreOwner
    @reviseQuantityAllowed = reviseQuantityAllowed
    @revisePriceAllowed = revisePriceAllowed
    @storeOwnerExtendedListingDurationsEnabled = storeOwnerExtendedListingDurationsEnabled
    @storeOwnerExtendedListingDurations = storeOwnerExtendedListingDurations
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeeType
#   name - SOAP::SOAPString
#   fee - AmountType
class FeeType
  attr_accessor :name
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, fee = nil)
    @name = name
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackCommentArrayType
class FeedbackCommentArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailArrayType
class FeedbackDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailType
#   commentingUser - (any)
#   commentingUserScore - SOAP::SOAPInt
#   commentText - SOAP::SOAPString
#   commentTime - SOAP::SOAPDateTime
#   commentType - CommentTypeCodeType
#   feedbackResponse - SOAP::SOAPString
#   followup - SOAP::SOAPString
#   itemID - (any)
#   role - TradingRoleCodeType
#   itemTitle - SOAP::SOAPString
#   itemPrice - AmountType
#   feedbackID - SOAP::SOAPString
#   transactionID - SOAP::SOAPString
#   commentReplaced - SOAP::SOAPBoolean
#   responseReplaced - SOAP::SOAPBoolean
#   followUpReplaced - SOAP::SOAPBoolean
#   countable - SOAP::SOAPBoolean
class FeedbackDetailType
  attr_accessor :commentingUser
  attr_accessor :commentingUserScore
  attr_accessor :commentText
  attr_accessor :commentTime
  attr_accessor :commentType
  attr_accessor :feedbackResponse
  attr_accessor :followup
  attr_accessor :itemID
  attr_accessor :role
  attr_accessor :itemTitle
  attr_accessor :itemPrice
  attr_accessor :feedbackID
  attr_accessor :transactionID
  attr_accessor :commentReplaced
  attr_accessor :responseReplaced
  attr_accessor :followUpReplaced
  attr_accessor :countable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentingUser = nil, commentingUserScore = nil, commentText = nil, commentTime = nil, commentType = nil, feedbackResponse = nil, followup = nil, itemID = nil, role = nil, itemTitle = nil, itemPrice = nil, feedbackID = nil, transactionID = nil, commentReplaced = nil, responseReplaced = nil, followUpReplaced = nil, countable = nil)
    @commentingUser = commentingUser
    @commentingUserScore = commentingUserScore
    @commentText = commentText
    @commentTime = commentTime
    @commentType = commentType
    @feedbackResponse = feedbackResponse
    @followup = followup
    @itemID = itemID
    @role = role
    @itemTitle = itemTitle
    @itemPrice = itemPrice
    @feedbackID = feedbackID
    @transactionID = transactionID
    @commentReplaced = commentReplaced
    @responseReplaced = responseReplaced
    @followUpReplaced = followUpReplaced
    @countable = countable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackInfoType
#   commentText - SOAP::SOAPString
#   commentType - CommentTypeCodeType
#   targetUser - (any)
class FeedbackInfoType
  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :targetUser
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentText = nil, commentType = nil, targetUser = nil)
    @commentText = commentText
    @commentType = commentType
    @targetUser = targetUser
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodArrayType
class FeedbackPeriodArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodType
#   periodInDays - SOAP::SOAPInt
#   count - SOAP::SOAPInt
class FeedbackPeriodType
  attr_accessor :periodInDays
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(periodInDays = nil, count = nil)
    @periodInDays = periodInDays
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRequirementsType
#   xmlattr_minimum - SOAP::SOAPString
class FeedbackRequirementsType < ::String
  AttrMinimum = XSD::QName.new(nil, "minimum")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_minimum
    __xmlattr[AttrMinimum]
  end

  def xmlattr_minimum=(value)
    __xmlattr[AttrMinimum] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackSummaryType
#   bidRetractionFeedbackPeriodArray - FeedbackPeriodArrayType
#   negativeFeedbackPeriodArray - FeedbackPeriodArrayType
#   neutralFeedbackPeriodArray - FeedbackPeriodArrayType
#   positiveFeedbackPeriodArray - FeedbackPeriodArrayType
#   totalFeedbackPeriodArray - FeedbackPeriodArrayType
#   neutralCommentCountFromSuspendedUsers - SOAP::SOAPInt
#   uniqueNegativeFeedbackCount - SOAP::SOAPInt
#   uniquePositiveFeedbackCount - SOAP::SOAPInt
#   uniqueNeutralFeedbackCount - SOAP::SOAPInt
#   sellerRatingSummaryArray - SellerRatingSummaryArrayType
#   sellerRoleMetrics - SellerRoleMetricsType
#   buyerRoleMetrics - BuyerRoleMetricsType
class FeedbackSummaryType
  attr_accessor :bidRetractionFeedbackPeriodArray
  attr_accessor :negativeFeedbackPeriodArray
  attr_accessor :neutralFeedbackPeriodArray
  attr_accessor :positiveFeedbackPeriodArray
  attr_accessor :totalFeedbackPeriodArray
  attr_accessor :neutralCommentCountFromSuspendedUsers
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :uniqueNeutralFeedbackCount
  attr_accessor :sellerRatingSummaryArray
  attr_accessor :sellerRoleMetrics
  attr_accessor :buyerRoleMetrics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidRetractionFeedbackPeriodArray = nil, negativeFeedbackPeriodArray = nil, neutralFeedbackPeriodArray = nil, positiveFeedbackPeriodArray = nil, totalFeedbackPeriodArray = nil, neutralCommentCountFromSuspendedUsers = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, uniqueNeutralFeedbackCount = nil, sellerRatingSummaryArray = nil, sellerRoleMetrics = nil, buyerRoleMetrics = nil)
    @bidRetractionFeedbackPeriodArray = bidRetractionFeedbackPeriodArray
    @negativeFeedbackPeriodArray = negativeFeedbackPeriodArray
    @neutralFeedbackPeriodArray = neutralFeedbackPeriodArray
    @positiveFeedbackPeriodArray = positiveFeedbackPeriodArray
    @totalFeedbackPeriodArray = totalFeedbackPeriodArray
    @neutralCommentCountFromSuspendedUsers = neutralCommentCountFromSuspendedUsers
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @uniqueNeutralFeedbackCount = uniqueNeutralFeedbackCount
    @sellerRatingSummaryArray = sellerRatingSummaryArray
    @sellerRoleMetrics = sellerRoleMetrics
    @buyerRoleMetrics = buyerRoleMetrics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeesType
class FeesType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCostType
#   flatRateInsuranceRange - FlatRateInsuranceRangeCodeType
#   insuranceCost - AmountType
class FlatRateInsuranceRangeCostType
  attr_accessor :flatRateInsuranceRange
  attr_accessor :insuranceCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(flatRateInsuranceRange = nil, insuranceCost = nil)
    @flatRateInsuranceRange = flatRateInsuranceRange
    @insuranceCost = insuranceCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingDiscountType
#   discountName - DiscountNameCodeType
#   discountProfile - DiscountProfileType
class FlatShippingDiscountType
  attr_accessor :discountName
  attr_accessor :discountProfile
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, discountProfile = [])
    @discountName = discountName
    @discountProfile = discountProfile
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingPreferencesType
#   amountPerAdditionalItem - AmountType
#   deductionAmountPerAdditionalItem - AmountType
#   flatRateInsuranceRangeCost - FlatRateInsuranceRangeCostType
#   flatShippingRateOption - FlatShippingRateOptionCodeType
#   insuranceOption - InsuranceOptionCodeType
class FlatShippingPreferencesType
  attr_accessor :amountPerAdditionalItem
  attr_accessor :deductionAmountPerAdditionalItem
  attr_accessor :flatRateInsuranceRangeCost
  attr_accessor :flatShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPerAdditionalItem = nil, deductionAmountPerAdditionalItem = nil, flatRateInsuranceRangeCost = [], flatShippingRateOption = nil, insuranceOption = nil)
    @amountPerAdditionalItem = amountPerAdditionalItem
    @deductionAmountPerAdditionalItem = deductionAmountPerAdditionalItem
    @flatRateInsuranceRangeCost = flatRateInsuranceRangeCost
    @flatShippingRateOption = flatShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsRequestContainerType
#   listingFlow - ListingFlowCodeType
#   item - ItemType
#   recommendationEngine - RecommendationEngineCodeType
#   query - SOAP::SOAPString
#   correlationID - SOAP::SOAPString
#   deletedField - SOAP::SOAPString
class GetRecommendationsRequestContainerType
  attr_accessor :listingFlow
  attr_accessor :item
  attr_accessor :recommendationEngine
  attr_accessor :query
  attr_accessor :correlationID
  attr_accessor :deletedField
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingFlow = nil, item = nil, recommendationEngine = [], query = nil, correlationID = nil, deletedField = [])
    @listingFlow = listingFlow
    @item = item
    @recommendationEngine = recommendationEngine
    @query = query
    @correlationID = correlationID
    @deletedField = deletedField
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsResponseContainerType
#   listingAnalyzerRecommendations - ListingAnalyzerRecommendationsType
#   sIFFTASRecommendations - SIFFTASRecommendationsType
#   pricingRecommendations - PricingRecommendationsType
#   attributeRecommendations - AttributeRecommendationsType
#   productRecommendations - ProductRecommendationsType
#   correlationID - SOAP::SOAPString
#   itemSpecificsRecommendations - ItemSpecificsRecommendationsType
class GetRecommendationsResponseContainerType
  attr_accessor :listingAnalyzerRecommendations
  attr_accessor :sIFFTASRecommendations
  attr_accessor :pricingRecommendations
  attr_accessor :attributeRecommendations
  attr_accessor :productRecommendations
  attr_accessor :correlationID
  attr_accessor :itemSpecificsRecommendations
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingAnalyzerRecommendations = nil, sIFFTASRecommendations = nil, pricingRecommendations = nil, attributeRecommendations = nil, productRecommendations = nil, correlationID = nil, itemSpecificsRecommendations = nil)
    @listingAnalyzerRecommendations = listingAnalyzerRecommendations
    @sIFFTASRecommendations = sIFFTASRecommendations
    @pricingRecommendations = pricingRecommendations
    @attributeRecommendations = attributeRecommendations
    @productRecommendations = productRecommendations
    @correlationID = correlationID
    @itemSpecificsRecommendations = itemSpecificsRecommendations
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GroupType
#   maxGroups - SOAP::SOAPInt
#   maxEntriesPerGroup - SOAP::SOAPInt
class GroupType
  attr_accessor :maxGroups
  attr_accessor :maxEntriesPerGroup
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxGroups = nil, maxEntriesPerGroup = nil)
    @maxGroups = maxGroups
    @maxEntriesPerGroup = maxEntriesPerGroup
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}HandlingTimeEnabledDefinitionType
class HandlingTimeEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}HistogramEntryType
#   count - SOAP::SOAPInt
#   xmlattr_id - SOAP::SOAPString
#   xmlattr_name - SOAP::SOAPString
class HistogramEntryType
  AttrId = XSD::QName.new(nil, "id")
  AttrName = XSD::QName.new(nil, "name")

  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def xmlattr_name
    __xmlattr[AttrName]
  end

  def xmlattr_name=(value)
    __xmlattr[AttrName] = value
  end

  def initialize(count = nil)
    @count = count
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}HomePageFeaturedEnabledDefinitionType
class HomePageFeaturedEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}INEscrowWorkflowTimelineDefinitionType
class INEscrowWorkflowTimelineDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceDetailsType
#   insuranceFee - AmountType
#   insuranceOption - InsuranceOptionCodeType
class InsuranceDetailsType
  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(insuranceFee = nil, insuranceOption = nil)
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InternationalShippingServiceOptionsType
#   shippingService - SOAP::SOAPToken
#   shippingServiceCost - AmountType
#   shippingServiceAdditionalCost - AmountType
#   shippingServicePriority - SOAP::SOAPInt
#   shipToLocation - SOAP::SOAPString
#   shippingInsuranceCost - AmountType
class InternationalShippingServiceOptionsType
  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :shipToLocation
  attr_accessor :shippingInsuranceCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, shipToLocation = [], shippingInsuranceCost = nil)
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @shipToLocation = shipToLocation
    @shippingInsuranceCost = shippingInsuranceCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemArrayType
class ItemArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ItemBidDetailsType
#   itemID - (any)
#   categoryID - SOAP::SOAPString
#   bidCount - SOAP::SOAPInt
#   sellerID - (any)
#   lastBidTime - SOAP::SOAPDateTime
class ItemBidDetailsType
  attr_accessor :itemID
  attr_accessor :categoryID
  attr_accessor :bidCount
  attr_accessor :sellerID
  attr_accessor :lastBidTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, categoryID = nil, bidCount = nil, sellerID = nil, lastBidTime = nil)
    @itemID = itemID
    @categoryID = categoryID
    @bidCount = bidCount
    @sellerID = sellerID
    @lastBidTime = lastBidTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemIDArrayType
#   itemID - (any)
class ItemIDArrayType
  attr_accessor :itemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = [])
    @itemID = itemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemListCustomizationType
#   include - SOAP::SOAPBoolean
#   listingType - ListingTypeCodeType
#   sort - ItemSortTypeCodeType
#   durationInDays - SOAP::SOAPInt
#   includeNotes - SOAP::SOAPBoolean
#   pagination - PaginationType
class ItemListCustomizationType
  attr_accessor :include
  attr_accessor :listingType
  attr_accessor :sort
  attr_accessor :durationInDays
  attr_accessor :includeNotes
  attr_accessor :pagination
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, listingType = nil, sort = nil, durationInDays = nil, includeNotes = nil, pagination = nil)
    @include = include
    @listingType = listingType
    @sort = sort
    @durationInDays = durationInDays
    @includeNotes = includeNotes
    @pagination = pagination
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemPolicyViolationType
#   policyID - SOAP::SOAPLong
#   policyText - SOAP::SOAPString
class ItemPolicyViolationType
  attr_accessor :policyID
  attr_accessor :policyText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(policyID = nil, policyText = nil)
    @policyID = policyID
    @policyText = policyText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemRatingDetailArrayType
class ItemRatingDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ItemRatingDetailsType
#   ratingDetail - FeedbackRatingDetailCodeType
#   rating - SOAP::SOAPInt
class ItemRatingDetailsType
  attr_accessor :ratingDetail
  attr_accessor :rating
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(ratingDetail = nil, rating = nil)
    @ratingDetail = ratingDetail
    @rating = rating
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificDetailsType
#   maxItemSpecificsPerItem - SOAP::SOAPInt
#   maxValuesPerName - SOAP::SOAPInt
#   maxCharactersPerValue - SOAP::SOAPInt
#   maxCharactersPerName - SOAP::SOAPInt
class ItemSpecificDetailsType
  attr_accessor :maxItemSpecificsPerItem
  attr_accessor :maxValuesPerName
  attr_accessor :maxCharactersPerValue
  attr_accessor :maxCharactersPerName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxItemSpecificsPerItem = nil, maxValuesPerName = nil, maxCharactersPerValue = nil, maxCharactersPerName = nil)
    @maxItemSpecificsPerItem = maxItemSpecificsPerItem
    @maxValuesPerName = maxValuesPerName
    @maxCharactersPerValue = maxCharactersPerValue
    @maxCharactersPerName = maxCharactersPerName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificsEnabledDefinitionType
class ItemSpecificsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificsRecommendationsType
#   itemSpecifics - NameValueListArrayType
class ItemSpecificsRecommendationsType
  attr_accessor :itemSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemSpecifics = nil)
    @itemSpecifics = itemSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTotalsType
#   totalQuantity - SOAP::SOAPLong
#   totalValue - AmountType
class ItemTotalsType
  attr_accessor :totalQuantity
  attr_accessor :totalValue

  def initialize(totalQuantity = nil, totalValue = nil)
    @totalQuantity = totalQuantity
    @totalValue = totalValue
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDArrayType
class ItemTransactionIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
class ItemTransactionIDType
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil)
    @itemID = itemID
    @transactionID = transactionID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemType
#   applicationData - SOAP::SOAPString
#   attributeSetArray - AttributeSetArrayType
#   attributeArray - AttributeArrayType
#   lookupAttributeArray - LookupAttributeArrayType
#   applyShippingDiscount - SOAP::SOAPBoolean
#   autoPay - SOAP::SOAPBoolean
#   paymentDetails - PaymentDetailsType
#   biddingDetails - BiddingDetailsType
#   motorsGermanySearchable - SOAP::SOAPBoolean
#   buyerProtection - BuyerProtectionCodeType
#   buyItNowPrice - AmountType
#   categoryMappingAllowed - SOAP::SOAPBoolean
#   charity - CharityType
#   country - CountryCodeType
#   crossPromotion - CrossPromotionsType
#   currency - CurrencyCodeType
#   description - SOAP::SOAPString
#   descriptionReviseMode - DescriptionReviseModeCodeType
#   distance - DistanceType
#   giftIcon - SOAP::SOAPInt
#   giftServices - GiftServicesCodeType
#   hitCounter - HitCounterCodeType
#   itemID - (any)
#   listingDetails - ListingDetailsType
#   listingDesigner - ListingDesignerType
#   listingDuration - SOAP::SOAPToken
#   listingEnhancement - ListingEnhancementsCodeType
#   listingType - ListingTypeCodeType
#   location - SOAP::SOAPString
#   lotSize - SOAP::SOAPInt
#   nowAndNew - SOAP::SOAPBoolean
#   partnerCode - SOAP::SOAPString
#   partnerName - SOAP::SOAPString
#   paymentMethods - BuyerPaymentMethodCodeType
#   payPalEmailAddress - SOAP::SOAPString
#   primaryCategory - CategoryType
#   privateListing - SOAP::SOAPBoolean
#   productListingDetails - ProductListingDetailsType
#   quantity - SOAP::SOAPInt
#   privateNotes - SOAP::SOAPString
#   regionID - SOAP::SOAPString
#   relistLink - SOAP::SOAPBoolean
#   reservePrice - AmountType
#   reviseStatus - ReviseStatusType
#   scheduleTime - SOAP::SOAPDateTime
#   secondaryCategory - CategoryType
#   freeAddedCategory - CategoryType
#   seller - UserType
#   sellingStatus - SellingStatusType
#   shippingDetails - ShippingDetailsType
#   shipToLocations - SOAP::SOAPString
#   site - SiteCodeType
#   startPrice - AmountType
#   storefront - StorefrontType
#   subTitle - SOAP::SOAPString
#   timeLeft - SOAP::SOAPDuration
#   title - SOAP::SOAPString
#   uUID - (any)
#   vATDetails - VATDetailsType
#   sellerVacationNote - SOAP::SOAPString
#   watchCount - SOAP::SOAPLong
#   hitCount - SOAP::SOAPLong
#   disableBuyerRequirements - SOAP::SOAPBoolean
#   bestOfferDetails - BestOfferDetailsType
#   liveAuctionDetails - LiveAuctionDetailsType
#   locationDefaulted - SOAP::SOAPBoolean
#   thirdPartyCheckout - SOAP::SOAPBoolean
#   useTaxTable - SOAP::SOAPBoolean
#   getItFast - SOAP::SOAPBoolean
#   buyerResponsibleForShipping - SOAP::SOAPBoolean
#   limitedWarrantyEligible - SOAP::SOAPBoolean
#   eBayNotes - SOAP::SOAPString
#   questionCount - SOAP::SOAPLong
#   relisted - SOAP::SOAPBoolean
#   quantityAvailable - SOAP::SOAPInt
#   sKU - (any)
#   categoryBasedAttributesPrefill - SOAP::SOAPBoolean
#   searchDetails - SearchDetailsType
#   postalCode - SOAP::SOAPString
#   shippingTermsInDescription - SOAP::SOAPBoolean
#   externalProductID - ExternalProductIDType
#   sellerInventoryID - SOAP::SOAPString
#   pictureDetails - PictureDetailsType
#   dispatchTimeMax - SOAP::SOAPInt
#   skypeEnabled - SOAP::SOAPBoolean
#   skypeID - SOAP::SOAPString
#   skypeContactOption - SkypeContactOptionCodeType
#   bestOfferEnabled - SOAP::SOAPBoolean
#   localListing - SOAP::SOAPBoolean
#   thirdPartyCheckoutIntegration - SOAP::SOAPBoolean
#   listingCheckoutRedirectPreference - ListingCheckoutRedirectPreferenceType
#   sellerContactDetails - AddressType
#   totalQuestionCount - SOAP::SOAPLong
#   proxyItem - SOAP::SOAPBoolean
#   extendedSellerContactDetails - ExtendedContactDetailsType
#   leadCount - SOAP::SOAPInt
#   newLeadCount - SOAP::SOAPInt
#   itemSpecifics - NameValueListArrayType
#   groupCategoryID - SOAP::SOAPString
#   classifiedAdPayPerLeadFee - AmountType
#   bidGroupItem - SOAP::SOAPBoolean
#   applyBuyerProtection - BuyerProtectionDetailsType
#   listingSubtype2 - ListingSubtypeCodeType
#   mechanicalCheckAccepted - SOAP::SOAPBoolean
#   updateSellerInfo - SOAP::SOAPBoolean
#   updateReturnPolicy - SOAP::SOAPBoolean
#   itemPolicyViolation - ItemPolicyViolationType
#   crossBorderTrade - SOAP::SOAPString
#   businessSellerDetails - BusinessSellerDetailsType
#   buyerGuaranteePrice - AmountType
#   buyerRequirementDetails - BuyerRequirementDetailsType
#   returnPolicy - ReturnPolicyType
class ItemType
  attr_accessor :applicationData
  attr_accessor :attributeSetArray
  attr_accessor :attributeArray
  attr_accessor :lookupAttributeArray
  attr_accessor :applyShippingDiscount
  attr_accessor :autoPay
  attr_accessor :paymentDetails
  attr_accessor :biddingDetails
  attr_accessor :motorsGermanySearchable
  attr_accessor :buyerProtection
  attr_accessor :buyItNowPrice
  attr_accessor :categoryMappingAllowed
  attr_accessor :charity
  attr_accessor :country
  attr_accessor :crossPromotion
  attr_accessor :currency
  attr_accessor :description
  attr_accessor :descriptionReviseMode
  attr_accessor :distance
  attr_accessor :giftIcon
  attr_accessor :giftServices
  attr_accessor :hitCounter
  attr_accessor :itemID
  attr_accessor :listingDetails
  attr_accessor :listingDesigner
  attr_accessor :listingDuration
  attr_accessor :listingEnhancement
  attr_accessor :listingType
  attr_accessor :location
  attr_accessor :lotSize
  attr_accessor :nowAndNew
  attr_accessor :partnerCode
  attr_accessor :partnerName
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :primaryCategory
  attr_accessor :privateListing
  attr_accessor :productListingDetails
  attr_accessor :quantity
  attr_accessor :privateNotes
  attr_accessor :regionID
  attr_accessor :relistLink
  attr_accessor :reservePrice
  attr_accessor :reviseStatus
  attr_accessor :scheduleTime
  attr_accessor :secondaryCategory
  attr_accessor :freeAddedCategory
  attr_accessor :seller
  attr_accessor :sellingStatus
  attr_accessor :shippingDetails
  attr_accessor :shipToLocations
  attr_accessor :site
  attr_accessor :startPrice
  attr_accessor :storefront
  attr_accessor :subTitle
  attr_accessor :timeLeft
  attr_accessor :title
  attr_accessor :uUID
  attr_accessor :vATDetails
  attr_accessor :sellerVacationNote
  attr_accessor :watchCount
  attr_accessor :hitCount
  attr_accessor :disableBuyerRequirements
  attr_accessor :bestOfferDetails
  attr_accessor :liveAuctionDetails
  attr_accessor :locationDefaulted
  attr_accessor :thirdPartyCheckout
  attr_accessor :useTaxTable
  attr_accessor :getItFast
  attr_accessor :buyerResponsibleForShipping
  attr_accessor :limitedWarrantyEligible
  attr_accessor :eBayNotes
  attr_accessor :questionCount
  attr_accessor :relisted
  attr_accessor :quantityAvailable
  attr_accessor :sKU
  attr_accessor :categoryBasedAttributesPrefill
  attr_accessor :searchDetails
  attr_accessor :postalCode
  attr_accessor :shippingTermsInDescription
  attr_accessor :externalProductID
  attr_accessor :sellerInventoryID
  attr_accessor :pictureDetails
  attr_accessor :dispatchTimeMax
  attr_accessor :skypeEnabled
  attr_accessor :skypeID
  attr_accessor :skypeContactOption
  attr_accessor :bestOfferEnabled
  attr_accessor :localListing
  attr_accessor :thirdPartyCheckoutIntegration
  attr_accessor :listingCheckoutRedirectPreference
  attr_accessor :sellerContactDetails
  attr_accessor :totalQuestionCount
  attr_accessor :proxyItem
  attr_accessor :extendedSellerContactDetails
  attr_accessor :leadCount
  attr_accessor :newLeadCount
  attr_accessor :itemSpecifics
  attr_accessor :groupCategoryID
  attr_accessor :classifiedAdPayPerLeadFee
  attr_accessor :bidGroupItem
  attr_accessor :applyBuyerProtection
  attr_accessor :listingSubtype2
  attr_accessor :mechanicalCheckAccepted
  attr_accessor :updateSellerInfo
  attr_accessor :updateReturnPolicy
  attr_accessor :itemPolicyViolation
  attr_accessor :crossBorderTrade
  attr_accessor :businessSellerDetails
  attr_accessor :buyerGuaranteePrice
  attr_accessor :buyerRequirementDetails
  attr_accessor :returnPolicy
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationData = nil, attributeSetArray = nil, attributeArray = nil, lookupAttributeArray = nil, applyShippingDiscount = nil, autoPay = nil, paymentDetails = nil, biddingDetails = nil, motorsGermanySearchable = nil, buyerProtection = nil, buyItNowPrice = nil, categoryMappingAllowed = nil, charity = nil, country = nil, crossPromotion = nil, currency = nil, description = nil, descriptionReviseMode = nil, distance = nil, giftIcon = nil, giftServices = [], hitCounter = nil, itemID = nil, listingDetails = nil, listingDesigner = nil, listingDuration = nil, listingEnhancement = [], listingType = nil, location = nil, lotSize = nil, nowAndNew = nil, partnerCode = nil, partnerName = nil, paymentMethods = [], payPalEmailAddress = nil, primaryCategory = nil, privateListing = nil, productListingDetails = nil, quantity = nil, privateNotes = nil, regionID = nil, relistLink = nil, reservePrice = nil, reviseStatus = nil, scheduleTime = nil, secondaryCategory = nil, freeAddedCategory = nil, seller = nil, sellingStatus = nil, shippingDetails = nil, shipToLocations = [], site = nil, startPrice = nil, storefront = nil, subTitle = nil, timeLeft = nil, title = nil, uUID = nil, vATDetails = nil, sellerVacationNote = nil, watchCount = nil, hitCount = nil, disableBuyerRequirements = nil, bestOfferDetails = nil, liveAuctionDetails = nil, locationDefaulted = nil, thirdPartyCheckout = nil, useTaxTable = nil, getItFast = nil, buyerResponsibleForShipping = nil, limitedWarrantyEligible = nil, eBayNotes = nil, questionCount = nil, relisted = nil, quantityAvailable = nil, sKU = nil, categoryBasedAttributesPrefill = nil, searchDetails = nil, postalCode = nil, shippingTermsInDescription = nil, externalProductID = nil, sellerInventoryID = nil, pictureDetails = nil, dispatchTimeMax = nil, skypeEnabled = nil, skypeID = nil, skypeContactOption = [], bestOfferEnabled = nil, localListing = nil, thirdPartyCheckoutIntegration = nil, listingCheckoutRedirectPreference = nil, sellerContactDetails = nil, totalQuestionCount = nil, proxyItem = nil, extendedSellerContactDetails = nil, leadCount = nil, newLeadCount = nil, itemSpecifics = nil, groupCategoryID = nil, classifiedAdPayPerLeadFee = nil, bidGroupItem = nil, applyBuyerProtection = nil, listingSubtype2 = nil, mechanicalCheckAccepted = nil, updateSellerInfo = nil, updateReturnPolicy = nil, itemPolicyViolation = nil, crossBorderTrade = [], businessSellerDetails = nil, buyerGuaranteePrice = nil, buyerRequirementDetails = nil, returnPolicy = nil)
    @applicationData = applicationData
    @attributeSetArray = attributeSetArray
    @attributeArray = attributeArray
    @lookupAttributeArray = lookupAttributeArray
    @applyShippingDiscount = applyShippingDiscount
    @autoPay = autoPay
    @paymentDetails = paymentDetails
    @biddingDetails = biddingDetails
    @motorsGermanySearchable = motorsGermanySearchable
    @buyerProtection = buyerProtection
    @buyItNowPrice = buyItNowPrice
    @categoryMappingAllowed = categoryMappingAllowed
    @charity = charity
    @country = country
    @crossPromotion = crossPromotion
    @currency = currency
    @description = description
    @descriptionReviseMode = descriptionReviseMode
    @distance = distance
    @giftIcon = giftIcon
    @giftServices = giftServices
    @hitCounter = hitCounter
    @itemID = itemID
    @listingDetails = listingDetails
    @listingDesigner = listingDesigner
    @listingDuration = listingDuration
    @listingEnhancement = listingEnhancement
    @listingType = listingType
    @location = location
    @lotSize = lotSize
    @nowAndNew = nowAndNew
    @partnerCode = partnerCode
    @partnerName = partnerName
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @primaryCategory = primaryCategory
    @privateListing = privateListing
    @productListingDetails = productListingDetails
    @quantity = quantity
    @privateNotes = privateNotes
    @regionID = regionID
    @relistLink = relistLink
    @reservePrice = reservePrice
    @reviseStatus = reviseStatus
    @scheduleTime = scheduleTime
    @secondaryCategory = secondaryCategory
    @freeAddedCategory = freeAddedCategory
    @seller = seller
    @sellingStatus = sellingStatus
    @shippingDetails = shippingDetails
    @shipToLocations = shipToLocations
    @site = site
    @startPrice = startPrice
    @storefront = storefront
    @subTitle = subTitle
    @timeLeft = timeLeft
    @title = title
    @uUID = uUID
    @vATDetails = vATDetails
    @sellerVacationNote = sellerVacationNote
    @watchCount = watchCount
    @hitCount = hitCount
    @disableBuyerRequirements = disableBuyerRequirements
    @bestOfferDetails = bestOfferDetails
    @liveAuctionDetails = liveAuctionDetails
    @locationDefaulted = locationDefaulted
    @thirdPartyCheckout = thirdPartyCheckout
    @useTaxTable = useTaxTable
    @getItFast = getItFast
    @buyerResponsibleForShipping = buyerResponsibleForShipping
    @limitedWarrantyEligible = limitedWarrantyEligible
    @eBayNotes = eBayNotes
    @questionCount = questionCount
    @relisted = relisted
    @quantityAvailable = quantityAvailable
    @sKU = sKU
    @categoryBasedAttributesPrefill = categoryBasedAttributesPrefill
    @searchDetails = searchDetails
    @postalCode = postalCode
    @shippingTermsInDescription = shippingTermsInDescription
    @externalProductID = externalProductID
    @sellerInventoryID = sellerInventoryID
    @pictureDetails = pictureDetails
    @dispatchTimeMax = dispatchTimeMax
    @skypeEnabled = skypeEnabled
    @skypeID = skypeID
    @skypeContactOption = skypeContactOption
    @bestOfferEnabled = bestOfferEnabled
    @localListing = localListing
    @thirdPartyCheckoutIntegration = thirdPartyCheckoutIntegration
    @listingCheckoutRedirectPreference = listingCheckoutRedirectPreference
    @sellerContactDetails = sellerContactDetails
    @totalQuestionCount = totalQuestionCount
    @proxyItem = proxyItem
    @extendedSellerContactDetails = extendedSellerContactDetails
    @leadCount = leadCount
    @newLeadCount = newLeadCount
    @itemSpecifics = itemSpecifics
    @groupCategoryID = groupCategoryID
    @classifiedAdPayPerLeadFee = classifiedAdPayPerLeadFee
    @bidGroupItem = bidGroupItem
    @applyBuyerProtection = applyBuyerProtection
    @listingSubtype2 = listingSubtype2
    @mechanicalCheckAccepted = mechanicalCheckAccepted
    @updateSellerInfo = updateSellerInfo
    @updateReturnPolicy = updateReturnPolicy
    @itemPolicyViolation = itemPolicyViolation
    @crossBorderTrade = crossBorderTrade
    @businessSellerDetails = businessSellerDetails
    @buyerGuaranteePrice = buyerGuaranteePrice
    @buyerRequirementDetails = buyerRequirementDetails
    @returnPolicy = returnPolicy
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LabelType
#   name - SOAP::SOAPString
#   xmlattr_visible - SOAP::SOAPBoolean
class LabelType
  AttrVisible = XSD::QName.new(nil, "visible")

  attr_accessor :name
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_visible
    __xmlattr[AttrVisible]
  end

  def xmlattr_visible=(value)
    __xmlattr[AttrVisible] = value
  end

  def initialize(name = nil)
    @name = name
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingAnalyzerRecommendationsType
#   listingTipArray - ListingTipArrayType
class ListingAnalyzerRecommendationsType
  attr_accessor :listingTipArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipArray = nil)
    @listingTipArray = listingTipArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingCheckoutRedirectPreferenceType
#   proStoresStoreName - SOAP::SOAPString
#   sellerThirdPartyUsername - SOAP::SOAPString
class ListingCheckoutRedirectPreferenceType
  attr_accessor :proStoresStoreName
  attr_accessor :sellerThirdPartyUsername
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(proStoresStoreName = nil, sellerThirdPartyUsername = nil)
    @proStoresStoreName = proStoresStoreName
    @sellerThirdPartyUsername = sellerThirdPartyUsername
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDesignerType
#   layoutID - SOAP::SOAPInt
#   optimalPictureSize - SOAP::SOAPBoolean
#   themeID - SOAP::SOAPInt
class ListingDesignerType
  attr_accessor :layoutID
  attr_accessor :optimalPictureSize
  attr_accessor :themeID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(layoutID = nil, optimalPictureSize = nil, themeID = nil)
    @layoutID = layoutID
    @optimalPictureSize = optimalPictureSize
    @themeID = themeID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDetailsType
#   adult - SOAP::SOAPBoolean
#   bindingAuction - SOAP::SOAPBoolean
#   checkoutEnabled - SOAP::SOAPBoolean
#   convertedBuyItNowPrice - AmountType
#   convertedStartPrice - AmountType
#   convertedReservePrice - AmountType
#   hasReservePrice - SOAP::SOAPBoolean
#   relistedItemID - (any)
#   secondChanceOriginalItemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   viewItemURL - SOAP::SOAPAnyURI
#   hasUnansweredQuestions - SOAP::SOAPBoolean
#   hasPublicMessages - SOAP::SOAPBoolean
#   buyItNowAvailable - SOAP::SOAPBoolean
#   sellerBusinessType - SellerBusinessCodeType
#   minimumBestOfferPrice - AmountType
#   minimumBestOfferMessage - SOAP::SOAPString
#   localListingDistance - SOAP::SOAPString
#   tCROriginalItemID - (any)
#   viewItemURLForNaturalSearch - SOAP::SOAPAnyURI
#   payPerLeadEnabled - SOAP::SOAPBoolean
#   bestOfferAutoAcceptPrice - AmountType
class ListingDetailsType
  attr_accessor :adult
  attr_accessor :bindingAuction
  attr_accessor :checkoutEnabled
  attr_accessor :convertedBuyItNowPrice
  attr_accessor :convertedStartPrice
  attr_accessor :convertedReservePrice
  attr_accessor :hasReservePrice
  attr_accessor :relistedItemID
  attr_accessor :secondChanceOriginalItemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :viewItemURL
  attr_accessor :hasUnansweredQuestions
  attr_accessor :hasPublicMessages
  attr_accessor :buyItNowAvailable
  attr_accessor :sellerBusinessType
  attr_accessor :minimumBestOfferPrice
  attr_accessor :minimumBestOfferMessage
  attr_accessor :localListingDistance
  attr_accessor :tCROriginalItemID
  attr_accessor :viewItemURLForNaturalSearch
  attr_accessor :payPerLeadEnabled
  attr_accessor :bestOfferAutoAcceptPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(adult = nil, bindingAuction = nil, checkoutEnabled = nil, convertedBuyItNowPrice = nil, convertedStartPrice = nil, convertedReservePrice = nil, hasReservePrice = nil, relistedItemID = nil, secondChanceOriginalItemID = nil, startTime = nil, endTime = nil, viewItemURL = nil, hasUnansweredQuestions = nil, hasPublicMessages = nil, buyItNowAvailable = nil, sellerBusinessType = nil, minimumBestOfferPrice = nil, minimumBestOfferMessage = nil, localListingDistance = nil, tCROriginalItemID = nil, viewItemURLForNaturalSearch = nil, payPerLeadEnabled = nil, bestOfferAutoAcceptPrice = nil)
    @adult = adult
    @bindingAuction = bindingAuction
    @checkoutEnabled = checkoutEnabled
    @convertedBuyItNowPrice = convertedBuyItNowPrice
    @convertedStartPrice = convertedStartPrice
    @convertedReservePrice = convertedReservePrice
    @hasReservePrice = hasReservePrice
    @relistedItemID = relistedItemID
    @secondChanceOriginalItemID = secondChanceOriginalItemID
    @startTime = startTime
    @endTime = endTime
    @viewItemURL = viewItemURL
    @hasUnansweredQuestions = hasUnansweredQuestions
    @hasPublicMessages = hasPublicMessages
    @buyItNowAvailable = buyItNowAvailable
    @sellerBusinessType = sellerBusinessType
    @minimumBestOfferPrice = minimumBestOfferPrice
    @minimumBestOfferMessage = minimumBestOfferMessage
    @localListingDistance = localListingDistance
    @tCROriginalItemID = tCROriginalItemID
    @viewItemURLForNaturalSearch = viewItemURLForNaturalSearch
    @payPerLeadEnabled = payPerLeadEnabled
    @bestOfferAutoAcceptPrice = bestOfferAutoAcceptPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionType
#   duration - SOAP::SOAPToken
#   xmlattr_durationSetID - SOAP::SOAPInt
class ListingDurationDefinitionType
  AttrDurationSetID = XSD::QName.new(nil, "durationSetID")

  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_durationSetID
    __xmlattr[AttrDurationSetID]
  end

  def xmlattr_durationSetID=(value)
    __xmlattr[AttrDurationSetID] = value
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionsType
#   listingDuration - ListingDurationDefinitionType
#   xmlattr_Version - SOAP::SOAPInt
class ListingDurationDefinitionsType
  AttrVersion = XSD::QName.new(nil, "Version")

  attr_accessor :listingDuration

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_Version
    __xmlattr[AttrVersion]
  end

  def xmlattr_Version=(value)
    __xmlattr[AttrVersion] = value
  end

  def initialize(listingDuration = [])
    @listingDuration = listingDuration
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationReferenceType
#   xmlattr_type - SOAP::SOAPToken
class ListingDurationReferenceType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementDurationDefinitionType
class ListingEnhancementDurationDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementDurationReferenceType
#   duration - SOAP::SOAPToken
class ListingEnhancementDurationReferenceType
  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipArrayType
class ListingTipArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipFieldType
#   listingTipFieldID - SOAP::SOAPString
#   fieldTip - SOAP::SOAPString
#   currentFieldText - SOAP::SOAPString
#   currentFieldValue - SOAP::SOAPString
class ListingTipFieldType
  attr_accessor :listingTipFieldID
  attr_accessor :fieldTip
  attr_accessor :currentFieldText
  attr_accessor :currentFieldValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipFieldID = nil, fieldTip = nil, currentFieldText = nil, currentFieldValue = nil)
    @listingTipFieldID = listingTipFieldID
    @fieldTip = fieldTip
    @currentFieldText = currentFieldText
    @currentFieldValue = currentFieldValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipMessageType
#   listingTipMessageID - SOAP::SOAPString
#   shortMessage - SOAP::SOAPString
#   longMessage - SOAP::SOAPString
#   helpURLPath - SOAP::SOAPString
class ListingTipMessageType
  attr_accessor :listingTipMessageID
  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :helpURLPath
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipMessageID = nil, shortMessage = nil, longMessage = nil, helpURLPath = nil)
    @listingTipMessageID = listingTipMessageID
    @shortMessage = shortMessage
    @longMessage = longMessage
    @helpURLPath = helpURLPath
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipType
#   listingTipID - SOAP::SOAPString
#   priority - SOAP::SOAPInt
#   message - ListingTipMessageType
#   field - ListingTipFieldType
class ListingTipType
  attr_accessor :listingTipID
  attr_accessor :priority
  attr_accessor :message
  attr_accessor :field
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipID = nil, priority = nil, message = nil, field = nil)
    @listingTipID = listingTipID
    @priority = priority
    @message = message
    @field = field
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionApprovalStatusArrayType
class LiveAuctionApprovalStatusArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionApprovalStatusType
#   userID - (any)
#   status - SOAP::SOAPString
class LiveAuctionApprovalStatusType
  attr_accessor :userID
  attr_accessor :status

  def initialize(userID = nil, status = nil)
    @userID = userID
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionBidArrayType
class LiveAuctionBidArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionBidType
#   requestedBiddingLimit - AmountType
#   bidderStatus - BidderStatusCodeType
#   approvedBiddingLimit - AmountType
#   declinedComment - SOAP::SOAPString
class LiveAuctionBidType
  attr_accessor :requestedBiddingLimit
  attr_accessor :bidderStatus
  attr_accessor :approvedBiddingLimit
  attr_accessor :declinedComment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(requestedBiddingLimit = nil, bidderStatus = nil, approvedBiddingLimit = nil, declinedComment = nil)
    @requestedBiddingLimit = requestedBiddingLimit
    @bidderStatus = bidderStatus
    @approvedBiddingLimit = approvedBiddingLimit
    @declinedComment = declinedComment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionCatalogType
#   userCatalogID - SOAP::SOAPInt
#   catalogName - SOAP::SOAPString
#   schedule - ScheduleType
class LiveAuctionCatalogType
  attr_accessor :userCatalogID
  attr_accessor :catalogName
  attr_accessor :schedule
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userCatalogID = nil, catalogName = nil, schedule = [])
    @userCatalogID = userCatalogID
    @catalogName = catalogName
    @schedule = schedule
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LiveAuctionDetailsType
#   userCatalogID - SOAP::SOAPInt
#   scheduleID - SOAP::SOAPInt
#   lotNumber - SOAP::SOAPString
#   highEstimate - AmountType
#   lowEstimate - AmountType
class LiveAuctionDetailsType
  attr_accessor :userCatalogID
  attr_accessor :scheduleID
  attr_accessor :lotNumber
  attr_accessor :highEstimate
  attr_accessor :lowEstimate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userCatalogID = nil, scheduleID = nil, lotNumber = nil, highEstimate = nil, lowEstimate = nil)
    @userCatalogID = userCatalogID
    @scheduleID = scheduleID
    @lotNumber = lotNumber
    @highEstimate = highEstimate
    @lowEstimate = lowEstimate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesNonSubscriptionDefinitionType
class LocalListingDistancesNonSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesRegularDefinitionType
class LocalListingDistancesRegularDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesSpecialtyDefinitionType
class LocalListingDistancesSpecialtyDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketAdFormatEnabledDefinitionType
class LocalMarketAdFormatEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketAutoAcceptEnabledDefinitionType
class LocalMarketAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketAutoDeclineEnabledDefinitionType
class LocalMarketAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketBestOfferEnabledDefinitionType
class LocalMarketBestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketCompanyNameEnabledDefinitionType
class LocalMarketCompanyNameEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketContactByAddressEnabledDefinitionType
class LocalMarketContactByAddressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketContactByEmailEnabledDefinitionType
class LocalMarketContactByEmailEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketContactByPhoneEnabledDefinitionType
class LocalMarketContactByPhoneEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketCounterOfferEnabledDefinitionType
class LocalMarketCounterOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketNonSubscriptionDefinitionType
class LocalMarketNonSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPaymentMethodCheckOutEnabledDefinitionType
class LocalMarketPaymentMethodCheckOutEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPhoneCountDefinitionType
class LocalMarketPhoneCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPremiumSubscriptionDefinitionType
class LocalMarketPremiumSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketRegularSubscriptionDefinitionType
class LocalMarketRegularSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketSellerContactDetailsEnabledDefinitionType
class LocalMarketSellerContactDetailsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketShippingMethodEnabledDefinitionType
class LocalMarketShippingMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketSpecialitySubscriptionDefinitionType
class LocalMarketSpecialitySubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketStreetCountDefinitionType
class LocalMarketStreetCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalSearchType
#   maxDistance - SOAP::SOAPInt
#   postalCode - SOAP::SOAPString
class LocalSearchType
  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxDistance = nil, postalCode = nil)
    @maxDistance = maxDistance
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeArrayType
class LookupAttributeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeType
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class LookupAttributeType
  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = nil)
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownEventType
#   type - MarkUpMarkDownEventTypeCodeType
#   time - SOAP::SOAPDateTime
#   reason - SOAP::SOAPString
class MarkUpMarkDownEventType
  attr_accessor :type
  attr_accessor :time
  attr_accessor :reason
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(type = nil, time = nil, reason = nil)
    @type = type
    @time = time
    @reason = reason
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownHistoryType
class MarkUpMarkDownHistoryType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MaximumBuyerPolicyViolationsType
#   count - SOAP::SOAPInt
#   period - PeriodCodeType
class MaximumBuyerPolicyViolationsType
  attr_accessor :count
  attr_accessor :period
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(count = nil, period = nil)
    @count = count
    @period = period
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumItemRequirementsType
#   maximumItemCount - SOAP::SOAPInt
#   minimumFeedbackScore - SOAP::SOAPInt
class MaximumItemRequirementsType
  attr_accessor :maximumItemCount
  attr_accessor :minimumFeedbackScore

  def initialize(maximumItemCount = nil, minimumFeedbackScore = nil)
    @maximumItemCount = maximumItemCount
    @minimumFeedbackScore = minimumFeedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumUnpaidItemStrikesInfoType
#   count - SOAP::SOAPInt
#   period - PeriodCodeType
class MaximumUnpaidItemStrikesInfoType
  attr_accessor :count
  attr_accessor :period
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(count = nil, period = nil)
    @count = count
    @period = period
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeArrayType
class MemberMessageExchangeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeType
#   item - ItemType
#   question - MemberMessageType
#   response - SOAP::SOAPString
#   messageStatus - MessageStatusTypeCodeType
#   creationDate - SOAP::SOAPDateTime
#   lastModifiedDate - SOAP::SOAPDateTime
class MemberMessageExchangeType
  attr_accessor :item
  attr_accessor :question
  attr_accessor :response
  attr_accessor :messageStatus
  attr_accessor :creationDate
  attr_accessor :lastModifiedDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, question = nil, response = [], messageStatus = nil, creationDate = nil, lastModifiedDate = nil)
    @item = item
    @question = question
    @response = response
    @messageStatus = messageStatus
    @creationDate = creationDate
    @lastModifiedDate = lastModifiedDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageType
#   messageType - MessageTypeCodeType
#   questionType - QuestionTypeCodeType
#   emailCopyToSender - SOAP::SOAPBoolean
#   hideSendersEmailAddress - SOAP::SOAPBoolean
#   displayToPublic - SOAP::SOAPBoolean
#   senderID - SOAP::SOAPString
#   senderEmail - SOAP::SOAPString
#   recipientID - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   body - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   parentMessageID - SOAP::SOAPString
class MemberMessageType
  attr_accessor :messageType
  attr_accessor :questionType
  attr_accessor :emailCopyToSender
  attr_accessor :hideSendersEmailAddress
  attr_accessor :displayToPublic
  attr_accessor :senderID
  attr_accessor :senderEmail
  attr_accessor :recipientID
  attr_accessor :subject
  attr_accessor :body
  attr_accessor :messageID
  attr_accessor :parentMessageID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageType = nil, questionType = nil, emailCopyToSender = nil, hideSendersEmailAddress = nil, displayToPublic = nil, senderID = nil, senderEmail = nil, recipientID = [], subject = nil, body = nil, messageID = nil, parentMessageID = nil)
    @messageType = messageType
    @questionType = questionType
    @emailCopyToSender = emailCopyToSender
    @hideSendersEmailAddress = hideSendersEmailAddress
    @displayToPublic = displayToPublic
    @senderID = senderID
    @senderEmail = senderEmail
    @recipientID = recipientID
    @subject = subject
    @body = body
    @messageID = messageID
    @parentMessageID = parentMessageID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MinimumReservePriceDefinitionType
class MinimumReservePriceDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MotorsLocalMarketEnabledDefinitionType
class MotorsLocalMarketEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertArrayType
class MyMessagesAlertArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertIDArrayType
class MyMessagesAlertIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertType
#   sender - SOAP::SOAPString
#   recipientUserID - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   priority - SOAP::SOAPString
#   alertID - (any)
#   externalAlertID - SOAP::SOAPString
#   contentType - SOAP::SOAPString
#   text - SOAP::SOAPString
#   resolutionStatus - MyMessagesAlertResolutionStatusCode
#   read - SOAP::SOAPBoolean
#   creationDate - SOAP::SOAPDateTime
#   receiveDate - SOAP::SOAPDateTime
#   expirationDate - SOAP::SOAPDateTime
#   resolutionDate - SOAP::SOAPDateTime
#   lastReadDate - SOAP::SOAPDateTime
#   itemID - (any)
#   isTimedResolution - SOAP::SOAPBoolean
#   actionURL - SOAP::SOAPString
#   responseDetails - MyMessagesResponseDetailsType
#   forwardDetails - MyMessagesForwardDetailsType
#   folder - MyMessagesFolderType
class MyMessagesAlertType
  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :subject
  attr_accessor :priority
  attr_accessor :alertID
  attr_accessor :externalAlertID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :resolutionStatus
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :resolutionDate
  attr_accessor :lastReadDate
  attr_accessor :itemID
  attr_accessor :isTimedResolution
  attr_accessor :actionURL
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, subject = nil, priority = nil, alertID = nil, externalAlertID = nil, contentType = nil, text = nil, resolutionStatus = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, resolutionDate = nil, lastReadDate = nil, itemID = nil, isTimedResolution = nil, actionURL = nil, responseDetails = nil, forwardDetails = nil, folder = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @subject = subject
    @priority = priority
    @alertID = alertID
    @externalAlertID = externalAlertID
    @contentType = contentType
    @text = text
    @resolutionStatus = resolutionStatus
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @resolutionDate = resolutionDate
    @lastReadDate = lastReadDate
    @itemID = itemID
    @isTimedResolution = isTimedResolution
    @actionURL = actionURL
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesExternalMessageIDArrayType
class MyMessagesExternalMessageIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderSummaryType
#   folderID - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
#   newAlertCount - SOAP::SOAPInt
#   newMessageCount - SOAP::SOAPInt
#   totalAlertCount - SOAP::SOAPInt
#   totalMessageCount - SOAP::SOAPInt
class MyMessagesFolderSummaryType
  attr_accessor :folderID
  attr_accessor :folderName
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil, newAlertCount = nil, newMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil)
    @folderID = folderID
    @folderName = folderName
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderType
#   folderID - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
class MyMessagesFolderType
  attr_accessor :folderID
  attr_accessor :folderName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil)
    @folderID = folderID
    @folderName = folderName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesForwardDetailsType
#   userForwardDate - SOAP::SOAPDateTime
#   forwardMessageEncoding - SOAP::SOAPString
class MyMessagesForwardDetailsType
  attr_accessor :userForwardDate
  attr_accessor :forwardMessageEncoding
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userForwardDate = nil, forwardMessageEncoding = nil)
    @userForwardDate = userForwardDate
    @forwardMessageEncoding = forwardMessageEncoding
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageArrayType
class MyMessagesMessageArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageIDArrayType
class MyMessagesMessageIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageType
#   sender - SOAP::SOAPString
#   recipientUserID - SOAP::SOAPString
#   sendToName - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   messageID - (any)
#   externalMessageID - SOAP::SOAPString
#   contentType - SOAP::SOAPString
#   text - SOAP::SOAPString
#   flagged - SOAP::SOAPBoolean
#   read - SOAP::SOAPBoolean
#   creationDate - SOAP::SOAPDateTime
#   receiveDate - SOAP::SOAPDateTime
#   expirationDate - SOAP::SOAPDateTime
#   itemID - (any)
#   responseDetails - MyMessagesResponseDetailsType
#   forwardDetails - MyMessagesForwardDetailsType
#   folder - MyMessagesFolderType
#   content - SOAP::SOAPString
#   messageType - MessageTypeCodeType
#   listingStatus - ListingStatusCodeType
#   questionType - QuestionTypeCodeType
class MyMessagesMessageType
  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :sendToName
  attr_accessor :subject
  attr_accessor :messageID
  attr_accessor :externalMessageID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :flagged
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :itemID
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_accessor :content
  attr_accessor :messageType
  attr_accessor :listingStatus
  attr_accessor :questionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, sendToName = nil, subject = nil, messageID = nil, externalMessageID = nil, contentType = nil, text = nil, flagged = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, itemID = nil, responseDetails = nil, forwardDetails = nil, folder = nil, content = nil, messageType = nil, listingStatus = nil, questionType = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @sendToName = sendToName
    @subject = subject
    @messageID = messageID
    @externalMessageID = externalMessageID
    @contentType = contentType
    @text = text
    @flagged = flagged
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @itemID = itemID
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @content = content
    @messageType = messageType
    @listingStatus = listingStatus
    @questionType = questionType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesResponseDetailsType
#   responseEnabled - SOAP::SOAPBoolean
#   responseURL - SOAP::SOAPAnyURI
#   userResponseDate - SOAP::SOAPDateTime
class MyMessagesResponseDetailsType
  attr_accessor :responseEnabled
  attr_accessor :responseURL
  attr_accessor :userResponseDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(responseEnabled = nil, responseURL = nil, userResponseDate = nil)
    @responseEnabled = responseEnabled
    @responseURL = responseURL
    @userResponseDate = userResponseDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesSummaryType
#   folderSummary - MyMessagesFolderSummaryType
#   newAlertCount - SOAP::SOAPInt
#   newMessageCount - SOAP::SOAPInt
#   unresolvedAlertCount - SOAP::SOAPInt
#   flaggedMessageCount - SOAP::SOAPInt
#   totalAlertCount - SOAP::SOAPInt
#   totalMessageCount - SOAP::SOAPInt
class MyMessagesSummaryType
  attr_accessor :folderSummary
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :unresolvedAlertCount
  attr_accessor :flaggedMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount

  def initialize(folderSummary = [], newAlertCount = nil, newMessageCount = nil, unresolvedAlertCount = nil, flaggedMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil)
    @folderSummary = folderSummary
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @unresolvedAlertCount = unresolvedAlertCount
    @flaggedMessageCount = flaggedMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchListType
#   totalAvailable - SOAP::SOAPInt
#   favoriteSearch - MyeBayFavoriteSearchType
class MyeBayFavoriteSearchListType
  attr_accessor :totalAvailable
  attr_accessor :favoriteSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSearch = [])
    @totalAvailable = totalAvailable
    @favoriteSearch = favoriteSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchType
#   searchName - SOAP::SOAPString
#   searchQuery - SOAP::SOAPString
#   queryKeywords - SOAP::SOAPString
#   categoryID - SOAP::SOAPString
#   itemSort - SimpleItemSortCodeType
#   sortOrder - SortOrderCodeType
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   maxDistance - SOAP::SOAPInt
#   postalCode - SOAP::SOAPString
#   itemType - ItemTypeCodeType
#   priceMax - AmountType
#   priceMin - AmountType
#   currency - CurrencyCodeType
#   bidCountMax - SOAP::SOAPInt
#   bidCountMin - SOAP::SOAPInt
#   searchFlag - SearchFlagCodeType
#   paymentMethod - PaymentMethodSearchCodeType
#   preferredLocation - PreferredLocationCodeType
#   sellerID - SOAP::SOAPString
#   sellerIDExclude - SOAP::SOAPString
#   itemsAvailableTo - CountryCodeType
#   itemsLocatedIn - CountryCodeType
#   sellerBusinessType - SellerBusinessCodeType
#   condition - ItemConditionCodeType
#   quantity - SOAP::SOAPInt
#   quantityOperator - QuantityOperatorCodeType
class MyeBayFavoriteSearchType
  attr_accessor :searchName
  attr_accessor :searchQuery
  attr_accessor :queryKeywords
  attr_accessor :categoryID
  attr_accessor :itemSort
  attr_accessor :sortOrder
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_accessor :itemType
  attr_accessor :priceMax
  attr_accessor :priceMin
  attr_accessor :currency
  attr_accessor :bidCountMax
  attr_accessor :bidCountMin
  attr_accessor :searchFlag
  attr_accessor :paymentMethod
  attr_accessor :preferredLocation
  attr_accessor :sellerID
  attr_accessor :sellerIDExclude
  attr_accessor :itemsAvailableTo
  attr_accessor :itemsLocatedIn
  attr_accessor :sellerBusinessType
  attr_accessor :condition
  attr_accessor :quantity
  attr_accessor :quantityOperator
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchName = nil, searchQuery = nil, queryKeywords = nil, categoryID = nil, itemSort = nil, sortOrder = nil, endTimeFrom = nil, endTimeTo = nil, maxDistance = nil, postalCode = nil, itemType = nil, priceMax = nil, priceMin = nil, currency = nil, bidCountMax = nil, bidCountMin = nil, searchFlag = [], paymentMethod = nil, preferredLocation = nil, sellerID = [], sellerIDExclude = [], itemsAvailableTo = nil, itemsLocatedIn = nil, sellerBusinessType = nil, condition = nil, quantity = nil, quantityOperator = nil)
    @searchName = searchName
    @searchQuery = searchQuery
    @queryKeywords = queryKeywords
    @categoryID = categoryID
    @itemSort = itemSort
    @sortOrder = sortOrder
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @maxDistance = maxDistance
    @postalCode = postalCode
    @itemType = itemType
    @priceMax = priceMax
    @priceMin = priceMin
    @currency = currency
    @bidCountMax = bidCountMax
    @bidCountMin = bidCountMin
    @searchFlag = searchFlag
    @paymentMethod = paymentMethod
    @preferredLocation = preferredLocation
    @sellerID = sellerID
    @sellerIDExclude = sellerIDExclude
    @itemsAvailableTo = itemsAvailableTo
    @itemsLocatedIn = itemsLocatedIn
    @sellerBusinessType = sellerBusinessType
    @condition = condition
    @quantity = quantity
    @quantityOperator = quantityOperator
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerListType
#   totalAvailable - SOAP::SOAPInt
#   favoriteSeller - MyeBayFavoriteSellerType
class MyeBayFavoriteSellerListType
  attr_accessor :totalAvailable
  attr_accessor :favoriteSeller
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSeller = [])
    @totalAvailable = totalAvailable
    @favoriteSeller = favoriteSeller
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerType
#   userID - SOAP::SOAPString
#   storeName - SOAP::SOAPString
class MyeBayFavoriteSellerType
  attr_accessor :userID
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, storeName = nil)
    @userID = userID
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySecondChanceOfferListType
#   totalAvailable - SOAP::SOAPInt
#   secondChanceOffer - ItemType
class MyeBaySecondChanceOfferListType
  attr_accessor :totalAvailable
  attr_accessor :secondChanceOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, secondChanceOffer = [])
    @totalAvailable = totalAvailable
    @secondChanceOffer = secondChanceOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySelectionType
#   include - SOAP::SOAPBoolean
#   sort - SortOrderCodeType
#   maxResults - SOAP::SOAPInt
class MyeBaySelectionType
  attr_accessor :include
  attr_accessor :sort
  attr_accessor :maxResults
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, sort = nil, maxResults = nil)
    @include = include
    @sort = sort
    @maxResults = maxResults
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySellingSummaryType
#   activeAuctionCount - SOAP::SOAPInt
#   auctionSellingCount - SOAP::SOAPInt
#   auctionBidCount - SOAP::SOAPInt
#   totalAuctionSellingValue - AmountType
#   totalSoldCount - SOAP::SOAPInt
#   totalSoldValue - AmountType
#   soldDurationInDays - SOAP::SOAPInt
#   classifiedAdCount - SOAP::SOAPInt
#   totalLeadCount - SOAP::SOAPInt
#   classifiedAdOfferCount - SOAP::SOAPInt
#   totalListingsWithLeads - SOAP::SOAPInt
class MyeBaySellingSummaryType
  attr_accessor :activeAuctionCount
  attr_accessor :auctionSellingCount
  attr_accessor :auctionBidCount
  attr_accessor :totalAuctionSellingValue
  attr_accessor :totalSoldCount
  attr_accessor :totalSoldValue
  attr_accessor :soldDurationInDays
  attr_accessor :classifiedAdCount
  attr_accessor :totalLeadCount
  attr_accessor :classifiedAdOfferCount
  attr_accessor :totalListingsWithLeads
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(activeAuctionCount = nil, auctionSellingCount = nil, auctionBidCount = nil, totalAuctionSellingValue = nil, totalSoldCount = nil, totalSoldValue = nil, soldDurationInDays = nil, classifiedAdCount = nil, totalLeadCount = nil, classifiedAdOfferCount = nil, totalListingsWithLeads = nil)
    @activeAuctionCount = activeAuctionCount
    @auctionSellingCount = auctionSellingCount
    @auctionBidCount = auctionBidCount
    @totalAuctionSellingValue = totalAuctionSellingValue
    @totalSoldCount = totalSoldCount
    @totalSoldValue = totalSoldValue
    @soldDurationInDays = soldDurationInDays
    @classifiedAdCount = classifiedAdCount
    @totalLeadCount = totalLeadCount
    @classifiedAdOfferCount = classifiedAdOfferCount
    @totalListingsWithLeads = totalListingsWithLeads
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListArrayType
class NameValueListArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListType
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
#   source - ItemSpecificSourceCodeType
class NameValueListType
  attr_accessor :name
  attr_accessor :value
  attr_accessor :source
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = [], source = nil)
    @name = name
    @value = value
    @source = source
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NonSubscriptionDefinitionType
class NonSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDetailsArrayType
class NotificationDetailsArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDetailsType
#   deliveryURL - SOAP::SOAPAnyURI
#   referenceID - SOAP::SOAPString
#   expirationTime - SOAP::SOAPDateTime
#   type - NotificationEventTypeCodeType
#   retries - SOAP::SOAPInt
#   deliveryStatus - NotificationEventStateCodeType
#   nextRetryTime - SOAP::SOAPDateTime
#   deliveryTime - SOAP::SOAPDateTime
#   errorMessage - SOAP::SOAPString
#   deliveryURLName - SOAP::SOAPString
class NotificationDetailsType
  attr_accessor :deliveryURL
  attr_accessor :referenceID
  attr_accessor :expirationTime
  attr_accessor :type
  attr_accessor :retries
  attr_accessor :deliveryStatus
  attr_accessor :nextRetryTime
  attr_accessor :deliveryTime
  attr_accessor :errorMessage
  attr_accessor :deliveryURLName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveryURL = nil, referenceID = nil, expirationTime = nil, type = nil, retries = nil, deliveryStatus = nil, nextRetryTime = nil, deliveryTime = nil, errorMessage = nil, deliveryURLName = nil)
    @deliveryURL = deliveryURL
    @referenceID = referenceID
    @expirationTime = expirationTime
    @type = type
    @retries = retries
    @deliveryStatus = deliveryStatus
    @nextRetryTime = nextRetryTime
    @deliveryTime = deliveryTime
    @errorMessage = errorMessage
    @deliveryURLName = deliveryURLName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableArrayType
class NotificationEnableArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableType
#   eventType - NotificationEventTypeCodeType
#   eventEnable - EnableCodeType
class NotificationEnableType
  attr_accessor :eventType
  attr_accessor :eventEnable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, eventEnable = nil)
    @eventType = eventType
    @eventEnable = eventEnable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventPropertyType
#   eventType - NotificationEventTypeCodeType
#   name - NotificationEventPropertyNameCodeType
#   value - SOAP::SOAPString
class NotificationEventPropertyType
  attr_accessor :eventType
  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, name = nil, value = nil)
    @eventType = eventType
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationStatisticsType
#   deliveredCount - SOAP::SOAPInt
#   queuedNewCount - SOAP::SOAPInt
#   queuedPendingCount - SOAP::SOAPInt
#   expiredCount - SOAP::SOAPInt
#   errorCount - SOAP::SOAPInt
class NotificationStatisticsType
  attr_accessor :deliveredCount
  attr_accessor :queuedNewCount
  attr_accessor :queuedPendingCount
  attr_accessor :expiredCount
  attr_accessor :errorCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveredCount = nil, queuedNewCount = nil, queuedPendingCount = nil, expiredCount = nil, errorCount = nil)
    @deliveredCount = deliveredCount
    @queuedNewCount = queuedNewCount
    @queuedPendingCount = queuedPendingCount
    @expiredCount = expiredCount
    @errorCount = errorCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationUserDataType
#   sMSSubscription - SMSSubscriptionType
#   summarySchedule - SummaryEventScheduleType
#   externalUserData - SOAP::SOAPString
class NotificationUserDataType
  attr_accessor :sMSSubscription
  attr_accessor :summarySchedule
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sMSSubscription = nil, summarySchedule = [], externalUserData = nil)
    @sMSSubscription = sMSSubscription
    @summarySchedule = summarySchedule
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OfferArrayType
class OfferArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OfferType
#   action - BidActionCodeType
#   currency - CurrencyCodeType
#   itemID - (any)
#   maxBid - AmountType
#   quantity - SOAP::SOAPInt
#   secondChanceEnabled - SOAP::SOAPBoolean
#   siteCurrency - CurrencyCodeType
#   timeBid - SOAP::SOAPDateTime
#   highestBid - AmountType
#   convertedPrice - AmountType
#   transactionID - SOAP::SOAPString
#   user - UserType
#   userConsent - SOAP::SOAPBoolean
#   bidCount - SOAP::SOAPInt
#   message - SOAP::SOAPString
#   bestOfferID - (any)
class OfferType
  attr_accessor :action
  attr_accessor :currency
  attr_accessor :itemID
  attr_accessor :maxBid
  attr_accessor :quantity
  attr_accessor :secondChanceEnabled
  attr_accessor :siteCurrency
  attr_accessor :timeBid
  attr_accessor :highestBid
  attr_accessor :convertedPrice
  attr_accessor :transactionID
  attr_accessor :user
  attr_accessor :userConsent
  attr_accessor :bidCount
  attr_accessor :message
  attr_accessor :bestOfferID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(action = nil, currency = nil, itemID = nil, maxBid = nil, quantity = nil, secondChanceEnabled = nil, siteCurrency = nil, timeBid = nil, highestBid = nil, convertedPrice = nil, transactionID = nil, user = nil, userConsent = nil, bidCount = nil, message = nil, bestOfferID = nil)
    @action = action
    @currency = currency
    @itemID = itemID
    @maxBid = maxBid
    @quantity = quantity
    @secondChanceEnabled = secondChanceEnabled
    @siteCurrency = siteCurrency
    @timeBid = timeBid
    @highestBid = highestBid
    @convertedPrice = convertedPrice
    @transactionID = transactionID
    @user = user
    @userConsent = userConsent
    @bidCount = bidCount
    @message = message
    @bestOfferID = bestOfferID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderArrayType
class OrderArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OrderIDArrayType
class OrderIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionArrayType
class OrderTransactionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionType
#   order - OrderType
#   transaction - TransactionType
class OrderTransactionType
  attr_accessor :order
  attr_accessor :transaction
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(order = nil, transaction = nil)
    @order = order
    @transaction = transaction
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderType
#   orderID - (any)
#   orderStatus - OrderStatusCodeType
#   adjustmentAmount - AmountType
#   amountPaid - AmountType
#   amountSaved - AmountType
#   checkoutStatus - CheckoutStatusType
#   shippingDetails - ShippingDetailsType
#   creatingUserRole - TradingRoleCodeType
#   createdTime - SOAP::SOAPDateTime
#   paymentMethods - BuyerPaymentMethodCodeType
#   sellerEmail - SOAP::SOAPString
#   shippingAddress - AddressType
#   shippingServiceSelected - ShippingServiceOptionsType
#   subtotal - AmountType
#   total - AmountType
#   externalTransaction - ExternalTransactionType
#   transactionArray - TransactionArrayType
#   buyerUserID - (any)
#   paidTime - SOAP::SOAPDateTime
#   shippedTime - SOAP::SOAPDateTime
class OrderType
  attr_accessor :orderID
  attr_accessor :orderStatus
  attr_accessor :adjustmentAmount
  attr_accessor :amountPaid
  attr_accessor :amountSaved
  attr_accessor :checkoutStatus
  attr_accessor :shippingDetails
  attr_accessor :creatingUserRole
  attr_accessor :createdTime
  attr_accessor :paymentMethods
  attr_accessor :sellerEmail
  attr_accessor :shippingAddress
  attr_accessor :shippingServiceSelected
  attr_accessor :subtotal
  attr_accessor :total
  attr_accessor :externalTransaction
  attr_accessor :transactionArray
  attr_accessor :buyerUserID
  attr_accessor :paidTime
  attr_accessor :shippedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderID = nil, orderStatus = nil, adjustmentAmount = nil, amountPaid = nil, amountSaved = nil, checkoutStatus = nil, shippingDetails = nil, creatingUserRole = nil, createdTime = nil, paymentMethods = [], sellerEmail = nil, shippingAddress = nil, shippingServiceSelected = nil, subtotal = nil, total = nil, externalTransaction = [], transactionArray = nil, buyerUserID = nil, paidTime = nil, shippedTime = nil)
    @orderID = orderID
    @orderStatus = orderStatus
    @adjustmentAmount = adjustmentAmount
    @amountPaid = amountPaid
    @amountSaved = amountSaved
    @checkoutStatus = checkoutStatus
    @shippingDetails = shippingDetails
    @creatingUserRole = creatingUserRole
    @createdTime = createdTime
    @paymentMethods = paymentMethods
    @sellerEmail = sellerEmail
    @shippingAddress = shippingAddress
    @shippingServiceSelected = shippingServiceSelected
    @subtotal = subtotal
    @total = total
    @externalTransaction = externalTransaction
    @transactionArray = transactionArray
    @buyerUserID = buyerUserID
    @paidTime = paidTime
    @shippedTime = shippedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedItemArrayType
#   itemArray - ItemArrayType
#   paginationResult - PaginationResultType
class PaginatedItemArrayType
  attr_accessor :itemArray
  attr_accessor :paginationResult
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemArray = nil, paginationResult = nil)
    @itemArray = itemArray
    @paginationResult = paginationResult
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedOrderTransactionArrayType
#   orderTransactionArray - OrderTransactionArrayType
#   paginationResult - PaginationResultType
class PaginatedOrderTransactionArrayType
  attr_accessor :orderTransactionArray
  attr_accessor :paginationResult
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderTransactionArray = nil, paginationResult = nil)
    @orderTransactionArray = orderTransactionArray
    @paginationResult = paginationResult
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedTransactionArrayType
#   transactionArray - TransactionArrayType
#   paginationResult - PaginationResultType
class PaginatedTransactionArrayType
  attr_accessor :transactionArray
  attr_accessor :paginationResult

  def initialize(transactionArray = nil, paginationResult = nil)
    @transactionArray = transactionArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationResultType
#   totalNumberOfPages - SOAP::SOAPInt
#   totalNumberOfEntries - SOAP::SOAPInt
class PaginationResultType
  attr_accessor :totalNumberOfPages
  attr_accessor :totalNumberOfEntries
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalNumberOfPages = nil, totalNumberOfEntries = nil)
    @totalNumberOfPages = totalNumberOfPages
    @totalNumberOfEntries = totalNumberOfEntries
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaisaPayFullEscrowEnabledDefinitionType
class PaisaPayFullEscrowEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PayPalBuyerProtectionEnabledDefinitionType
class PayPalBuyerProtectionEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PayPalRequiredDefinitionType
class PayPalRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PayPalRequiredForStoreOwnerDefinitionType
class PayPalRequiredForStoreOwnerDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentDetailsType
#   hoursToDeposit - SOAP::SOAPInt
#   daysToFullPayment - SOAP::SOAPInt
class PaymentDetailsType
  attr_accessor :hoursToDeposit
  attr_accessor :daysToFullPayment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(hoursToDeposit = nil, daysToFullPayment = nil)
    @hoursToDeposit = hoursToDeposit
    @daysToFullPayment = daysToFullPayment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentOptionDetailsType
#   paymentOption - BuyerPaymentMethodCodeType
#   description - SOAP::SOAPString
class PaymentOptionDetailsType
  attr_accessor :paymentOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentOption = nil, description = nil)
    @paymentOption = paymentOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureDetailsType
#   galleryType - GalleryTypeCodeType
#   galleryURL - SOAP::SOAPAnyURI
#   photoDisplay - PhotoDisplayCodeType
#   pictureURL - SOAP::SOAPAnyURI
#   pictureSource - PictureSourceCodeType
#   galleryDuration - SOAP::SOAPToken
class PictureDetailsType
  attr_accessor :galleryType
  attr_accessor :galleryURL
  attr_accessor :photoDisplay
  attr_accessor :pictureURL
  attr_accessor :pictureSource
  attr_accessor :galleryDuration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(galleryType = nil, galleryURL = nil, photoDisplay = nil, pictureURL = [], pictureSource = nil, galleryDuration = nil)
    @galleryType = galleryType
    @galleryURL = galleryURL
    @photoDisplay = photoDisplay
    @pictureURL = pictureURL
    @pictureSource = pictureSource
    @galleryDuration = galleryDuration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailsType
#   subscriptionLevel - PictureManagerSubscriptionLevelCodeType
#   storageUsed - SOAP::SOAPInt
#   totalStorageAvailable - SOAP::SOAPInt
#   keepOriginal - SOAP::SOAPBoolean
#   watermarkEPS - SOAP::SOAPBoolean
#   watermarkUserID - SOAP::SOAPBoolean
#   folder - PictureManagerFolderType
class PictureManagerDetailsType
  attr_accessor :subscriptionLevel
  attr_accessor :storageUsed
  attr_accessor :totalStorageAvailable
  attr_accessor :keepOriginal
  attr_accessor :watermarkEPS
  attr_accessor :watermarkUserID
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, storageUsed = nil, totalStorageAvailable = nil, keepOriginal = nil, watermarkEPS = nil, watermarkUserID = nil, folder = [])
    @subscriptionLevel = subscriptionLevel
    @storageUsed = storageUsed
    @totalStorageAvailable = totalStorageAvailable
    @keepOriginal = keepOriginal
    @watermarkEPS = watermarkEPS
    @watermarkUserID = watermarkUserID
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerFolderType
#   folderID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   picture - PictureManagerPictureType
class PictureManagerFolderType
  attr_accessor :folderID
  attr_accessor :name
  attr_accessor :picture
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, name = nil, picture = [])
    @folderID = folderID
    @name = name
    @picture = picture
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayType
#   displayType - PictureManagerPictureDisplayTypeCodeType
#   uRL - SOAP::SOAPAnyURI
#   size - SOAP::SOAPInt
#   height - SOAP::SOAPInt
#   width - SOAP::SOAPInt
class PictureManagerPictureDisplayType
  attr_accessor :displayType
  attr_accessor :uRL
  attr_accessor :size
  attr_accessor :height
  attr_accessor :width
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, uRL = nil, size = nil, height = nil, width = nil)
    @displayType = displayType
    @uRL = uRL
    @size = size
    @height = height
    @width = width
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureType
#   pictureURL - SOAP::SOAPAnyURI
#   name - SOAP::SOAPString
#   date - SOAP::SOAPDateTime
#   displayFormat - PictureManagerPictureDisplayType
class PictureManagerPictureType
  attr_accessor :pictureURL
  attr_accessor :name
  attr_accessor :date
  attr_accessor :displayFormat
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = nil, name = nil, date = nil, displayFormat = [])
    @pictureURL = pictureURL
    @name = name
    @date = date
    @displayFormat = displayFormat
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionType
#   subscriptionLevel - PictureManagerSubscriptionLevelCodeType
#   fee - AmountType
#   storageSize - SOAP::SOAPInt
class PictureManagerSubscriptionType
  attr_accessor :subscriptionLevel
  attr_accessor :fee
  attr_accessor :storageSize
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, fee = nil, storageSize = nil)
    @subscriptionLevel = subscriptionLevel
    @fee = fee
    @storageSize = storageSize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureSetMemberType
#   memberURL - SOAP::SOAPAnyURI
#   pictureHeight - SOAP::SOAPInt
#   pictureWidth - SOAP::SOAPInt
class PictureSetMemberType
  attr_accessor :memberURL
  attr_accessor :pictureHeight
  attr_accessor :pictureWidth
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(memberURL = nil, pictureHeight = nil, pictureWidth = nil)
    @memberURL = memberURL
    @pictureHeight = pictureHeight
    @pictureWidth = pictureWidth
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PolicyComplianceDashboardType
#   status - PolicyComplianceStatusCodeType
#   alert - SellerDashboardAlertType
class PolicyComplianceDashboardType
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, alert = [])
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PowerSellerDashboardType
#   level - SellerLevelCodeType
#   alert - SellerDashboardAlertType
class PowerSellerDashboardType
  attr_accessor :level
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(level = nil, alert = [])
    @level = level
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PremiumSubscriptionDefinitionType
class PremiumSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PriceRangeFilterType
#   maxPrice - AmountType
#   minPrice - AmountType
class PriceRangeFilterType
  attr_accessor :maxPrice
  attr_accessor :minPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxPrice = nil, minPrice = nil)
    @maxPrice = maxPrice
    @minPrice = minPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PricingRecommendationsType
#   productInfo - ProductInfoType
class PricingRecommendationsType
  attr_accessor :productInfo

  def initialize(productInfo = nil)
    @productInfo = productInfo
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProPackEnabledDefinitionType
class ProPackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProPackPlusEnabledDefinitionType
class ProPackPlusEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProStoresCheckoutPreferenceType
#   checkoutRedirectProStores - SOAP::SOAPBoolean
#   proStoresDetails - ProStoresDetailsType
class ProStoresCheckoutPreferenceType
  attr_accessor :checkoutRedirectProStores
  attr_accessor :proStoresDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(checkoutRedirectProStores = nil, proStoresDetails = [])
    @checkoutRedirectProStores = checkoutRedirectProStores
    @proStoresDetails = proStoresDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProStoresDetailsType
#   sellerThirdPartyUsername - SOAP::SOAPString
#   storeName - SOAP::SOAPString
#   status - EnableCodeType
class ProStoresDetailsType
  attr_accessor :sellerThirdPartyUsername
  attr_accessor :storeName
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerThirdPartyUsername = nil, storeName = nil, status = nil)
    @sellerThirdPartyUsername = sellerThirdPartyUsername
    @storeName = storeName
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFamilyType
#   parentProduct - ProductType
#   familyMembers - ProductType
#   xmlattr_hasMoreChildren - SOAP::SOAPBoolean
class ProductFamilyType
  AttrHasMoreChildren = XSD::QName.new(nil, "hasMoreChildren")

  attr_accessor :parentProduct
  attr_accessor :familyMembers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_hasMoreChildren
    __xmlattr[AttrHasMoreChildren]
  end

  def xmlattr_hasMoreChildren=(value)
    __xmlattr[AttrHasMoreChildren] = value
  end

  def initialize(parentProduct = nil, familyMembers = [])
    @parentProduct = parentProduct
    @familyMembers = familyMembers
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFinderConstraintType
#   displayName - SOAP::SOAPString
#   displayValue - SOAP::SOAPString
class ProductFinderConstraintType
  attr_accessor :displayName
  attr_accessor :displayValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayName = nil, displayValue = nil)
    @displayName = displayName
    @displayValue = displayValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductInfoType
#   averageStartPrice - AmountType
#   averageSoldPrice - AmountType
#   title - SOAP::SOAPString
#   productState - ProductStateCodeType
#   xmlattr_productInfoID - SOAP::SOAPString
class ProductInfoType
  AttrProductInfoID = XSD::QName.new(nil, "productInfoID")

  attr_accessor :averageStartPrice
  attr_accessor :averageSoldPrice
  attr_accessor :title
  attr_accessor :productState

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_productInfoID
    __xmlattr[AttrProductInfoID]
  end

  def xmlattr_productInfoID=(value)
    __xmlattr[AttrProductInfoID] = value
  end

  def initialize(averageStartPrice = nil, averageSoldPrice = nil, title = nil, productState = nil)
    @averageStartPrice = averageStartPrice
    @averageSoldPrice = averageSoldPrice
    @title = title
    @productState = productState
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductListingDetailsType
#   productID - SOAP::SOAPString
#   includeStockPhotoURL - SOAP::SOAPBoolean
#   includePrefilledItemInformation - SOAP::SOAPBoolean
#   useStockPhotoURLAsGallery - SOAP::SOAPBoolean
#   stockPhotoURL - SOAP::SOAPAnyURI
#   copyright - SOAP::SOAPString
class ProductListingDetailsType
  attr_accessor :productID
  attr_accessor :includeStockPhotoURL
  attr_accessor :includePrefilledItemInformation
  attr_accessor :useStockPhotoURLAsGallery
  attr_accessor :stockPhotoURL
  attr_accessor :copyright
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productID = nil, includeStockPhotoURL = nil, includePrefilledItemInformation = nil, useStockPhotoURLAsGallery = nil, stockPhotoURL = nil, copyright = [])
    @productID = productID
    @includeStockPhotoURL = includeStockPhotoURL
    @includePrefilledItemInformation = includePrefilledItemInformation
    @useStockPhotoURLAsGallery = useStockPhotoURLAsGallery
    @stockPhotoURL = stockPhotoURL
    @copyright = copyright
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductRecommendationsType
class ProductRecommendationsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchPageType
#   searchCharacteristicsSet - CharacteristicsSetType
#   searchType - CharacteristicsSearchCodeType
#   sortCharacteristics - CharacteristicType
#   dataElementSet - DataElementSetType
class ProductSearchPageType
  attr_accessor :searchCharacteristicsSet
  attr_accessor :searchType
  attr_accessor :sortCharacteristics
  attr_accessor :dataElementSet
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchCharacteristicsSet = nil, searchType = nil, sortCharacteristics = [], dataElementSet = [])
    @searchCharacteristicsSet = searchCharacteristicsSet
    @searchType = searchType
    @sortCharacteristics = sortCharacteristics
    @dataElementSet = dataElementSet
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchResultType
#   iD - SOAP::SOAPString
#   numProducts - SOAP::SOAPString
#   attributeSet - ResponseAttributeSetType
#   displayStockPhotos - SOAP::SOAPBoolean
class ProductSearchResultType
  attr_accessor :iD
  attr_accessor :numProducts
  attr_accessor :attributeSet
  attr_accessor :displayStockPhotos
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(iD = nil, numProducts = nil, attributeSet = [], displayStockPhotos = nil)
    @iD = iD
    @numProducts = numProducts
    @attributeSet = attributeSet
    @displayStockPhotos = displayStockPhotos
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchType
#   productSearchID - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
#   productFinderID - SOAP::SOAPInt
#   productID - SOAP::SOAPString
#   sortAttributeID - SOAP::SOAPInt
#   maxChildrenPerFamily - SOAP::SOAPInt
#   searchAttributes - SearchAttributesType
#   pagination - PaginationType
#   availableItemsOnly - SOAP::SOAPBoolean
#   queryKeywords - SOAP::SOAPString
#   characteristicSetIDs - CharacteristicSetIDsType
#   productReferenceID - SOAP::SOAPString
#   externalProductID - ExternalProductIDType
class ProductSearchType
  attr_accessor :productSearchID
  attr_accessor :attributeSetID
  attr_accessor :productFinderID
  attr_accessor :productID
  attr_accessor :sortAttributeID
  attr_accessor :maxChildrenPerFamily
  attr_accessor :searchAttributes
  attr_accessor :pagination
  attr_accessor :availableItemsOnly
  attr_accessor :queryKeywords
  attr_accessor :characteristicSetIDs
  attr_accessor :productReferenceID
  attr_accessor :externalProductID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productSearchID = nil, attributeSetID = nil, productFinderID = nil, productID = nil, sortAttributeID = nil, maxChildrenPerFamily = nil, searchAttributes = [], pagination = nil, availableItemsOnly = nil, queryKeywords = nil, characteristicSetIDs = nil, productReferenceID = nil, externalProductID = nil)
    @productSearchID = productSearchID
    @attributeSetID = attributeSetID
    @productFinderID = productFinderID
    @productID = productID
    @sortAttributeID = sortAttributeID
    @maxChildrenPerFamily = maxChildrenPerFamily
    @searchAttributes = searchAttributes
    @pagination = pagination
    @availableItemsOnly = availableItemsOnly
    @queryKeywords = queryKeywords
    @characteristicSetIDs = characteristicSetIDs
    @productReferenceID = productReferenceID
    @externalProductID = externalProductID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductType
#   characteristicsSet - CharacteristicsSetType
#   detailsURL - SOAP::SOAPAnyURI
#   numItems - SOAP::SOAPInt
#   minPrice - AmountType
#   maxPrice - AmountType
#   xmlattr_productID - SOAP::SOAPString
#   xmlattr_stockPhotoURL - SOAP::SOAPAnyURI
#   xmlattr_title - SOAP::SOAPString
class ProductType
  AttrProductID = XSD::QName.new(nil, "productID")
  AttrStockPhotoURL = XSD::QName.new(nil, "stockPhotoURL")
  AttrTitle = XSD::QName.new(nil, "title")

  attr_accessor :characteristicsSet
  attr_accessor :detailsURL
  attr_accessor :numItems
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_productID
    __xmlattr[AttrProductID]
  end

  def xmlattr_productID=(value)
    __xmlattr[AttrProductID] = value
  end

  def xmlattr_stockPhotoURL
    __xmlattr[AttrStockPhotoURL]
  end

  def xmlattr_stockPhotoURL=(value)
    __xmlattr[AttrStockPhotoURL] = value
  end

  def xmlattr_title
    __xmlattr[AttrTitle]
  end

  def xmlattr_title=(value)
    __xmlattr[AttrTitle] = value
  end

  def initialize(characteristicsSet = nil, detailsURL = nil, numItems = nil, minPrice = nil, maxPrice = nil)
    @characteristicsSet = characteristicsSet
    @detailsURL = detailsURL
    @numItems = numItems
    @minPrice = minPrice
    @maxPrice = maxPrice
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotedItemType
#   itemID - (any)
#   pictureURL - SOAP::SOAPString
#   position - SOAP::SOAPInt
#   selectionType - PromotionItemSelectionCodeType
#   title - SOAP::SOAPString
#   listingType - ListingTypeCodeType
#   promotionDetails - PromotionDetailsType
#   timeLeft - SOAP::SOAPDuration
class PromotedItemType
  attr_accessor :itemID
  attr_accessor :pictureURL
  attr_accessor :position
  attr_accessor :selectionType
  attr_accessor :title
  attr_accessor :listingType
  attr_accessor :promotionDetails
  attr_accessor :timeLeft
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, pictureURL = nil, position = nil, selectionType = nil, title = nil, listingType = nil, promotionDetails = [], timeLeft = nil)
    @itemID = itemID
    @pictureURL = pictureURL
    @position = position
    @selectionType = selectionType
    @title = title
    @listingType = listingType
    @promotionDetails = promotionDetails
    @timeLeft = timeLeft
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionDetailsType
#   promotionPrice - AmountType
#   promotionPriceType - PromotionItemPriceTypeCodeType
#   bidCount - SOAP::SOAPInt
#   convertedPromotionPrice - AmountType
class PromotionDetailsType
  attr_accessor :promotionPrice
  attr_accessor :promotionPriceType
  attr_accessor :bidCount
  attr_accessor :convertedPromotionPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotionPrice = nil, promotionPriceType = nil, bidCount = nil, convertedPromotionPrice = nil)
    @promotionPrice = promotionPrice
    @promotionPriceType = promotionPriceType
    @bidCount = bidCount
    @convertedPromotionPrice = convertedPromotionPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleArrayType
class PromotionRuleArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleType
#   promotedStoreCategoryID - SOAP::SOAPLong
#   promotedeBayCategoryID - SOAP::SOAPString
#   promotedKeywords - SOAP::SOAPString
#   referringItemID - (any)
#   referringStoreCategoryID - SOAP::SOAPLong
#   referringeBayCategoryID - SOAP::SOAPString
#   referringKeywords - SOAP::SOAPString
#   promotionScheme - PromotionSchemeCodeType
#   promotionMethod - PromotionMethodCodeType
class PromotionRuleType
  attr_accessor :promotedStoreCategoryID
  attr_accessor :promotedeBayCategoryID
  attr_accessor :promotedKeywords
  attr_accessor :referringItemID
  attr_accessor :referringStoreCategoryID
  attr_accessor :referringeBayCategoryID
  attr_accessor :referringKeywords
  attr_accessor :promotionScheme
  attr_accessor :promotionMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotedStoreCategoryID = nil, promotedeBayCategoryID = nil, promotedKeywords = nil, referringItemID = nil, referringStoreCategoryID = nil, referringeBayCategoryID = nil, referringKeywords = nil, promotionScheme = nil, promotionMethod = nil)
    @promotedStoreCategoryID = promotedStoreCategoryID
    @promotedeBayCategoryID = promotedeBayCategoryID
    @promotedKeywords = promotedKeywords
    @referringItemID = referringItemID
    @referringStoreCategoryID = referringStoreCategoryID
    @referringeBayCategoryID = referringeBayCategoryID
    @referringKeywords = referringKeywords
    @promotionScheme = promotionScheme
    @promotionMethod = promotionMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleArrayType
class PromotionalSaleArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleDetailsType
#   originalPrice - AmountType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class PromotionalSaleDetailsType
  attr_accessor :originalPrice
  attr_accessor :startTime
  attr_accessor :endTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originalPrice = nil, startTime = nil, endTime = nil)
    @originalPrice = originalPrice
    @startTime = startTime
    @endTime = endTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleType
#   promotionalSaleID - SOAP::SOAPLong
#   promotionalSaleName - SOAP::SOAPString
#   promotionalSaleItemIDArray - ItemIDArrayType
#   status - PromotionalSaleStatusCodeType
#   discountType - DiscountCodeType
#   discountValue - SOAP::SOAPDouble
#   promotionalSaleStartTime - SOAP::SOAPDateTime
#   promotionalSaleEndTime - SOAP::SOAPDateTime
#   promotionalSaleType - PromotionalSaleTypeCodeType
class PromotionalSaleType
  attr_accessor :promotionalSaleID
  attr_accessor :promotionalSaleName
  attr_accessor :promotionalSaleItemIDArray
  attr_accessor :status
  attr_accessor :discountType
  attr_accessor :discountValue
  attr_accessor :promotionalSaleStartTime
  attr_accessor :promotionalSaleEndTime
  attr_accessor :promotionalSaleType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotionalSaleID = nil, promotionalSaleName = nil, promotionalSaleItemIDArray = nil, status = nil, discountType = nil, discountValue = nil, promotionalSaleStartTime = nil, promotionalSaleEndTime = nil, promotionalSaleType = nil)
    @promotionalSaleID = promotionalSaleID
    @promotionalSaleName = promotionalSaleName
    @promotionalSaleItemIDArray = promotionalSaleItemIDArray
    @status = status
    @discountType = discountType
    @discountValue = discountValue
    @promotionalSaleStartTime = promotionalSaleStartTime
    @promotionalSaleEndTime = promotionalSaleEndTime
    @promotionalSaleType = promotionalSaleType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalShippingDiscountDetailsType
#   discountName - DiscountNameCodeType
#   shippingCost - AmountType
#   orderAmount - AmountType
#   itemCount - SOAP::SOAPInt
class PromotionalShippingDiscountDetailsType
  attr_accessor :discountName
  attr_accessor :shippingCost
  attr_accessor :orderAmount
  attr_accessor :itemCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, shippingCost = nil, orderAmount = nil, itemCount = nil)
    @discountName = discountName
    @shippingCost = shippingCost
    @orderAmount = orderAmount
    @itemCount = itemCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProximitySearchType
#   maxDistance - SOAP::SOAPInt
#   postalCode - SOAP::SOAPString
class ProximitySearchType
  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxDistance = nil, postalCode = nil)
    @maxDistance = maxDistance
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReasonCodeDetailType
#   briefText - SOAP::SOAPString
#   detailedText - SOAP::SOAPString
#   xmlattr_codeID - SOAP::SOAPLong
class ReasonCodeDetailType
  AttrCodeID = XSD::QName.new(nil, "codeID")

  attr_accessor :briefText
  attr_accessor :detailedText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_codeID
    __xmlattr[AttrCodeID]
  end

  def xmlattr_codeID=(value)
    __xmlattr[AttrCodeID] = value
  end

  def initialize(briefText = nil, detailedText = nil)
    @briefText = briefText
    @detailedText = detailedText
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundArrayType
class RefundArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}RefundDetailsType
#   refundOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class RefundDetailsType
  attr_accessor :refundOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundOption = nil, description = nil)
    @refundOption = refundOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundType
#   refundFromSeller - AmountType
#   totalRefundToBuyer - AmountType
#   refundTime - SOAP::SOAPDateTime
class RefundType
  attr_accessor :refundFromSeller
  attr_accessor :totalRefundToBuyer
  attr_accessor :refundTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundFromSeller = nil, totalRefundToBuyer = nil, refundTime = nil)
    @refundFromSeller = refundFromSeller
    @totalRefundToBuyer = totalRefundToBuyer
    @refundTime = refundTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegionDetailsType
#   regionID - SOAP::SOAPString
#   description - SOAP::SOAPString
class RegionDetailsType
  attr_accessor :regionID
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, description = nil)
    @regionID = regionID
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegionOfOriginDetailsType
#   regionOfOrigin - SOAP::SOAPString
#   description - SOAP::SOAPString
#   status - StatusCodeType
class RegionOfOriginDetailsType
  attr_accessor :regionOfOrigin
  attr_accessor :description
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionOfOrigin = nil, description = nil, status = nil)
    @regionOfOrigin = regionOfOrigin
    @description = description
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegularSubscriptionDefinitionType
class RegularSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelatedSearchKeywordArrayType
class RelatedSearchKeywordArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ReminderCustomizationType
#   durationInDays - SOAP::SOAPInt
#   include - SOAP::SOAPBoolean
class ReminderCustomizationType
  attr_accessor :durationInDays
  attr_accessor :include

  def initialize(durationInDays = nil, include = nil)
    @durationInDays = durationInDays
    @include = include
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemindersType
#   paymentToSendCount - SOAP::SOAPInt
#   feedbackToReceiveCount - SOAP::SOAPInt
#   feedbackToSendCount - SOAP::SOAPInt
#   outbidCount - SOAP::SOAPInt
#   paymentToReceiveCount - SOAP::SOAPInt
#   secondChanceOfferCount - SOAP::SOAPInt
#   shippingNeededCount - SOAP::SOAPInt
#   relistingNeededCount - SOAP::SOAPInt
#   totalNewLeadsCount - SOAP::SOAPInt
#   docsForCCProcessingToSendCount - SOAP::SOAPInt
#   rTEToProcessCount - SOAP::SOAPInt
#   itemReceiptToConfirmCount - SOAP::SOAPInt
#   refundOnHoldCount - SOAP::SOAPInt
#   refundCancelledCount - SOAP::SOAPInt
#   shippingDetailsToBeProvidedCount - SOAP::SOAPInt
#   itemReceiptConfirmationToReceiveCount - SOAP::SOAPInt
#   refundInitiatedCount - SOAP::SOAPInt
#   pendingRTERequestCount - SOAP::SOAPInt
#   declinedRTERequestCount - SOAP::SOAPInt
class RemindersType
  attr_accessor :paymentToSendCount
  attr_accessor :feedbackToReceiveCount
  attr_accessor :feedbackToSendCount
  attr_accessor :outbidCount
  attr_accessor :paymentToReceiveCount
  attr_accessor :secondChanceOfferCount
  attr_accessor :shippingNeededCount
  attr_accessor :relistingNeededCount
  attr_accessor :totalNewLeadsCount
  attr_accessor :docsForCCProcessingToSendCount
  attr_accessor :rTEToProcessCount
  attr_accessor :itemReceiptToConfirmCount
  attr_accessor :refundOnHoldCount
  attr_accessor :refundCancelledCount
  attr_accessor :shippingDetailsToBeProvidedCount
  attr_accessor :itemReceiptConfirmationToReceiveCount
  attr_accessor :refundInitiatedCount
  attr_accessor :pendingRTERequestCount
  attr_accessor :declinedRTERequestCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentToSendCount = nil, feedbackToReceiveCount = nil, feedbackToSendCount = nil, outbidCount = nil, paymentToReceiveCount = nil, secondChanceOfferCount = nil, shippingNeededCount = nil, relistingNeededCount = nil, totalNewLeadsCount = nil, docsForCCProcessingToSendCount = nil, rTEToProcessCount = nil, itemReceiptToConfirmCount = nil, refundOnHoldCount = nil, refundCancelledCount = nil, shippingDetailsToBeProvidedCount = nil, itemReceiptConfirmationToReceiveCount = nil, refundInitiatedCount = nil, pendingRTERequestCount = nil, declinedRTERequestCount = nil)
    @paymentToSendCount = paymentToSendCount
    @feedbackToReceiveCount = feedbackToReceiveCount
    @feedbackToSendCount = feedbackToSendCount
    @outbidCount = outbidCount
    @paymentToReceiveCount = paymentToReceiveCount
    @secondChanceOfferCount = secondChanceOfferCount
    @shippingNeededCount = shippingNeededCount
    @relistingNeededCount = relistingNeededCount
    @totalNewLeadsCount = totalNewLeadsCount
    @docsForCCProcessingToSendCount = docsForCCProcessingToSendCount
    @rTEToProcessCount = rTEToProcessCount
    @itemReceiptToConfirmCount = itemReceiptToConfirmCount
    @refundOnHoldCount = refundOnHoldCount
    @refundCancelledCount = refundCancelledCount
    @shippingDetailsToBeProvidedCount = shippingDetailsToBeProvidedCount
    @itemReceiptConfirmationToReceiveCount = itemReceiptConfirmationToReceiveCount
    @refundInitiatedCount = refundInitiatedCount
    @pendingRTERequestCount = pendingRTERequestCount
    @declinedRTERequestCount = declinedRTERequestCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RequestCategoriesType
#   categoriesOnly - SOAP::SOAPBoolean
#   maxCategories - SOAP::SOAPInt
#   maxSubcategories - SOAP::SOAPInt
#   levels - SOAP::SOAPInt
#   demandData - SOAP::SOAPBoolean
class RequestCategoriesType
  attr_accessor :categoriesOnly
  attr_accessor :maxCategories
  attr_accessor :maxSubcategories
  attr_accessor :levels
  attr_accessor :demandData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoriesOnly = nil, maxCategories = nil, maxSubcategories = nil, levels = nil, demandData = nil)
    @categoriesOnly = categoriesOnly
    @maxCategories = maxCategories
    @maxSubcategories = maxSubcategories
    @levels = levels
    @demandData = demandData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ResponseAttributeSetType
#   approximatePages - SOAP::SOAPInt
#   attributeSetID - SOAP::SOAPInt
#   hasMore - SOAP::SOAPBoolean
#   productFamilies - ProductFamilyType
#   productFinderConstraints - ProductFinderConstraintType
#   tooManyMatchesFound - SOAP::SOAPBoolean
#   totalProducts - SOAP::SOAPInt
class ResponseAttributeSetType
  attr_accessor :approximatePages
  attr_accessor :attributeSetID
  attr_accessor :hasMore
  attr_accessor :productFamilies
  attr_accessor :productFinderConstraints
  attr_accessor :tooManyMatchesFound
  attr_accessor :totalProducts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(approximatePages = nil, attributeSetID = nil, hasMore = nil, productFamilies = [], productFinderConstraints = [], tooManyMatchesFound = nil, totalProducts = nil)
    @approximatePages = approximatePages
    @attributeSetID = attributeSetID
    @hasMore = hasMore
    @productFamilies = productFamilies
    @productFinderConstraints = productFinderConstraints
    @tooManyMatchesFound = tooManyMatchesFound
    @totalProducts = totalProducts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnPolicyDetailsType
#   refund - RefundDetailsType
#   returnsWithin - ReturnsWithinDetailsType
#   returnsAccepted - ReturnsAcceptedDetailsType
#   description - SOAP::SOAPBoolean
#   warrantyOffered - WarrantyOfferedDetailsType
#   warrantyType - WarrantyTypeDetailsType
#   warrantyDuration - WarrantyDurationDetailsType
#   eAN - SOAP::SOAPBoolean
#   shippingCostPaidBy - ShippingCostPaidByDetailsType
class ReturnPolicyDetailsType
  attr_accessor :refund
  attr_accessor :returnsWithin
  attr_accessor :returnsAccepted
  attr_accessor :description
  attr_accessor :warrantyOffered
  attr_accessor :warrantyType
  attr_accessor :warrantyDuration
  attr_accessor :eAN
  attr_accessor :shippingCostPaidBy
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refund = [], returnsWithin = [], returnsAccepted = [], description = nil, warrantyOffered = [], warrantyType = [], warrantyDuration = [], eAN = nil, shippingCostPaidBy = [])
    @refund = refund
    @returnsWithin = returnsWithin
    @returnsAccepted = returnsAccepted
    @description = description
    @warrantyOffered = warrantyOffered
    @warrantyType = warrantyType
    @warrantyDuration = warrantyDuration
    @eAN = eAN
    @shippingCostPaidBy = shippingCostPaidBy
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnPolicyEnabledDefinitionType
class ReturnPolicyEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnPolicyType
#   refundOption - SOAP::SOAPToken
#   refund - SOAP::SOAPString
#   returnsWithinOption - SOAP::SOAPToken
#   returnsWithin - SOAP::SOAPString
#   returnsAcceptedOption - SOAP::SOAPToken
#   returnsAccepted - SOAP::SOAPString
#   description - SOAP::SOAPString
#   warrantyOfferedOption - SOAP::SOAPToken
#   warrantyOffered - SOAP::SOAPString
#   warrantyTypeOption - SOAP::SOAPToken
#   warrantyType - SOAP::SOAPString
#   warrantyDurationOption - SOAP::SOAPToken
#   warrantyDuration - SOAP::SOAPString
#   eAN - SOAP::SOAPString
#   shippingCostPaidByOption - SOAP::SOAPToken
#   shippingCostPaidBy - SOAP::SOAPString
class ReturnPolicyType
  attr_accessor :refundOption
  attr_accessor :refund
  attr_accessor :returnsWithinOption
  attr_accessor :returnsWithin
  attr_accessor :returnsAcceptedOption
  attr_accessor :returnsAccepted
  attr_accessor :description
  attr_accessor :warrantyOfferedOption
  attr_accessor :warrantyOffered
  attr_accessor :warrantyTypeOption
  attr_accessor :warrantyType
  attr_accessor :warrantyDurationOption
  attr_accessor :warrantyDuration
  attr_accessor :eAN
  attr_accessor :shippingCostPaidByOption
  attr_accessor :shippingCostPaidBy
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundOption = nil, refund = nil, returnsWithinOption = nil, returnsWithin = nil, returnsAcceptedOption = nil, returnsAccepted = nil, description = nil, warrantyOfferedOption = nil, warrantyOffered = nil, warrantyTypeOption = nil, warrantyType = nil, warrantyDurationOption = nil, warrantyDuration = nil, eAN = nil, shippingCostPaidByOption = nil, shippingCostPaidBy = nil)
    @refundOption = refundOption
    @refund = refund
    @returnsWithinOption = returnsWithinOption
    @returnsWithin = returnsWithin
    @returnsAcceptedOption = returnsAcceptedOption
    @returnsAccepted = returnsAccepted
    @description = description
    @warrantyOfferedOption = warrantyOfferedOption
    @warrantyOffered = warrantyOffered
    @warrantyTypeOption = warrantyTypeOption
    @warrantyType = warrantyType
    @warrantyDurationOption = warrantyDurationOption
    @warrantyDuration = warrantyDuration
    @eAN = eAN
    @shippingCostPaidByOption = shippingCostPaidByOption
    @shippingCostPaidBy = shippingCostPaidBy
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsAcceptedDetailsType
#   returnsAcceptedOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class ReturnsAcceptedDetailsType
  attr_accessor :returnsAcceptedOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(returnsAcceptedOption = nil, description = nil)
    @returnsAcceptedOption = returnsAcceptedOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsWithinDetailsType
#   returnsWithinOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class ReturnsWithinDetailsType
  attr_accessor :returnsWithinOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(returnsWithinOption = nil, description = nil)
    @returnsWithinOption = returnsWithinOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviewDetailsType
#   averageRating - SOAP::SOAPFloat
#   review - ReviewType
class ReviewDetailsType
  attr_accessor :averageRating
  attr_accessor :review
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(averageRating = nil, review = [])
    @averageRating = averageRating
    @review = review
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviewType
#   uRL - SOAP::SOAPAnyURI
#   title - SOAP::SOAPString
#   rating - SOAP::SOAPInt
#   text - SOAP::SOAPString
#   userID - (any)
#   creationTime - SOAP::SOAPDateTime
class ReviewType
  attr_accessor :uRL
  attr_accessor :title
  attr_accessor :rating
  attr_accessor :text
  attr_accessor :userID
  attr_accessor :creationTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(uRL = nil, title = nil, rating = nil, text = nil, userID = nil, creationTime = nil)
    @uRL = uRL
    @title = title
    @rating = rating
    @text = text
    @userID = userID
    @creationTime = creationTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RevisePriceAllowedDefinitionType
class RevisePriceAllowedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseQuantityAllowedDefinitionType
class ReviseQuantityAllowedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseStatusType
#   itemRevised - SOAP::SOAPBoolean
#   buyItNowAdded - SOAP::SOAPBoolean
#   buyItNowLowered - SOAP::SOAPBoolean
#   reserveLowered - SOAP::SOAPBoolean
#   reserveRemoved - SOAP::SOAPBoolean
class ReviseStatusType
  attr_accessor :itemRevised
  attr_accessor :buyItNowAdded
  attr_accessor :buyItNowLowered
  attr_accessor :reserveLowered
  attr_accessor :reserveRemoved
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemRevised = nil, buyItNowAdded = nil, buyItNowLowered = nil, reserveLowered = nil, reserveRemoved = nil)
    @itemRevised = itemRevised
    @buyItNowAdded = buyItNowAdded
    @buyItNowLowered = buyItNowLowered
    @reserveLowered = reserveLowered
    @reserveRemoved = reserveRemoved
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SIFFTASRecommendationsType
#   attributeSetArray - AttributeSetArrayType
class SIFFTASRecommendationsType
  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SKUArrayType
class SKUArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionType
#   sMSPhone - SOAP::SOAPString
#   userStatus - SMSSubscriptionUserStatusCodeType
#   carrierID - WirelessCarrierIDCodeType
#   errorCode - SMSSubscriptionErrorCodeCodeType
#   itemToUnsubscribe - (any)
class SMSSubscriptionType
  attr_accessor :sMSPhone
  attr_accessor :userStatus
  attr_accessor :carrierID
  attr_accessor :errorCode
  attr_accessor :itemToUnsubscribe
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sMSPhone = nil, userStatus = nil, carrierID = nil, errorCode = nil, itemToUnsubscribe = nil)
    @sMSPhone = sMSPhone
    @userStatus = userStatus
    @carrierID = carrierID
    @errorCode = errorCode
    @itemToUnsubscribe = itemToUnsubscribe
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SafePaymentRequiredDefinitionType
class SafePaymentRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SalesTaxType
#   salesTaxPercent - SOAP::SOAPFloat
#   salesTaxState - SOAP::SOAPString
#   shippingIncludedInTax - SOAP::SOAPBoolean
#   salesTaxAmount - AmountType
class SalesTaxType
  attr_accessor :salesTaxPercent
  attr_accessor :salesTaxState
  attr_accessor :shippingIncludedInTax
  attr_accessor :salesTaxAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(salesTaxPercent = nil, salesTaxState = nil, shippingIncludedInTax = nil, salesTaxAmount = nil)
    @salesTaxPercent = salesTaxPercent
    @salesTaxState = salesTaxState
    @shippingIncludedInTax = shippingIncludedInTax
    @salesTaxAmount = salesTaxAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ScheduleType
#   scheduleID - SOAP::SOAPInt
#   scheduleTime - SOAP::SOAPDateTime
class ScheduleType
  attr_accessor :scheduleID
  attr_accessor :scheduleTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(scheduleID = nil, scheduleTime = nil)
    @scheduleID = scheduleID
    @scheduleTime = scheduleTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SchedulingInfoType
#   maxScheduledMinutes - SOAP::SOAPInt
#   minScheduledMinutes - SOAP::SOAPInt
#   maxScheduledItems - SOAP::SOAPInt
class SchedulingInfoType
  attr_accessor :maxScheduledMinutes
  attr_accessor :minScheduledMinutes
  attr_accessor :maxScheduledItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxScheduledMinutes = nil, minScheduledMinutes = nil, maxScheduledItems = nil)
    @maxScheduledMinutes = maxScheduledMinutes
    @minScheduledMinutes = minScheduledMinutes
    @maxScheduledItems = maxScheduledItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchAttributesType
#   attributeID - SOAP::SOAPInt
#   dateSpecifier - DateSpecifierCodeType
#   rangeSpecifier - RangeCodeType
#   valueList - ValType
class SearchAttributesType
  attr_accessor :attributeID
  attr_accessor :dateSpecifier
  attr_accessor :rangeSpecifier
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateSpecifier = nil, rangeSpecifier = nil, valueList = [])
    @attributeID = attributeID
    @dateSpecifier = dateSpecifier
    @rangeSpecifier = rangeSpecifier
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchDetailsType
#   buyItNowEnabled - SOAP::SOAPBoolean
#   picture - SOAP::SOAPBoolean
#   recentListing - SOAP::SOAPBoolean
class SearchDetailsType
  attr_accessor :buyItNowEnabled
  attr_accessor :picture
  attr_accessor :recentListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyItNowEnabled = nil, picture = nil, recentListing = nil)
    @buyItNowEnabled = buyItNowEnabled
    @picture = picture
    @recentListing = recentListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchLocationFilterType
#   countryCode - CountryCodeType
#   itemLocation - ItemLocationCodeType
#   searchLocation - SearchLocationType
#   currency - CurrencyCodeType
class SearchLocationFilterType
  attr_accessor :countryCode
  attr_accessor :itemLocation
  attr_accessor :searchLocation
  attr_accessor :currency
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(countryCode = nil, itemLocation = nil, searchLocation = nil, currency = nil)
    @countryCode = countryCode
    @itemLocation = itemLocation
    @searchLocation = searchLocation
    @currency = currency
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchLocationType
#   regionID - SOAP::SOAPString
#   siteLocation - SiteLocationType
class SearchLocationType
  attr_accessor :regionID
  attr_accessor :siteLocation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, siteLocation = nil)
    @regionID = regionID
    @siteLocation = siteLocation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchRequestType
#   productFinderID - SOAP::SOAPInt
#   searchAttributes - SearchAttributesType
class SearchRequestType
  attr_accessor :productFinderID
  attr_accessor :searchAttributes
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productFinderID = nil, searchAttributes = [])
    @productFinderID = productFinderID
    @searchAttributes = searchAttributes
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultItemArrayType
class SearchResultItemArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultItemType
#   item - ItemType
#   itemSpecific - NameValueListArrayType
#   searchResultValues - SearchResultValuesCodeType
class SearchResultItemType
  attr_accessor :item
  attr_accessor :itemSpecific
  attr_accessor :searchResultValues
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, itemSpecific = nil, searchResultValues = [])
    @item = item
    @itemSpecific = itemSpecific
    @searchResultValues = searchResultValues
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchStandingDashboardType
#   status - SearchStandingStatusCodeType
class SearchStandingDashboardType
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil)
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchStoreFilterType
#   storeName - SOAP::SOAPString
#   storeSearch - StoreSearchCodeType
class SearchStoreFilterType
  attr_accessor :storeName
  attr_accessor :storeSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeName = nil, storeSearch = nil)
    @storeName = storeName
    @storeSearch = storeSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerAccountDashboardType
#   status - SellerAccountStatusCodeType
#   alert - SellerDashboardAlertType
class SellerAccountDashboardType
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, alert = [])
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerContactDetailsEnabledDefinitionType
class SellerContactDetailsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerDashboardAlertType
#   severity - SellerDashboardAlertSeverityCodeType
#   text - SOAP::SOAPString
class SellerDashboardAlertType
  attr_accessor :severity
  attr_accessor :text
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(severity = nil, text = nil)
    @severity = severity
    @text = text
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerFavoriteItemPreferencesType
#   searchKeywords - SOAP::SOAPString
#   storeCategoryID - SOAP::SOAPLong
#   listingType - ListingTypeCodeType
#   searchSortOrder - StoreItemListSortOrderCodeType
#   minPrice - AmountType
#   maxPrice - AmountType
#   favoriteItemID - (any)
class SellerFavoriteItemPreferencesType
  attr_accessor :searchKeywords
  attr_accessor :storeCategoryID
  attr_accessor :listingType
  attr_accessor :searchSortOrder
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :favoriteItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchKeywords = nil, storeCategoryID = nil, listingType = nil, searchSortOrder = nil, minPrice = nil, maxPrice = nil, favoriteItemID = [])
    @searchKeywords = searchKeywords
    @storeCategoryID = storeCategoryID
    @listingType = listingType
    @searchSortOrder = searchSortOrder
    @minPrice = minPrice
    @maxPrice = maxPrice
    @favoriteItemID = favoriteItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerFeeDiscountDashboardType
#   percent - SOAP::SOAPFloat
class SellerFeeDiscountDashboardType
  attr_accessor :percent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(percent = nil)
    @percent = percent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentPreferencesType
#   alwaysUseThisPaymentAddress - SOAP::SOAPBoolean
#   displayPayNowButton - DisplayPayNowButtonCodeType
#   payPalPreferred - SOAP::SOAPBoolean
#   defaultPayPalEmailAddress - SOAP::SOAPString
#   payPalAlwaysOn - SOAP::SOAPBoolean
#   sellerPaymentAddress - AddressType
#   uPSRateOption - UPSRateOptionCodeType
class SellerPaymentPreferencesType
  attr_accessor :alwaysUseThisPaymentAddress
  attr_accessor :displayPayNowButton
  attr_accessor :payPalPreferred
  attr_accessor :defaultPayPalEmailAddress
  attr_accessor :payPalAlwaysOn
  attr_accessor :sellerPaymentAddress
  attr_accessor :uPSRateOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alwaysUseThisPaymentAddress = nil, displayPayNowButton = nil, payPalPreferred = nil, defaultPayPalEmailAddress = nil, payPalAlwaysOn = nil, sellerPaymentAddress = nil, uPSRateOption = nil)
    @alwaysUseThisPaymentAddress = alwaysUseThisPaymentAddress
    @displayPayNowButton = displayPayNowButton
    @payPalPreferred = payPalPreferred
    @defaultPayPalEmailAddress = defaultPayPalEmailAddress
    @payPalAlwaysOn = payPalAlwaysOn
    @sellerPaymentAddress = sellerPaymentAddress
    @uPSRateOption = uPSRateOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - (any)
#   sellerInventoryID - SOAP::SOAPString
#   privateNotes - SOAP::SOAPString
#   externalProductID - ExternalProductIDType
#   title - SOAP::SOAPString
#   paymentType - PaymentTypeCodeType
#   transactionPrice - AmountType
#   shippingReimbursement - AmountType
#   commission - AmountType
#   amountPaid - AmountType
#   paidTime - SOAP::SOAPDateTime
class SellerPaymentType
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :sellerInventoryID
  attr_accessor :privateNotes
  attr_accessor :externalProductID
  attr_accessor :title
  attr_accessor :paymentType
  attr_accessor :transactionPrice
  attr_accessor :shippingReimbursement
  attr_accessor :commission
  attr_accessor :amountPaid
  attr_accessor :paidTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil, orderID = nil, sellerInventoryID = nil, privateNotes = nil, externalProductID = nil, title = nil, paymentType = nil, transactionPrice = nil, shippingReimbursement = nil, commission = nil, amountPaid = nil, paidTime = nil)
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @sellerInventoryID = sellerInventoryID
    @privateNotes = privateNotes
    @externalProductID = externalProductID
    @title = title
    @paymentType = paymentType
    @transactionPrice = transactionPrice
    @shippingReimbursement = shippingReimbursement
    @commission = commission
    @amountPaid = amountPaid
    @paidTime = paidTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerRatingSummaryArrayType
class SellerRatingSummaryArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}SellerRoleMetricsType
#   positiveFeedbackLeftCount - SOAP::SOAPInt
#   negativeFeedbackLeftCount - SOAP::SOAPInt
#   neutralFeedbackLeftCount - SOAP::SOAPInt
#   feedbackLeftPercent - SOAP::SOAPFloat
#   repeatBuyerCount - SOAP::SOAPInt
#   repeatBuyerPercent - SOAP::SOAPFloat
#   uniqueBuyerCount - SOAP::SOAPInt
#   transactionPercent - SOAP::SOAPFloat
#   crossBorderTransactionCount - SOAP::SOAPInt
#   crossBorderTransactionPercent - SOAP::SOAPFloat
class SellerRoleMetricsType
  attr_accessor :positiveFeedbackLeftCount
  attr_accessor :negativeFeedbackLeftCount
  attr_accessor :neutralFeedbackLeftCount
  attr_accessor :feedbackLeftPercent
  attr_accessor :repeatBuyerCount
  attr_accessor :repeatBuyerPercent
  attr_accessor :uniqueBuyerCount
  attr_accessor :transactionPercent
  attr_accessor :crossBorderTransactionCount
  attr_accessor :crossBorderTransactionPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(positiveFeedbackLeftCount = nil, negativeFeedbackLeftCount = nil, neutralFeedbackLeftCount = nil, feedbackLeftPercent = nil, repeatBuyerCount = nil, repeatBuyerPercent = nil, uniqueBuyerCount = nil, transactionPercent = nil, crossBorderTransactionCount = nil, crossBorderTransactionPercent = nil)
    @positiveFeedbackLeftCount = positiveFeedbackLeftCount
    @negativeFeedbackLeftCount = negativeFeedbackLeftCount
    @neutralFeedbackLeftCount = neutralFeedbackLeftCount
    @feedbackLeftPercent = feedbackLeftPercent
    @repeatBuyerCount = repeatBuyerCount
    @repeatBuyerPercent = repeatBuyerPercent
    @uniqueBuyerCount = uniqueBuyerCount
    @transactionPercent = transactionPercent
    @crossBorderTransactionCount = crossBorderTransactionCount
    @crossBorderTransactionPercent = crossBorderTransactionPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerType
#   paisaPayStatus - SOAP::SOAPInt
#   allowPaymentEdit - SOAP::SOAPBoolean
#   billingCurrency - CurrencyCodeType
#   checkoutEnabled - SOAP::SOAPBoolean
#   cIPBankAccountStored - SOAP::SOAPBoolean
#   goodStanding - SOAP::SOAPBoolean
#   liveAuctionAuthorized - SOAP::SOAPBoolean
#   merchandizingPref - MerchandizingPrefCodeType
#   qualifiesForB2BVAT - SOAP::SOAPBoolean
#   sellerGuaranteeLevel - SellerGuaranteeLevelCodeType
#   sellerLevel - SellerLevelCodeType
#   sellerPaymentAddress - AddressType
#   schedulingInfo - SchedulingInfoType
#   storeOwner - SOAP::SOAPBoolean
#   storeURL - SOAP::SOAPAnyURI
#   sellerBusinessType - SellerBusinessCodeType
#   registeredBusinessSeller - SOAP::SOAPBoolean
#   storeSite - SiteCodeType
#   paymentMethod - SellerPaymentMethodCodeType
#   proStoresPreference - ProStoresCheckoutPreferenceType
#   charityRegistered - SOAP::SOAPBoolean
#   safePaymentExempt - SOAP::SOAPBoolean
#   paisaPayEscrowEMIStatus - SOAP::SOAPInt
#   charityAffiliationDetails - CharityAffiliationDetailsType
#   transactionPercent - SOAP::SOAPFloat
class SellerType
  attr_accessor :paisaPayStatus
  attr_accessor :allowPaymentEdit
  attr_accessor :billingCurrency
  attr_accessor :checkoutEnabled
  attr_accessor :cIPBankAccountStored
  attr_accessor :goodStanding
  attr_accessor :liveAuctionAuthorized
  attr_accessor :merchandizingPref
  attr_accessor :qualifiesForB2BVAT
  attr_accessor :sellerGuaranteeLevel
  attr_accessor :sellerLevel
  attr_accessor :sellerPaymentAddress
  attr_accessor :schedulingInfo
  attr_accessor :storeOwner
  attr_accessor :storeURL
  attr_accessor :sellerBusinessType
  attr_accessor :registeredBusinessSeller
  attr_accessor :storeSite
  attr_accessor :paymentMethod
  attr_accessor :proStoresPreference
  attr_accessor :charityRegistered
  attr_accessor :safePaymentExempt
  attr_accessor :paisaPayEscrowEMIStatus
  attr_accessor :charityAffiliationDetails
  attr_accessor :transactionPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paisaPayStatus = nil, allowPaymentEdit = nil, billingCurrency = nil, checkoutEnabled = nil, cIPBankAccountStored = nil, goodStanding = nil, liveAuctionAuthorized = nil, merchandizingPref = nil, qualifiesForB2BVAT = nil, sellerGuaranteeLevel = nil, sellerLevel = nil, sellerPaymentAddress = nil, schedulingInfo = nil, storeOwner = nil, storeURL = nil, sellerBusinessType = nil, registeredBusinessSeller = nil, storeSite = nil, paymentMethod = nil, proStoresPreference = nil, charityRegistered = nil, safePaymentExempt = nil, paisaPayEscrowEMIStatus = nil, charityAffiliationDetails = nil, transactionPercent = nil)
    @paisaPayStatus = paisaPayStatus
    @allowPaymentEdit = allowPaymentEdit
    @billingCurrency = billingCurrency
    @checkoutEnabled = checkoutEnabled
    @cIPBankAccountStored = cIPBankAccountStored
    @goodStanding = goodStanding
    @liveAuctionAuthorized = liveAuctionAuthorized
    @merchandizingPref = merchandizingPref
    @qualifiesForB2BVAT = qualifiesForB2BVAT
    @sellerGuaranteeLevel = sellerGuaranteeLevel
    @sellerLevel = sellerLevel
    @sellerPaymentAddress = sellerPaymentAddress
    @schedulingInfo = schedulingInfo
    @storeOwner = storeOwner
    @storeURL = storeURL
    @sellerBusinessType = sellerBusinessType
    @registeredBusinessSeller = registeredBusinessSeller
    @storeSite = storeSite
    @paymentMethod = paymentMethod
    @proStoresPreference = proStoresPreference
    @charityRegistered = charityRegistered
    @safePaymentExempt = safePaymentExempt
    @paisaPayEscrowEMIStatus = paisaPayEscrowEMIStatus
    @charityAffiliationDetails = charityAffiliationDetails
    @transactionPercent = transactionPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductDetailsType
#   productName - SOAP::SOAPString
#   partNumber - SOAP::SOAPInt
#   productPartNumber - SOAP::SOAPString
#   productID - SOAP::SOAPString
#   customLabel - SOAP::SOAPString
#   quantityAvailable - SOAP::SOAPInt
#   unitCost - AmountType
class SellingManagerProductDetailsType
  attr_accessor :productName
  attr_accessor :partNumber
  attr_accessor :productPartNumber
  attr_accessor :productID
  attr_accessor :customLabel
  attr_accessor :quantityAvailable
  attr_accessor :unitCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productName = nil, partNumber = nil, productPartNumber = nil, productID = nil, customLabel = nil, quantityAvailable = nil, unitCost = nil)
    @productName = productName
    @partNumber = partNumber
    @productPartNumber = productPartNumber
    @productID = productID
    @customLabel = customLabel
    @quantityAvailable = quantityAvailable
    @unitCost = unitCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingStatusType
#   bidCount - SOAP::SOAPInt
#   bidIncrement - AmountType
#   convertedCurrentPrice - AmountType
#   currentPrice - AmountType
#   highBidder - UserType
#   leadCount - SOAP::SOAPInt
#   minimumToBid - AmountType
#   quantitySold - SOAP::SOAPInt
#   reserveMet - SOAP::SOAPBoolean
#   secondChanceEligible - SOAP::SOAPBoolean
#   bidderCount - SOAP::SOAPLong
#   listingStatus - ListingStatusCodeType
#   finalValueFee - AmountType
#   promotionalSaleDetails - PromotionalSaleDetailsType
#   adminEnded - SOAP::SOAPBoolean
class SellingStatusType
  attr_accessor :bidCount
  attr_accessor :bidIncrement
  attr_accessor :convertedCurrentPrice
  attr_accessor :currentPrice
  attr_accessor :highBidder
  attr_accessor :leadCount
  attr_accessor :minimumToBid
  attr_accessor :quantitySold
  attr_accessor :reserveMet
  attr_accessor :secondChanceEligible
  attr_accessor :bidderCount
  attr_accessor :listingStatus
  attr_accessor :finalValueFee
  attr_accessor :promotionalSaleDetails
  attr_accessor :adminEnded
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidCount = nil, bidIncrement = nil, convertedCurrentPrice = nil, currentPrice = nil, highBidder = nil, leadCount = nil, minimumToBid = nil, quantitySold = nil, reserveMet = nil, secondChanceEligible = nil, bidderCount = nil, listingStatus = nil, finalValueFee = nil, promotionalSaleDetails = nil, adminEnded = nil)
    @bidCount = bidCount
    @bidIncrement = bidIncrement
    @convertedCurrentPrice = convertedCurrentPrice
    @currentPrice = currentPrice
    @highBidder = highBidder
    @leadCount = leadCount
    @minimumToBid = minimumToBid
    @quantitySold = quantitySold
    @reserveMet = reserveMet
    @secondChanceEligible = secondChanceEligible
    @bidderCount = bidderCount
    @listingStatus = listingStatus
    @finalValueFee = finalValueFee
    @promotionalSaleDetails = promotionalSaleDetails
    @adminEnded = adminEnded
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingSummaryType
#   activeAuctionCount - SOAP::SOAPInt
#   auctionSellingCount - SOAP::SOAPInt
#   auctionBidCount - SOAP::SOAPInt
#   totalAuctionSellingValue - AmountType
#   totalSoldCount - SOAP::SOAPInt
#   totalSoldValue - AmountType
#   soldDurationInDays - SOAP::SOAPInt
class SellingSummaryType
  attr_accessor :activeAuctionCount
  attr_accessor :auctionSellingCount
  attr_accessor :auctionBidCount
  attr_accessor :totalAuctionSellingValue
  attr_accessor :totalSoldCount
  attr_accessor :totalSoldValue
  attr_accessor :soldDurationInDays

  def initialize(activeAuctionCount = nil, auctionSellingCount = nil, auctionBidCount = nil, totalAuctionSellingValue = nil, totalSoldCount = nil, totalSoldValue = nil, soldDurationInDays = nil)
    @activeAuctionCount = activeAuctionCount
    @auctionSellingCount = auctionSellingCount
    @auctionBidCount = auctionBidCount
    @totalAuctionSellingValue = totalAuctionSellingValue
    @totalSoldCount = totalSoldCount
    @totalSoldValue = totalSoldValue
    @soldDurationInDays = soldDurationInDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentType
#   estimatedDeliveryDate - SOAP::SOAPDateTime
#   insuredValue - AmountType
#   packageDepth - MeasureType
#   packageLength - MeasureType
#   packageWidth - MeasureType
#   payPalShipmentID - SOAP::SOAPString
#   shipmentID - SOAP::SOAPLong
#   postageTotal - AmountType
#   printedTime - SOAP::SOAPDateTime
#   shipFromAddress - AddressType
#   shippingAddress - AddressType
#   shippingCarrierUsed - ShippingCarrierCodeType
#   shippingFeature - ShippingFeatureCodeType
#   shippingPackage - ShippingPackageCodeType
#   shippingServiceUsed - SOAP::SOAPToken
#   shipmentTrackingNumber - SOAP::SOAPString
#   weightMajor - MeasureType
#   weightMinor - MeasureType
#   itemTransactionID - ItemTransactionIDType
#   deliveryDate - SOAP::SOAPDateTime
#   deliveryStatus - ShipmentDeliveryStatusCodeType
#   refundGrantedTime - SOAP::SOAPDateTime
#   refundRequestedTime - SOAP::SOAPDateTime
#   status - ShipmentStatusCodeType
#   shippedTime - SOAP::SOAPDateTime
class ShipmentType
  attr_accessor :estimatedDeliveryDate
  attr_accessor :insuredValue
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :payPalShipmentID
  attr_accessor :shipmentID
  attr_accessor :postageTotal
  attr_accessor :printedTime
  attr_accessor :shipFromAddress
  attr_accessor :shippingAddress
  attr_accessor :shippingCarrierUsed
  attr_accessor :shippingFeature
  attr_accessor :shippingPackage
  attr_accessor :shippingServiceUsed
  attr_accessor :shipmentTrackingNumber
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :itemTransactionID
  attr_accessor :deliveryDate
  attr_accessor :deliveryStatus
  attr_accessor :refundGrantedTime
  attr_accessor :refundRequestedTime
  attr_accessor :status
  attr_accessor :shippedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(estimatedDeliveryDate = nil, insuredValue = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, payPalShipmentID = nil, shipmentID = nil, postageTotal = nil, printedTime = nil, shipFromAddress = nil, shippingAddress = nil, shippingCarrierUsed = nil, shippingFeature = [], shippingPackage = nil, shippingServiceUsed = nil, shipmentTrackingNumber = nil, weightMajor = nil, weightMinor = nil, itemTransactionID = [], deliveryDate = nil, deliveryStatus = nil, refundGrantedTime = nil, refundRequestedTime = nil, status = nil, shippedTime = nil)
    @estimatedDeliveryDate = estimatedDeliveryDate
    @insuredValue = insuredValue
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @payPalShipmentID = payPalShipmentID
    @shipmentID = shipmentID
    @postageTotal = postageTotal
    @printedTime = printedTime
    @shipFromAddress = shipFromAddress
    @shippingAddress = shippingAddress
    @shippingCarrierUsed = shippingCarrierUsed
    @shippingFeature = shippingFeature
    @shippingPackage = shippingPackage
    @shippingServiceUsed = shippingServiceUsed
    @shipmentTrackingNumber = shipmentTrackingNumber
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @itemTransactionID = itemTransactionID
    @deliveryDate = deliveryDate
    @deliveryStatus = deliveryStatus
    @refundGrantedTime = refundGrantedTime
    @refundRequestedTime = refundRequestedTime
    @status = status
    @shippedTime = shippedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCarrierDetailsType
#   shippingCarrierID - SOAP::SOAPInt
#   description - SOAP::SOAPString
#   shippingCarrier - ShippingCarrierCodeType
class ShippingCarrierDetailsType
  attr_accessor :shippingCarrierID
  attr_accessor :description
  attr_accessor :shippingCarrier
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingCarrierID = nil, description = nil, shippingCarrier = nil)
    @shippingCarrierID = shippingCarrierID
    @description = description
    @shippingCarrier = shippingCarrier
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCostPaidByDetailsType
#   shippingCostPaidByOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class ShippingCostPaidByDetailsType
  attr_accessor :shippingCostPaidByOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingCostPaidByOption = nil, description = nil)
    @shippingCostPaidByOption = shippingCostPaidByOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingDetailsType
#   allowPaymentEdit - SOAP::SOAPBoolean
#   applyShippingDiscount - SOAP::SOAPBoolean
#   calculatedShippingRate - CalculatedShippingRateType
#   changePaymentInstructions - SOAP::SOAPBoolean
#   insuranceFee - AmountType
#   insuranceOption - InsuranceOptionCodeType
#   insuranceWanted - SOAP::SOAPBoolean
#   paymentEdited - SOAP::SOAPBoolean
#   paymentInstructions - SOAP::SOAPString
#   salesTax - SalesTaxType
#   shippingRateErrorMessage - SOAP::SOAPString
#   shippingRateType - ShippingRateTypeCodeType
#   shippingServiceOptions - ShippingServiceOptionsType
#   internationalShippingServiceOption - InternationalShippingServiceOptionsType
#   shippingType - ShippingTypeCodeType
#   sellingManagerSalesRecordNumber - SOAP::SOAPInt
#   thirdPartyCheckout - SOAP::SOAPBoolean
#   taxTable - TaxTableType
#   getItFast - SOAP::SOAPBoolean
#   shipmentTrackingNumber - SOAP::SOAPString
#   shippingServiceUsed - SOAP::SOAPToken
#   defaultShippingCost - AmountType
#   insuranceDetails - InsuranceDetailsType
#   internationalInsuranceDetails - InsuranceDetailsType
#   shippingDiscountProfileID - SOAP::SOAPString
#   flatShippingDiscount - FlatShippingDiscountType
#   calculatedShippingDiscount - CalculatedShippingDiscountType
#   promotionalShippingDiscount - SOAP::SOAPBoolean
#   internationalShippingDiscountProfileID - SOAP::SOAPString
#   internationalFlatShippingDiscount - FlatShippingDiscountType
#   internationalCalculatedShippingDiscount - CalculatedShippingDiscountType
#   internationalPromotionalShippingDiscount - SOAP::SOAPBoolean
#   promotionalShippingDiscountDetails - PromotionalShippingDiscountDetailsType
#   cODCost - AmountType
class ShippingDetailsType
  attr_accessor :allowPaymentEdit
  attr_accessor :applyShippingDiscount
  attr_accessor :calculatedShippingRate
  attr_accessor :changePaymentInstructions
  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_accessor :insuranceWanted
  attr_accessor :paymentEdited
  attr_accessor :paymentInstructions
  attr_accessor :salesTax
  attr_accessor :shippingRateErrorMessage
  attr_accessor :shippingRateType
  attr_accessor :shippingServiceOptions
  attr_accessor :internationalShippingServiceOption
  attr_accessor :shippingType
  attr_accessor :sellingManagerSalesRecordNumber
  attr_accessor :thirdPartyCheckout
  attr_accessor :taxTable
  attr_accessor :getItFast
  attr_accessor :shipmentTrackingNumber
  attr_accessor :shippingServiceUsed
  attr_accessor :defaultShippingCost
  attr_accessor :insuranceDetails
  attr_accessor :internationalInsuranceDetails
  attr_accessor :shippingDiscountProfileID
  attr_accessor :flatShippingDiscount
  attr_accessor :calculatedShippingDiscount
  attr_accessor :promotionalShippingDiscount
  attr_accessor :internationalShippingDiscountProfileID
  attr_accessor :internationalFlatShippingDiscount
  attr_accessor :internationalCalculatedShippingDiscount
  attr_accessor :internationalPromotionalShippingDiscount
  attr_accessor :promotionalShippingDiscountDetails
  attr_accessor :cODCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(allowPaymentEdit = nil, applyShippingDiscount = nil, calculatedShippingRate = nil, changePaymentInstructions = nil, insuranceFee = nil, insuranceOption = nil, insuranceWanted = nil, paymentEdited = nil, paymentInstructions = nil, salesTax = nil, shippingRateErrorMessage = nil, shippingRateType = nil, shippingServiceOptions = [], internationalShippingServiceOption = [], shippingType = nil, sellingManagerSalesRecordNumber = nil, thirdPartyCheckout = nil, taxTable = nil, getItFast = nil, shipmentTrackingNumber = nil, shippingServiceUsed = nil, defaultShippingCost = nil, insuranceDetails = nil, internationalInsuranceDetails = nil, shippingDiscountProfileID = nil, flatShippingDiscount = nil, calculatedShippingDiscount = nil, promotionalShippingDiscount = nil, internationalShippingDiscountProfileID = nil, internationalFlatShippingDiscount = nil, internationalCalculatedShippingDiscount = nil, internationalPromotionalShippingDiscount = nil, promotionalShippingDiscountDetails = nil, cODCost = nil)
    @allowPaymentEdit = allowPaymentEdit
    @applyShippingDiscount = applyShippingDiscount
    @calculatedShippingRate = calculatedShippingRate
    @changePaymentInstructions = changePaymentInstructions
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @insuranceWanted = insuranceWanted
    @paymentEdited = paymentEdited
    @paymentInstructions = paymentInstructions
    @salesTax = salesTax
    @shippingRateErrorMessage = shippingRateErrorMessage
    @shippingRateType = shippingRateType
    @shippingServiceOptions = shippingServiceOptions
    @internationalShippingServiceOption = internationalShippingServiceOption
    @shippingType = shippingType
    @sellingManagerSalesRecordNumber = sellingManagerSalesRecordNumber
    @thirdPartyCheckout = thirdPartyCheckout
    @taxTable = taxTable
    @getItFast = getItFast
    @shipmentTrackingNumber = shipmentTrackingNumber
    @shippingServiceUsed = shippingServiceUsed
    @defaultShippingCost = defaultShippingCost
    @insuranceDetails = insuranceDetails
    @internationalInsuranceDetails = internationalInsuranceDetails
    @shippingDiscountProfileID = shippingDiscountProfileID
    @flatShippingDiscount = flatShippingDiscount
    @calculatedShippingDiscount = calculatedShippingDiscount
    @promotionalShippingDiscount = promotionalShippingDiscount
    @internationalShippingDiscountProfileID = internationalShippingDiscountProfileID
    @internationalFlatShippingDiscount = internationalFlatShippingDiscount
    @internationalCalculatedShippingDiscount = internationalCalculatedShippingDiscount
    @internationalPromotionalShippingDiscount = internationalPromotionalShippingDiscount
    @promotionalShippingDiscountDetails = promotionalShippingDiscountDetails
    @cODCost = cODCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingInsuranceType
#   insuranceOption - InsuranceOptionCodeType
#   flatRateInsuranceRangeCost - FlatRateInsuranceRangeCostType
class ShippingInsuranceType
  attr_accessor :insuranceOption
  attr_accessor :flatRateInsuranceRangeCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(insuranceOption = nil, flatRateInsuranceRangeCost = [])
    @insuranceOption = insuranceOption
    @flatRateInsuranceRangeCost = flatRateInsuranceRangeCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingLocationDetailsType
#   shippingLocation - SOAP::SOAPString
#   description - SOAP::SOAPString
class ShippingLocationDetailsType
  attr_accessor :shippingLocation
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingLocation = nil, description = nil)
    @shippingLocation = shippingLocation
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageDetailsType
#   packageID - SOAP::SOAPInt
#   description - SOAP::SOAPString
#   shippingPackage - ShippingPackageCodeType
#   default - SOAP::SOAPBoolean
class ShippingPackageDetailsType
  attr_accessor :packageID
  attr_accessor :description
  attr_accessor :shippingPackage
  attr_accessor :default
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(packageID = nil, description = nil, shippingPackage = nil, default = nil)
    @packageID = packageID
    @description = description
    @shippingPackage = shippingPackage
    @default = default
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceDetailsType
#   description - SOAP::SOAPString
#   expeditedService - SOAP::SOAPBoolean
#   internationalService - SOAP::SOAPBoolean
#   shippingService - SOAP::SOAPToken
#   shippingServiceID - SOAP::SOAPInt
#   shippingTimeMax - SOAP::SOAPInt
#   shippingTimeMin - SOAP::SOAPInt
#   shippingServiceCode - ShippingServiceCodeType
#   serviceType - ShippingTypeCodeType
#   shippingPackage - ShippingPackageCodeType
#   dimensionsRequired - SOAP::SOAPBoolean
#   validForSellingFlow - SOAP::SOAPBoolean
#   surchargeApplicable - SOAP::SOAPBoolean
#   shippingCarrier - ShippingCarrierCodeType
#   cODService - SOAP::SOAPBoolean
#   deprecationDetails - AnnouncementMessageType
#   mappedToShippingServiceID - SOAP::SOAPInt
class ShippingServiceDetailsType
  attr_accessor :description
  attr_accessor :expeditedService
  attr_accessor :internationalService
  attr_accessor :shippingService
  attr_accessor :shippingServiceID
  attr_accessor :shippingTimeMax
  attr_accessor :shippingTimeMin
  attr_accessor :shippingServiceCode
  attr_accessor :serviceType
  attr_accessor :shippingPackage
  attr_accessor :dimensionsRequired
  attr_accessor :validForSellingFlow
  attr_accessor :surchargeApplicable
  attr_accessor :shippingCarrier
  attr_accessor :cODService
  attr_accessor :deprecationDetails
  attr_accessor :mappedToShippingServiceID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(description = nil, expeditedService = nil, internationalService = nil, shippingService = nil, shippingServiceID = nil, shippingTimeMax = nil, shippingTimeMin = nil, shippingServiceCode = nil, serviceType = [], shippingPackage = [], dimensionsRequired = nil, validForSellingFlow = nil, surchargeApplicable = nil, shippingCarrier = [], cODService = nil, deprecationDetails = [], mappedToShippingServiceID = nil)
    @description = description
    @expeditedService = expeditedService
    @internationalService = internationalService
    @shippingService = shippingService
    @shippingServiceID = shippingServiceID
    @shippingTimeMax = shippingTimeMax
    @shippingTimeMin = shippingTimeMin
    @shippingServiceCode = shippingServiceCode
    @serviceType = serviceType
    @shippingPackage = shippingPackage
    @dimensionsRequired = dimensionsRequired
    @validForSellingFlow = validForSellingFlow
    @surchargeApplicable = surchargeApplicable
    @shippingCarrier = shippingCarrier
    @cODService = cODService
    @deprecationDetails = deprecationDetails
    @mappedToShippingServiceID = mappedToShippingServiceID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceOptionsType
#   shippingInsuranceCost - AmountType
#   shippingService - SOAP::SOAPToken
#   shippingServiceCost - AmountType
#   shippingServiceAdditionalCost - AmountType
#   shippingServicePriority - SOAP::SOAPInt
#   expeditedService - SOAP::SOAPBoolean
#   shippingTimeMin - SOAP::SOAPInt
#   shippingTimeMax - SOAP::SOAPInt
#   shippingSurcharge - AmountType
#   freeShipping - SOAP::SOAPBoolean
class ShippingServiceOptionsType
  attr_accessor :shippingInsuranceCost
  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :expeditedService
  attr_accessor :shippingTimeMin
  attr_accessor :shippingTimeMax
  attr_accessor :shippingSurcharge
  attr_accessor :freeShipping
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingInsuranceCost = nil, shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, expeditedService = nil, shippingTimeMin = nil, shippingTimeMax = nil, shippingSurcharge = nil, freeShipping = nil)
    @shippingInsuranceCost = shippingInsuranceCost
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @expeditedService = expeditedService
    @shippingTimeMin = shippingTimeMin
    @shippingTimeMax = shippingTimeMax
    @shippingSurcharge = shippingSurcharge
    @freeShipping = freeShipping
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTermRequiredDefinitionType
class ShippingTermRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDefaultsType
#   listingDuration - ListingDurationReferenceType
#   shippingTermsRequired - SOAP::SOAPBoolean
#   bestOfferEnabled - SOAP::SOAPBoolean
#   dutchBINEnabled - SOAP::SOAPBoolean
#   userConsentRequired - SOAP::SOAPBoolean
#   homePageFeaturedEnabled - SOAP::SOAPBoolean
#   proPackEnabled - SOAP::SOAPBoolean
#   basicUpgradePackEnabled - SOAP::SOAPBoolean
#   valuePackEnabled - SOAP::SOAPBoolean
#   proPackPlusEnabled - SOAP::SOAPBoolean
#   adFormatEnabled - AdFormatEnabledCodeType
#   bestOfferCounterEnabled - SOAP::SOAPBoolean
#   bestOfferAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketSpecialitySubscription - SOAP::SOAPBoolean
#   localMarketRegularSubscription - SOAP::SOAPBoolean
#   localMarketPremiumSubscription - SOAP::SOAPBoolean
#   localMarketNonSubscription - SOAP::SOAPBoolean
#   expressEnabled - SOAP::SOAPBoolean
#   expressPicturesRequired - SOAP::SOAPBoolean
#   expressConditionRequired - SOAP::SOAPBoolean
#   minimumReservePrice - SOAP::SOAPDouble
#   sellerContactDetailsEnabled - SOAP::SOAPBoolean
#   transactionConfirmationRequestEnabled - SOAP::SOAPBoolean
#   storeInventoryEnabled - SOAP::SOAPBoolean
#   skypeMeTransactionalEnabled - SOAP::SOAPBoolean
#   skypeMeNonTransactionalEnabled - SOAP::SOAPBoolean
#   localListingDistancesRegular - SOAP::SOAPString
#   localListingDistancesSpecialty - SOAP::SOAPString
#   localListingDistancesNonSubscription - SOAP::SOAPString
#   classifiedAdPaymentMethodEnabled - ClassifiedAdPaymentMethodEnabledCodeType
#   classifiedAdShippingMethodEnabled - SOAP::SOAPBoolean
#   classifiedAdBestOfferEnabled - ClassifiedAdBestOfferEnabledCodeType
#   classifiedAdCounterOfferEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoDeclineEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByPhoneEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByEmailEnabled - SOAP::SOAPBoolean
#   safePaymentRequired - SOAP::SOAPBoolean
#   classifiedAdPayPerLeadEnabled - SOAP::SOAPBoolean
#   itemSpecificsEnabled - ItemSpecificsEnabledCodeType
#   paisaPayFullEscrowEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoAcceptEnabled - SOAP::SOAPBoolean
#   bestOfferAutoAcceptEnabled - SOAP::SOAPBoolean
#   crossBorderTradeNorthAmericaEnabled - SOAP::SOAPBoolean
#   crossBorderTradeGBEnabled - SOAP::SOAPBoolean
#   crossBorderTradeAustraliaEnabled - SOAP::SOAPBoolean
#   payPalBuyerProtectionEnabled - SOAP::SOAPBoolean
#   buyerGuaranteeEnabled - SOAP::SOAPBoolean
#   iNEscrowWorkflowTimeline - INEscrowWorkflowTimelineCodeType
#   combinedFixedPriceTreatmentEnabled - SOAP::SOAPBoolean
#   galleryFeaturedDurations - ListingEnhancementDurationReferenceType
#   payPalRequired - SOAP::SOAPBoolean
#   eBayMotorsProAdFormatEnabled - AdFormatEnabledCodeType
#   eBayMotorsProContactByPhoneEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPhoneCount - SOAP::SOAPInt
#   eBayMotorsProContactByAddressEnabled - SOAP::SOAPBoolean
#   eBayMotorsProStreetCount - SOAP::SOAPInt
#   eBayMotorsProCompanyNameEnabled - SOAP::SOAPBoolean
#   eBayMotorsProContactByEmailEnabled - SOAP::SOAPBoolean
#   eBayMotorsProBestOfferEnabled - ClassifiedAdBestOfferEnabledCodeType
#   eBayMotorsProAutoAcceptEnabled - SOAP::SOAPBoolean
#   eBayMotorsProAutoDeclineEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPaymentMethodCheckOutEnabled - ClassifiedAdPaymentMethodEnabledCodeType
#   eBayMotorsProShippingMethodEnabled - SOAP::SOAPBoolean
#   eBayMotorsProCounterOfferEnabled - SOAP::SOAPBoolean
#   eBayMotorsProSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   localMarketAdFormatEnabled - AdFormatEnabledCodeType
#   localMarketContactByPhoneEnabled - SOAP::SOAPBoolean
#   localMarketPhoneCount - SOAP::SOAPInt
#   localMarketContactByAddressEnabled - SOAP::SOAPBoolean
#   localMarketStreetCount - SOAP::SOAPInt
#   localMarketCompanyNameEnabled - SOAP::SOAPBoolean
#   localMarketContactByEmailEnabled - SOAP::SOAPBoolean
#   localMarketBestOfferEnabled - ClassifiedAdBestOfferEnabledCodeType
#   localMarketAutoAcceptEnabled - SOAP::SOAPBoolean
#   localMarketAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketPaymentMethodCheckOutEnabled - ClassifiedAdPaymentMethodEnabledCodeType
#   localMarketShippingMethodEnabled - SOAP::SOAPBoolean
#   localMarketCounterOfferEnabled - SOAP::SOAPBoolean
#   localMarketSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   classifiedAdPhoneCount - SOAP::SOAPInt
#   classifiedAdContactByAddressEnabled - SOAP::SOAPBoolean
#   classifiedAdStreetCount - SOAP::SOAPInt
#   classifiedAdCompanyNameEnabled - SOAP::SOAPBoolean
#   specialitySubscription - GeographicExposureCodeType
#   regularSubscription - GeographicExposureCodeType
#   premiumSubscription - GeographicExposureCodeType
#   nonSubscription - GeographicExposureCodeType
#   payPalRequiredForStoreOwner - SOAP::SOAPBoolean
#   reviseQuantityAllowed - SOAP::SOAPBoolean
#   revisePriceAllowed - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurationsEnabled - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurations - StoreOwnerExtendedListingDurationsType
#   returnPolicyEnabled - SOAP::SOAPBoolean
#   handlingTimeEnabled - SOAP::SOAPBoolean
#   maxFlatShippingCost - SOAP::SOAPBoolean
#   maxFlatShippingCostCBTExempt - SOAP::SOAPBoolean
class SiteDefaultsType
  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :localListingDistancesRegular
  attr_accessor :localListingDistancesSpecialty
  attr_accessor :localListingDistancesNonSubscription
  attr_accessor :classifiedAdPaymentMethodEnabled
  attr_accessor :classifiedAdShippingMethodEnabled
  attr_accessor :classifiedAdBestOfferEnabled
  attr_accessor :classifiedAdCounterOfferEnabled
  attr_accessor :classifiedAdAutoDeclineEnabled
  attr_accessor :classifiedAdContactByPhoneEnabled
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :safePaymentRequired
  attr_accessor :classifiedAdPayPerLeadEnabled
  attr_accessor :itemSpecificsEnabled
  attr_accessor :paisaPayFullEscrowEnabled
  attr_accessor :classifiedAdAutoAcceptEnabled
  attr_accessor :bestOfferAutoAcceptEnabled
  attr_accessor :crossBorderTradeNorthAmericaEnabled
  attr_accessor :crossBorderTradeGBEnabled
  attr_accessor :crossBorderTradeAustraliaEnabled
  attr_accessor :payPalBuyerProtectionEnabled
  attr_accessor :buyerGuaranteeEnabled
  attr_accessor :iNEscrowWorkflowTimeline
  attr_accessor :combinedFixedPriceTreatmentEnabled
  attr_accessor :galleryFeaturedDurations
  attr_accessor :payPalRequired
  attr_accessor :eBayMotorsProAdFormatEnabled
  attr_accessor :eBayMotorsProContactByPhoneEnabled
  attr_accessor :eBayMotorsProPhoneCount
  attr_accessor :eBayMotorsProContactByAddressEnabled
  attr_accessor :eBayMotorsProStreetCount
  attr_accessor :eBayMotorsProCompanyNameEnabled
  attr_accessor :eBayMotorsProContactByEmailEnabled
  attr_accessor :eBayMotorsProBestOfferEnabled
  attr_accessor :eBayMotorsProAutoAcceptEnabled
  attr_accessor :eBayMotorsProAutoDeclineEnabled
  attr_accessor :eBayMotorsProPaymentMethodCheckOutEnabled
  attr_accessor :eBayMotorsProShippingMethodEnabled
  attr_accessor :eBayMotorsProCounterOfferEnabled
  attr_accessor :eBayMotorsProSellerContactDetailsEnabled
  attr_accessor :localMarketAdFormatEnabled
  attr_accessor :localMarketContactByPhoneEnabled
  attr_accessor :localMarketPhoneCount
  attr_accessor :localMarketContactByAddressEnabled
  attr_accessor :localMarketStreetCount
  attr_accessor :localMarketCompanyNameEnabled
  attr_accessor :localMarketContactByEmailEnabled
  attr_accessor :localMarketBestOfferEnabled
  attr_accessor :localMarketAutoAcceptEnabled
  attr_accessor :localMarketAutoDeclineEnabled
  attr_accessor :localMarketPaymentMethodCheckOutEnabled
  attr_accessor :localMarketShippingMethodEnabled
  attr_accessor :localMarketCounterOfferEnabled
  attr_accessor :localMarketSellerContactDetailsEnabled
  attr_accessor :classifiedAdPhoneCount
  attr_accessor :classifiedAdContactByAddressEnabled
  attr_accessor :classifiedAdStreetCount
  attr_accessor :classifiedAdCompanyNameEnabled
  attr_accessor :specialitySubscription
  attr_accessor :regularSubscription
  attr_accessor :premiumSubscription
  attr_accessor :nonSubscription
  attr_accessor :payPalRequiredForStoreOwner
  attr_accessor :reviseQuantityAllowed
  attr_accessor :revisePriceAllowed
  attr_accessor :storeOwnerExtendedListingDurationsEnabled
  attr_accessor :storeOwnerExtendedListingDurations
  attr_accessor :returnPolicyEnabled
  attr_accessor :handlingTimeEnabled
  attr_accessor :maxFlatShippingCost
  attr_accessor :maxFlatShippingCostCBTExempt
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, sellerContactDetailsEnabled = nil, transactionConfirmationRequestEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, localListingDistancesRegular = nil, localListingDistancesSpecialty = nil, localListingDistancesNonSubscription = nil, classifiedAdPaymentMethodEnabled = nil, classifiedAdShippingMethodEnabled = nil, classifiedAdBestOfferEnabled = nil, classifiedAdCounterOfferEnabled = nil, classifiedAdAutoDeclineEnabled = nil, classifiedAdContactByPhoneEnabled = nil, classifiedAdContactByEmailEnabled = nil, safePaymentRequired = nil, classifiedAdPayPerLeadEnabled = nil, itemSpecificsEnabled = nil, paisaPayFullEscrowEnabled = nil, classifiedAdAutoAcceptEnabled = nil, bestOfferAutoAcceptEnabled = nil, crossBorderTradeNorthAmericaEnabled = nil, crossBorderTradeGBEnabled = nil, crossBorderTradeAustraliaEnabled = nil, payPalBuyerProtectionEnabled = nil, buyerGuaranteeEnabled = nil, iNEscrowWorkflowTimeline = nil, combinedFixedPriceTreatmentEnabled = nil, galleryFeaturedDurations = nil, payPalRequired = nil, eBayMotorsProAdFormatEnabled = nil, eBayMotorsProContactByPhoneEnabled = nil, eBayMotorsProPhoneCount = nil, eBayMotorsProContactByAddressEnabled = nil, eBayMotorsProStreetCount = nil, eBayMotorsProCompanyNameEnabled = nil, eBayMotorsProContactByEmailEnabled = nil, eBayMotorsProBestOfferEnabled = nil, eBayMotorsProAutoAcceptEnabled = nil, eBayMotorsProAutoDeclineEnabled = nil, eBayMotorsProPaymentMethodCheckOutEnabled = nil, eBayMotorsProShippingMethodEnabled = nil, eBayMotorsProCounterOfferEnabled = nil, eBayMotorsProSellerContactDetailsEnabled = nil, localMarketAdFormatEnabled = nil, localMarketContactByPhoneEnabled = nil, localMarketPhoneCount = nil, localMarketContactByAddressEnabled = nil, localMarketStreetCount = nil, localMarketCompanyNameEnabled = nil, localMarketContactByEmailEnabled = nil, localMarketBestOfferEnabled = nil, localMarketAutoAcceptEnabled = nil, localMarketAutoDeclineEnabled = nil, localMarketPaymentMethodCheckOutEnabled = nil, localMarketShippingMethodEnabled = nil, localMarketCounterOfferEnabled = nil, localMarketSellerContactDetailsEnabled = nil, classifiedAdPhoneCount = nil, classifiedAdContactByAddressEnabled = nil, classifiedAdStreetCount = nil, classifiedAdCompanyNameEnabled = nil, specialitySubscription = nil, regularSubscription = nil, premiumSubscription = nil, nonSubscription = nil, payPalRequiredForStoreOwner = nil, reviseQuantityAllowed = nil, revisePriceAllowed = nil, storeOwnerExtendedListingDurationsEnabled = nil, storeOwnerExtendedListingDurations = nil, returnPolicyEnabled = nil, handlingTimeEnabled = nil, maxFlatShippingCost = nil, maxFlatShippingCostCBTExempt = nil)
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @localListingDistancesRegular = localListingDistancesRegular
    @localListingDistancesSpecialty = localListingDistancesSpecialty
    @localListingDistancesNonSubscription = localListingDistancesNonSubscription
    @classifiedAdPaymentMethodEnabled = classifiedAdPaymentMethodEnabled
    @classifiedAdShippingMethodEnabled = classifiedAdShippingMethodEnabled
    @classifiedAdBestOfferEnabled = classifiedAdBestOfferEnabled
    @classifiedAdCounterOfferEnabled = classifiedAdCounterOfferEnabled
    @classifiedAdAutoDeclineEnabled = classifiedAdAutoDeclineEnabled
    @classifiedAdContactByPhoneEnabled = classifiedAdContactByPhoneEnabled
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @safePaymentRequired = safePaymentRequired
    @classifiedAdPayPerLeadEnabled = classifiedAdPayPerLeadEnabled
    @itemSpecificsEnabled = itemSpecificsEnabled
    @paisaPayFullEscrowEnabled = paisaPayFullEscrowEnabled
    @classifiedAdAutoAcceptEnabled = classifiedAdAutoAcceptEnabled
    @bestOfferAutoAcceptEnabled = bestOfferAutoAcceptEnabled
    @crossBorderTradeNorthAmericaEnabled = crossBorderTradeNorthAmericaEnabled
    @crossBorderTradeGBEnabled = crossBorderTradeGBEnabled
    @crossBorderTradeAustraliaEnabled = crossBorderTradeAustraliaEnabled
    @payPalBuyerProtectionEnabled = payPalBuyerProtectionEnabled
    @buyerGuaranteeEnabled = buyerGuaranteeEnabled
    @iNEscrowWorkflowTimeline = iNEscrowWorkflowTimeline
    @combinedFixedPriceTreatmentEnabled = combinedFixedPriceTreatmentEnabled
    @galleryFeaturedDurations = galleryFeaturedDurations
    @payPalRequired = payPalRequired
    @eBayMotorsProAdFormatEnabled = eBayMotorsProAdFormatEnabled
    @eBayMotorsProContactByPhoneEnabled = eBayMotorsProContactByPhoneEnabled
    @eBayMotorsProPhoneCount = eBayMotorsProPhoneCount
    @eBayMotorsProContactByAddressEnabled = eBayMotorsProContactByAddressEnabled
    @eBayMotorsProStreetCount = eBayMotorsProStreetCount
    @eBayMotorsProCompanyNameEnabled = eBayMotorsProCompanyNameEnabled
    @eBayMotorsProContactByEmailEnabled = eBayMotorsProContactByEmailEnabled
    @eBayMotorsProBestOfferEnabled = eBayMotorsProBestOfferEnabled
    @eBayMotorsProAutoAcceptEnabled = eBayMotorsProAutoAcceptEnabled
    @eBayMotorsProAutoDeclineEnabled = eBayMotorsProAutoDeclineEnabled
    @eBayMotorsProPaymentMethodCheckOutEnabled = eBayMotorsProPaymentMethodCheckOutEnabled
    @eBayMotorsProShippingMethodEnabled = eBayMotorsProShippingMethodEnabled
    @eBayMotorsProCounterOfferEnabled = eBayMotorsProCounterOfferEnabled
    @eBayMotorsProSellerContactDetailsEnabled = eBayMotorsProSellerContactDetailsEnabled
    @localMarketAdFormatEnabled = localMarketAdFormatEnabled
    @localMarketContactByPhoneEnabled = localMarketContactByPhoneEnabled
    @localMarketPhoneCount = localMarketPhoneCount
    @localMarketContactByAddressEnabled = localMarketContactByAddressEnabled
    @localMarketStreetCount = localMarketStreetCount
    @localMarketCompanyNameEnabled = localMarketCompanyNameEnabled
    @localMarketContactByEmailEnabled = localMarketContactByEmailEnabled
    @localMarketBestOfferEnabled = localMarketBestOfferEnabled
    @localMarketAutoAcceptEnabled = localMarketAutoAcceptEnabled
    @localMarketAutoDeclineEnabled = localMarketAutoDeclineEnabled
    @localMarketPaymentMethodCheckOutEnabled = localMarketPaymentMethodCheckOutEnabled
    @localMarketShippingMethodEnabled = localMarketShippingMethodEnabled
    @localMarketCounterOfferEnabled = localMarketCounterOfferEnabled
    @localMarketSellerContactDetailsEnabled = localMarketSellerContactDetailsEnabled
    @classifiedAdPhoneCount = classifiedAdPhoneCount
    @classifiedAdContactByAddressEnabled = classifiedAdContactByAddressEnabled
    @classifiedAdStreetCount = classifiedAdStreetCount
    @classifiedAdCompanyNameEnabled = classifiedAdCompanyNameEnabled
    @specialitySubscription = specialitySubscription
    @regularSubscription = regularSubscription
    @premiumSubscription = premiumSubscription
    @nonSubscription = nonSubscription
    @payPalRequiredForStoreOwner = payPalRequiredForStoreOwner
    @reviseQuantityAllowed = reviseQuantityAllowed
    @revisePriceAllowed = revisePriceAllowed
    @storeOwnerExtendedListingDurationsEnabled = storeOwnerExtendedListingDurationsEnabled
    @storeOwnerExtendedListingDurations = storeOwnerExtendedListingDurations
    @returnPolicyEnabled = returnPolicyEnabled
    @handlingTimeEnabled = handlingTimeEnabled
    @maxFlatShippingCost = maxFlatShippingCost
    @maxFlatShippingCostCBTExempt = maxFlatShippingCostCBTExempt
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDetailsType
#   site - SiteCodeType
#   siteID - SOAP::SOAPInt
class SiteDetailsType
  attr_accessor :site
  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, siteID = nil)
    @site = site
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteHostedPictureDetailsType
#   pictureName - SOAP::SOAPString
#   pictureSet - PictureSetCodeType
#   pictureFormat - PictureFormatCodeType
#   fullURL - SOAP::SOAPAnyURI
#   baseURL - SOAP::SOAPAnyURI
#   pictureSetMember - PictureSetMemberType
class SiteHostedPictureDetailsType
  attr_accessor :pictureName
  attr_accessor :pictureSet
  attr_accessor :pictureFormat
  attr_accessor :fullURL
  attr_accessor :baseURL
  attr_accessor :pictureSetMember
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureName = nil, pictureSet = nil, pictureFormat = nil, fullURL = nil, baseURL = nil, pictureSetMember = [])
    @pictureName = pictureName
    @pictureSet = pictureSet
    @pictureFormat = pictureFormat
    @fullURL = fullURL
    @baseURL = baseURL
    @pictureSetMember = pictureSetMember
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteLocationType
#   siteID - SiteIDFilterCodeType
class SiteLocationType
  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(siteID = nil)
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteWideCharacteristicsType
#   characteristicsSet - CharacteristicsSetType
#   excludeCategoryID - SOAP::SOAPString
class SiteWideCharacteristicsType
  attr_accessor :characteristicsSet
  attr_accessor :excludeCategoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(characteristicsSet = nil, excludeCategoryID = [])
    @characteristicsSet = characteristicsSet
    @excludeCategoryID = excludeCategoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SkypeMeNonTransactionalEnabledDefinitionType
class SkypeMeNonTransactionalEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SkypeMeTransactionalEnabledDefinitionType
class SkypeMeTransactionalEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SpecialitySubscriptionDefinitionType
class SpecialitySubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SpellingSuggestionType
#   matchingItemCount - SOAP::SOAPInt
#   text - SOAP::SOAPString
class SpellingSuggestionType
  attr_accessor :matchingItemCount
  attr_accessor :text
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(matchingItemCount = nil, text = [])
    @matchingItemCount = matchingItemCount
    @text = text
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeArrayType
class StoreColorSchemeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeType
#   colorSchemeID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   color - StoreColorType
#   font - StoreFontType
class StoreColorSchemeType
  attr_accessor :colorSchemeID
  attr_accessor :name
  attr_accessor :color
  attr_accessor :font
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(colorSchemeID = nil, name = nil, color = nil, font = nil)
    @colorSchemeID = colorSchemeID
    @name = name
    @color = color
    @font = font
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorType
#   primary - SOAP::SOAPString
#   secondary - SOAP::SOAPString
#   accent - SOAP::SOAPString
class StoreColorType
  attr_accessor :primary
  attr_accessor :secondary
  attr_accessor :accent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(primary = nil, secondary = nil, accent = nil)
    @primary = primary
    @secondary = secondary
    @accent = accent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryArrayType
class StoreCustomCategoryArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryType
#   categoryID - SOAP::SOAPLong
#   name - SOAP::SOAPString
#   order - SOAP::SOAPInt
#   childCategory - StoreCustomCategoryType
class StoreCustomCategoryType
  attr_accessor :categoryID
  attr_accessor :name
  attr_accessor :order
  attr_accessor :childCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, name = nil, order = nil, childCategory = [])
    @categoryID = categoryID
    @name = name
    @order = order
    @childCategory = childCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkType
#   linkID - SOAP::SOAPInt
#   order - SOAP::SOAPInt
#   linkType - StoreCustomListingHeaderLinkCodeType
class StoreCustomListingHeaderLinkType
  attr_accessor :linkID
  attr_accessor :order
  attr_accessor :linkType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(linkID = nil, order = nil, linkType = nil)
    @linkID = linkID
    @order = order
    @linkType = linkType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderType
#   displayType - StoreCustomListingHeaderDisplayCodeType
#   logo - SOAP::SOAPBoolean
#   searchBox - SOAP::SOAPBoolean
#   linkToInclude - StoreCustomListingHeaderLinkType
#   addToFavoriteStores - SOAP::SOAPBoolean
#   signUpForStoreNewsletter - SOAP::SOAPBoolean
class StoreCustomListingHeaderType
  attr_accessor :displayType
  attr_accessor :logo
  attr_accessor :searchBox
  attr_accessor :linkToInclude
  attr_accessor :addToFavoriteStores
  attr_accessor :signUpForStoreNewsletter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, logo = nil, searchBox = nil, linkToInclude = [], addToFavoriteStores = nil, signUpForStoreNewsletter = nil)
    @displayType = displayType
    @logo = logo
    @searchBox = searchBox
    @linkToInclude = linkToInclude
    @addToFavoriteStores = addToFavoriteStores
    @signUpForStoreNewsletter = signUpForStoreNewsletter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageArrayType
class StoreCustomPageArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageType
#   name - SOAP::SOAPString
#   pageID - SOAP::SOAPLong
#   uRLPath - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
#   status - StoreCustomPageStatusCodeType
#   content - SOAP::SOAPString
#   leftNav - SOAP::SOAPBoolean
#   previewEnabled - SOAP::SOAPBoolean
#   order - SOAP::SOAPInt
class StoreCustomPageType
  attr_accessor :name
  attr_accessor :pageID
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :status
  attr_accessor :content
  attr_accessor :leftNav
  attr_accessor :previewEnabled
  attr_accessor :order
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, pageID = nil, uRLPath = nil, uRL = nil, status = nil, content = nil, leftNav = nil, previewEnabled = nil, order = nil)
    @name = name
    @pageID = pageID
    @uRLPath = uRLPath
    @uRL = uRL
    @status = status
    @content = content
    @leftNav = leftNav
    @previewEnabled = previewEnabled
    @order = order
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontType
#   nameFace - StoreFontFaceCodeType
#   nameSize - StoreFontSizeCodeType
#   nameColor - SOAP::SOAPString
#   titleFace - StoreFontFaceCodeType
#   titleSize - StoreFontSizeCodeType
#   titleColor - SOAP::SOAPString
#   descFace - StoreFontFaceCodeType
#   descSize - StoreFontSizeCodeType
#   descColor - SOAP::SOAPString
class StoreFontType
  attr_accessor :nameFace
  attr_accessor :nameSize
  attr_accessor :nameColor
  attr_accessor :titleFace
  attr_accessor :titleSize
  attr_accessor :titleColor
  attr_accessor :descFace
  attr_accessor :descSize
  attr_accessor :descColor
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(nameFace = nil, nameSize = nil, nameColor = nil, titleFace = nil, titleSize = nil, titleColor = nil, descFace = nil, descSize = nil, descColor = nil)
    @nameFace = nameFace
    @nameSize = nameSize
    @nameColor = nameColor
    @titleFace = titleFace
    @titleSize = titleSize
    @titleColor = titleColor
    @descFace = descFace
    @descSize = descSize
    @descColor = descColor
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreInventoryEnabledDefinitionType
class StoreInventoryEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoArrayType
class StoreLogoArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoType
#   logoID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
class StoreLogoType
  attr_accessor :logoID
  attr_accessor :name
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(logoID = nil, name = nil, uRL = nil)
    @logoID = logoID
    @name = name
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreOwnerExtendedListingDurationsDefinitionType
class StoreOwnerExtendedListingDurationsDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreOwnerExtendedListingDurationsEnabledDefinitionType
class StoreOwnerExtendedListingDurationsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreOwnerExtendedListingDurationsType
#   duration - SOAP::SOAPToken
class StoreOwnerExtendedListingDurationsType
  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorePreferencesType
#   vacationPreferences - StoreVacationPreferencesType
class StorePreferencesType
  attr_accessor :vacationPreferences

  def initialize(vacationPreferences = nil)
    @vacationPreferences = vacationPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionArrayType
class StoreSubscriptionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionType
#   level - StoreSubscriptionLevelCodeType
#   fee - AmountType
class StoreSubscriptionType
  attr_accessor :level
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(level = nil, fee = nil)
    @level = level
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeArrayType
#   theme - StoreThemeType
#   genericColorSchemeArray - StoreColorSchemeArrayType
class StoreThemeArrayType
  attr_accessor :theme
  attr_accessor :genericColorSchemeArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(theme = [], genericColorSchemeArray = nil)
    @theme = theme
    @genericColorSchemeArray = genericColorSchemeArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeType
#   themeID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   colorScheme - StoreColorSchemeType
class StoreThemeType
  attr_accessor :themeID
  attr_accessor :name
  attr_accessor :colorScheme
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(themeID = nil, name = nil, colorScheme = nil)
    @themeID = themeID
    @name = name
    @colorScheme = colorScheme
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreType
#   name - SOAP::SOAPString
#   uRLPath - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
#   subscriptionLevel - StoreSubscriptionLevelCodeType
#   description - SOAP::SOAPString
#   logo - StoreLogoType
#   theme - StoreThemeType
#   headerStyle - StoreHeaderStyleCodeType
#   homePage - SOAP::SOAPLong
#   itemListLayout - StoreItemListLayoutCodeType
#   itemListSortOrder - StoreItemListSortOrderCodeType
#   customHeaderLayout - StoreCustomHeaderLayoutCodeType
#   customHeader - SOAP::SOAPString
#   exportListings - SOAP::SOAPBoolean
#   customCategories - StoreCustomCategoryArrayType
#   customListingHeader - StoreCustomListingHeaderType
#   merchDisplay - MerchDisplayCodeType
#   lastOpenedTime - SOAP::SOAPDateTime
class StoreType
  attr_accessor :name
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :subscriptionLevel
  attr_accessor :description
  attr_accessor :logo
  attr_accessor :theme
  attr_accessor :headerStyle
  attr_accessor :homePage
  attr_accessor :itemListLayout
  attr_accessor :itemListSortOrder
  attr_accessor :customHeaderLayout
  attr_accessor :customHeader
  attr_accessor :exportListings
  attr_accessor :customCategories
  attr_accessor :customListingHeader
  attr_accessor :merchDisplay
  attr_accessor :lastOpenedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRLPath = nil, uRL = nil, subscriptionLevel = nil, description = nil, logo = nil, theme = nil, headerStyle = nil, homePage = nil, itemListLayout = nil, itemListSortOrder = nil, customHeaderLayout = nil, customHeader = nil, exportListings = nil, customCategories = nil, customListingHeader = nil, merchDisplay = nil, lastOpenedTime = nil)
    @name = name
    @uRLPath = uRLPath
    @uRL = uRL
    @subscriptionLevel = subscriptionLevel
    @description = description
    @logo = logo
    @theme = theme
    @headerStyle = headerStyle
    @homePage = homePage
    @itemListLayout = itemListLayout
    @itemListSortOrder = itemListSortOrder
    @customHeaderLayout = customHeaderLayout
    @customHeader = customHeader
    @exportListings = exportListings
    @customCategories = customCategories
    @customListingHeader = customListingHeader
    @merchDisplay = merchDisplay
    @lastOpenedTime = lastOpenedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreVacationPreferencesType
#   onVacation - SOAP::SOAPBoolean
#   returnDate - SOAP::SOAPDateTime
#   hideFixedPriceStoreItems - SOAP::SOAPBoolean
#   messageItem - SOAP::SOAPBoolean
#   messageStore - SOAP::SOAPBoolean
#   displayMessageStoreCustomText - SOAP::SOAPBoolean
#   messageStoreCustomText - SOAP::SOAPString
class StoreVacationPreferencesType
  attr_accessor :onVacation
  attr_accessor :returnDate
  attr_accessor :hideFixedPriceStoreItems
  attr_accessor :messageItem
  attr_accessor :messageStore
  attr_accessor :displayMessageStoreCustomText
  attr_accessor :messageStoreCustomText

  def initialize(onVacation = nil, returnDate = nil, hideFixedPriceStoreItems = nil, messageItem = nil, messageStore = nil, displayMessageStoreCustomText = nil, messageStoreCustomText = nil)
    @onVacation = onVacation
    @returnDate = returnDate
    @hideFixedPriceStoreItems = hideFixedPriceStoreItems
    @messageItem = messageItem
    @messageStore = messageStore
    @displayMessageStoreCustomText = displayMessageStoreCustomText
    @messageStoreCustomText = messageStoreCustomText
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorefrontType
#   storeCategoryID - SOAP::SOAPLong
#   storeCategory2ID - SOAP::SOAPLong
#   storeURL - SOAP::SOAPAnyURI
#   storeName - SOAP::SOAPString
class StorefrontType
  attr_accessor :storeCategoryID
  attr_accessor :storeCategory2ID
  attr_accessor :storeURL
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeCategoryID = nil, storeCategory2ID = nil, storeURL = nil, storeName = nil)
    @storeCategoryID = storeCategoryID
    @storeCategory2ID = storeCategory2ID
    @storeURL = storeURL
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SubscriptionType
#   eIASToken - SOAP::SOAPString
#   siteID - SiteCodeType
#   active - SOAP::SOAPBoolean
class SubscriptionType
  attr_accessor :eIASToken
  attr_accessor :siteID
  attr_accessor :active
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eIASToken = nil, siteID = nil, active = nil)
    @eIASToken = eIASToken
    @siteID = siteID
    @active = active
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryArrayType
#   suggestedCategory - SuggestedCategoryType
class SuggestedCategoryArrayType
  attr_accessor :suggestedCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(suggestedCategory = [])
    @suggestedCategory = suggestedCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryType
#   category - CategoryType
#   percentItemFound - SOAP::SOAPInt
class SuggestedCategoryType
  attr_accessor :category
  attr_accessor :percentItemFound
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(category = nil, percentItemFound = nil)
    @category = category
    @percentItemFound = percentItemFound
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SummaryEventScheduleType
#   eventType - NotificationEventTypeCodeType
#   summaryPeriod - SummaryWindowPeriodCodeType
#   frequency - SummaryFrequencyCodeType
class SummaryEventScheduleType
  attr_accessor :eventType
  attr_accessor :summaryPeriod
  attr_accessor :frequency
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, summaryPeriod = nil, frequency = nil)
    @eventType = eventType
    @summaryPeriod = summaryPeriod
    @frequency = frequency
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SupportedEventTypesArrayType
class SupportedEventTypesArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}TCREnabledDefinitionType
class TCREnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxJurisdictionType
#   jurisdictionID - SOAP::SOAPString
#   salesTaxPercent - SOAP::SOAPFloat
#   shippingIncludedInTax - SOAP::SOAPBoolean
#   jurisdictionName - SOAP::SOAPString
class TaxJurisdictionType
  attr_accessor :jurisdictionID
  attr_accessor :salesTaxPercent
  attr_accessor :shippingIncludedInTax
  attr_accessor :jurisdictionName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(jurisdictionID = nil, salesTaxPercent = nil, shippingIncludedInTax = nil, jurisdictionName = nil)
    @jurisdictionID = jurisdictionID
    @salesTaxPercent = salesTaxPercent
    @shippingIncludedInTax = shippingIncludedInTax
    @jurisdictionName = jurisdictionName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxTableType
class TaxTableType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ThemeGroupType
#   groupID - SOAP::SOAPInt
#   groupName - SOAP::SOAPString
#   themeID - SOAP::SOAPInt
#   themeTotal - SOAP::SOAPInt
class ThemeGroupType
  attr_accessor :groupID
  attr_accessor :groupName
  attr_accessor :themeID
  attr_accessor :themeTotal
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, groupName = nil, themeID = [], themeTotal = nil)
    @groupID = groupID
    @groupName = groupName
    @themeID = themeID
    @themeTotal = themeTotal
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TicketDetailsType
#   eventType - TicketEventTypeCodeType
#   eventDate - DateType
#   stateOrProvince - SOAP::SOAPString
#   cityName - SOAP::SOAPString
#   ticketQuantity - SOAP::SOAPInt
class TicketDetailsType
  attr_accessor :eventType
  attr_accessor :eventDate
  attr_accessor :stateOrProvince
  attr_accessor :cityName
  attr_accessor :ticketQuantity
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, eventDate = nil, stateOrProvince = nil, cityName = nil, ticketQuantity = nil)
    @eventType = eventType
    @eventDate = eventDate
    @stateOrProvince = stateOrProvince
    @cityName = cityName
    @ticketQuantity = ticketQuantity
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TimeZoneDetailsType
#   timeZoneID - SOAP::SOAPString
#   standardLabel - SOAP::SOAPString
#   standardOffset - SOAP::SOAPString
#   daylightSavingsLabel - SOAP::SOAPString
#   daylightSavingsOffset - SOAP::SOAPString
#   daylightSavingsInEffect - SOAP::SOAPBoolean
class TimeZoneDetailsType
  attr_accessor :timeZoneID
  attr_accessor :standardLabel
  attr_accessor :standardOffset
  attr_accessor :daylightSavingsLabel
  attr_accessor :daylightSavingsOffset
  attr_accessor :daylightSavingsInEffect
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timeZoneID = nil, standardLabel = nil, standardOffset = nil, daylightSavingsLabel = nil, daylightSavingsOffset = nil, daylightSavingsInEffect = nil)
    @timeZoneID = timeZoneID
    @standardLabel = standardLabel
    @standardOffset = standardOffset
    @daylightSavingsLabel = daylightSavingsLabel
    @daylightSavingsOffset = daylightSavingsOffset
    @daylightSavingsInEffect = daylightSavingsInEffect
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TokenStatusType
#   status - TokenStatusCodeType
#   eIASToken - SOAP::SOAPString
#   expirationTime - SOAP::SOAPDateTime
#   revocationTime - SOAP::SOAPDateTime
class TokenStatusType
  attr_accessor :status
  attr_accessor :eIASToken
  attr_accessor :expirationTime
  attr_accessor :revocationTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, eIASToken = nil, expirationTime = nil, revocationTime = nil)
    @status = status
    @eIASToken = eIASToken
    @expirationTime = expirationTime
    @revocationTime = revocationTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionArrayType
class TransactionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}TransactionStatusType
#   eBayPaymentStatus - PaymentStatusCodeType
#   checkoutStatus - CheckoutStatusCodeType
#   lastTimeModified - SOAP::SOAPDateTime
#   paymentMethodUsed - BuyerPaymentMethodCodeType
#   completeStatus - CompleteStatusCodeType
#   buyerSelectedShipping - SOAP::SOAPBoolean
#   paymentHoldStatus - PaymentHoldStatusCodeType
class TransactionStatusType
  attr_accessor :eBayPaymentStatus
  attr_accessor :checkoutStatus
  attr_accessor :lastTimeModified
  attr_accessor :paymentMethodUsed
  attr_accessor :completeStatus
  attr_accessor :buyerSelectedShipping
  attr_accessor :paymentHoldStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, checkoutStatus = nil, lastTimeModified = nil, paymentMethodUsed = nil, completeStatus = nil, buyerSelectedShipping = nil, paymentHoldStatus = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @checkoutStatus = checkoutStatus
    @lastTimeModified = lastTimeModified
    @paymentMethodUsed = paymentMethodUsed
    @completeStatus = completeStatus
    @buyerSelectedShipping = buyerSelectedShipping
    @paymentHoldStatus = paymentHoldStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionType
#   amountPaid - AmountType
#   adjustmentAmount - AmountType
#   convertedAdjustmentAmount - AmountType
#   buyer - UserType
#   shippingDetails - ShippingDetailsType
#   convertedAmountPaid - AmountType
#   convertedTransactionPrice - AmountType
#   createdDate - SOAP::SOAPDateTime
#   depositType - DepositTypeCodeType
#   item - ItemType
#   quantityPurchased - SOAP::SOAPInt
#   status - TransactionStatusType
#   transactionID - SOAP::SOAPString
#   transactionPrice - AmountType
#   bestOfferSale - SOAP::SOAPBoolean
#   vATPercent - SOAP::SOAPDecimal
#   externalTransaction - ExternalTransactionType
#   sellingManagerProductDetails - SellingManagerProductDetailsType
#   shippingServiceSelected - ShippingServiceOptionsType
#   buyerMessage - SOAP::SOAPString
#   dutchAuctionBid - AmountType
#   buyerPaidStatus - PaidStatusCodeType
#   sellerPaidStatus - PaidStatusCodeType
#   paidTime - SOAP::SOAPDateTime
#   shippedTime - SOAP::SOAPDateTime
#   totalPrice - AmountType
#   feedbackLeft - FeedbackInfoType
#   feedbackReceived - FeedbackInfoType
#   containingOrder - OrderType
#   finalValueFee - AmountType
#   transactionPlatform - TransactionPlatformCodeType
#   listingCheckoutRedirectPreference - ListingCheckoutRedirectPreferenceType
#   refundArray - RefundArrayType
#   transactionSiteID - SiteCodeType
#   platform - TransactionPlatformCodeType
#   cartID - SOAP::SOAPString
#   sellerContactBuyerByEmail - SOAP::SOAPBoolean
#   payPalEmailAddress - SOAP::SOAPString
#   paisaPayID - SOAP::SOAPString
#   buyerGuaranteePrice - AmountType
class TransactionType
  attr_accessor :amountPaid
  attr_accessor :adjustmentAmount
  attr_accessor :convertedAdjustmentAmount
  attr_accessor :buyer
  attr_accessor :shippingDetails
  attr_accessor :convertedAmountPaid
  attr_accessor :convertedTransactionPrice
  attr_accessor :createdDate
  attr_accessor :depositType
  attr_accessor :item
  attr_accessor :quantityPurchased
  attr_accessor :status
  attr_accessor :transactionID
  attr_accessor :transactionPrice
  attr_accessor :bestOfferSale
  attr_accessor :vATPercent
  attr_accessor :externalTransaction
  attr_accessor :sellingManagerProductDetails
  attr_accessor :shippingServiceSelected
  attr_accessor :buyerMessage
  attr_accessor :dutchAuctionBid
  attr_accessor :buyerPaidStatus
  attr_accessor :sellerPaidStatus
  attr_accessor :paidTime
  attr_accessor :shippedTime
  attr_accessor :totalPrice
  attr_accessor :feedbackLeft
  attr_accessor :feedbackReceived
  attr_accessor :containingOrder
  attr_accessor :finalValueFee
  attr_accessor :transactionPlatform
  attr_accessor :listingCheckoutRedirectPreference
  attr_accessor :refundArray
  attr_accessor :transactionSiteID
  attr_accessor :platform
  attr_accessor :cartID
  attr_accessor :sellerContactBuyerByEmail
  attr_accessor :payPalEmailAddress
  attr_accessor :paisaPayID
  attr_accessor :buyerGuaranteePrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPaid = nil, adjustmentAmount = nil, convertedAdjustmentAmount = nil, buyer = nil, shippingDetails = nil, convertedAmountPaid = nil, convertedTransactionPrice = nil, createdDate = nil, depositType = nil, item = nil, quantityPurchased = nil, status = nil, transactionID = nil, transactionPrice = nil, bestOfferSale = nil, vATPercent = nil, externalTransaction = [], sellingManagerProductDetails = nil, shippingServiceSelected = nil, buyerMessage = nil, dutchAuctionBid = nil, buyerPaidStatus = nil, sellerPaidStatus = nil, paidTime = nil, shippedTime = nil, totalPrice = nil, feedbackLeft = nil, feedbackReceived = nil, containingOrder = nil, finalValueFee = nil, transactionPlatform = nil, listingCheckoutRedirectPreference = nil, refundArray = nil, transactionSiteID = nil, platform = nil, cartID = nil, sellerContactBuyerByEmail = nil, payPalEmailAddress = nil, paisaPayID = nil, buyerGuaranteePrice = nil)
    @amountPaid = amountPaid
    @adjustmentAmount = adjustmentAmount
    @convertedAdjustmentAmount = convertedAdjustmentAmount
    @buyer = buyer
    @shippingDetails = shippingDetails
    @convertedAmountPaid = convertedAmountPaid
    @convertedTransactionPrice = convertedTransactionPrice
    @createdDate = createdDate
    @depositType = depositType
    @item = item
    @quantityPurchased = quantityPurchased
    @status = status
    @transactionID = transactionID
    @transactionPrice = transactionPrice
    @bestOfferSale = bestOfferSale
    @vATPercent = vATPercent
    @externalTransaction = externalTransaction
    @sellingManagerProductDetails = sellingManagerProductDetails
    @shippingServiceSelected = shippingServiceSelected
    @buyerMessage = buyerMessage
    @dutchAuctionBid = dutchAuctionBid
    @buyerPaidStatus = buyerPaidStatus
    @sellerPaidStatus = sellerPaidStatus
    @paidTime = paidTime
    @shippedTime = shippedTime
    @totalPrice = totalPrice
    @feedbackLeft = feedbackLeft
    @feedbackReceived = feedbackReceived
    @containingOrder = containingOrder
    @finalValueFee = finalValueFee
    @transactionPlatform = transactionPlatform
    @listingCheckoutRedirectPreference = listingCheckoutRedirectPreference
    @refundArray = refundArray
    @transactionSiteID = transactionSiteID
    @platform = platform
    @cartID = cartID
    @sellerContactBuyerByEmail = sellerContactBuyerByEmail
    @payPalEmailAddress = payPalEmailAddress
    @paisaPayID = paisaPayID
    @buyerGuaranteePrice = buyerGuaranteePrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}URLDetailsType
#   uRLType - URLTypeCodeType
#   uRL - SOAP::SOAPAnyURI
class URLDetailsType
  attr_accessor :uRLType
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(uRLType = nil, uRL = nil)
    @uRLType = uRLType
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnitOfMeasurementDetailsType
#   unitOfMeasurement - UnitOfMeasurementType
class UnitOfMeasurementDetailsType
  attr_accessor :unitOfMeasurement
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unitOfMeasurement = [])
    @unitOfMeasurement = unitOfMeasurement
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnitOfMeasurementType
#   alternateText - SOAP::SOAPString
#   suggestedText - SOAP::SOAPString
class UnitOfMeasurementType
  attr_accessor :alternateText
  attr_accessor :suggestedText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alternateText = [], suggestedText = nil)
    @alternateText = alternateText
    @suggestedText = suggestedText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserConsentRequiredDefinitionType
class UserConsentRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIDArrayType
#   userID - (any)
class UserIDArrayType
  attr_accessor :userID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = [])
    @userID = userID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdFilterType
#   excludeSellers - (any)
#   includeSellers - (any)
class UserIdFilterType
  attr_accessor :excludeSellers
  attr_accessor :includeSellers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(excludeSellers = [], includeSellers = [])
    @excludeSellers = excludeSellers
    @includeSellers = includeSellers
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserType
#   aboutMePage - SOAP::SOAPBoolean
#   eIASToken - SOAP::SOAPString
#   rESTToken - SOAP::SOAPString
#   email - SOAP::SOAPString
#   feedbackScore - SOAP::SOAPInt
#   uniqueNegativeFeedbackCount - SOAP::SOAPInt
#   uniquePositiveFeedbackCount - SOAP::SOAPInt
#   positiveFeedbackPercent - SOAP::SOAPFloat
#   feedbackPrivate - SOAP::SOAPBoolean
#   feedbackRatingStar - FeedbackRatingStarCodeType
#   iDVerified - SOAP::SOAPBoolean
#   eBayGoodStanding - SOAP::SOAPBoolean
#   newUser - SOAP::SOAPBoolean
#   registrationAddress - AddressType
#   registrationDate - SOAP::SOAPDateTime
#   site - SiteCodeType
#   status - UserStatusCodeType
#   userID - (any)
#   userIDChanged - SOAP::SOAPBoolean
#   userIDLastChanged - SOAP::SOAPDateTime
#   vATStatus - VATStatusCodeType
#   buyerInfo - BuyerType
#   sellerInfo - SellerType
#   charityAffiliations - CharityAffiliationsType
#   payPalAccountLevel - PayPalAccountLevelCodeType
#   payPalAccountType - PayPalAccountTypeCodeType
#   payPalAccountStatus - PayPalAccountStatusCodeType
#   userSubscription - EBaySubscriptionTypeCodeType
#   siteVerified - SOAP::SOAPBoolean
#   skypeID - SOAP::SOAPString
#   eBayWikiReadOnly - SOAP::SOAPBoolean
#   tUVLevel - SOAP::SOAPInt
#   vATID - SOAP::SOAPString
#   motorsDealer - SOAP::SOAPBoolean
#   sellerPaymentMethod - SellerPaymentMethodCodeType
#   biddingSummary - BiddingSummaryType
#   userAnonymized - SOAP::SOAPBoolean
#   uniqueNeutralFeedbackCount - SOAP::SOAPInt
#   enterpriseSeller - SOAP::SOAPBoolean
class UserType
  attr_accessor :aboutMePage
  attr_accessor :eIASToken
  attr_accessor :rESTToken
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :positiveFeedbackPercent
  attr_accessor :feedbackPrivate
  attr_accessor :feedbackRatingStar
  attr_accessor :iDVerified
  attr_accessor :eBayGoodStanding
  attr_accessor :newUser
  attr_accessor :registrationAddress
  attr_accessor :registrationDate
  attr_accessor :site
  attr_accessor :status
  attr_accessor :userID
  attr_accessor :userIDChanged
  attr_accessor :userIDLastChanged
  attr_accessor :vATStatus
  attr_accessor :buyerInfo
  attr_accessor :sellerInfo
  attr_accessor :charityAffiliations
  attr_accessor :payPalAccountLevel
  attr_accessor :payPalAccountType
  attr_accessor :payPalAccountStatus
  attr_accessor :userSubscription
  attr_accessor :siteVerified
  attr_accessor :skypeID
  attr_accessor :eBayWikiReadOnly
  attr_accessor :tUVLevel
  attr_accessor :vATID
  attr_accessor :motorsDealer
  attr_accessor :sellerPaymentMethod
  attr_accessor :biddingSummary
  attr_accessor :userAnonymized
  attr_accessor :uniqueNeutralFeedbackCount
  attr_accessor :enterpriseSeller
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(aboutMePage = nil, eIASToken = nil, rESTToken = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, positiveFeedbackPercent = nil, feedbackPrivate = nil, feedbackRatingStar = nil, iDVerified = nil, eBayGoodStanding = nil, newUser = nil, registrationAddress = nil, registrationDate = nil, site = nil, status = nil, userID = nil, userIDChanged = nil, userIDLastChanged = nil, vATStatus = nil, buyerInfo = nil, sellerInfo = nil, charityAffiliations = nil, payPalAccountLevel = nil, payPalAccountType = nil, payPalAccountStatus = nil, userSubscription = [], siteVerified = nil, skypeID = [], eBayWikiReadOnly = nil, tUVLevel = nil, vATID = nil, motorsDealer = nil, sellerPaymentMethod = nil, biddingSummary = nil, userAnonymized = nil, uniqueNeutralFeedbackCount = nil, enterpriseSeller = nil)
    @aboutMePage = aboutMePage
    @eIASToken = eIASToken
    @rESTToken = rESTToken
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @positiveFeedbackPercent = positiveFeedbackPercent
    @feedbackPrivate = feedbackPrivate
    @feedbackRatingStar = feedbackRatingStar
    @iDVerified = iDVerified
    @eBayGoodStanding = eBayGoodStanding
    @newUser = newUser
    @registrationAddress = registrationAddress
    @registrationDate = registrationDate
    @site = site
    @status = status
    @userID = userID
    @userIDChanged = userIDChanged
    @userIDLastChanged = userIDLastChanged
    @vATStatus = vATStatus
    @buyerInfo = buyerInfo
    @sellerInfo = sellerInfo
    @charityAffiliations = charityAffiliations
    @payPalAccountLevel = payPalAccountLevel
    @payPalAccountType = payPalAccountType
    @payPalAccountStatus = payPalAccountStatus
    @userSubscription = userSubscription
    @siteVerified = siteVerified
    @skypeID = skypeID
    @eBayWikiReadOnly = eBayWikiReadOnly
    @tUVLevel = tUVLevel
    @vATID = vATID
    @motorsDealer = motorsDealer
    @sellerPaymentMethod = sellerPaymentMethod
    @biddingSummary = biddingSummary
    @userAnonymized = userAnonymized
    @uniqueNeutralFeedbackCount = uniqueNeutralFeedbackCount
    @enterpriseSeller = enterpriseSeller
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VATDetailsType
#   businessSeller - SOAP::SOAPBoolean
#   restrictedToBusiness - SOAP::SOAPBoolean
#   vATPercent - SOAP::SOAPFloat
#   vATSite - SOAP::SOAPString
#   vATID - SOAP::SOAPString
class VATDetailsType
  attr_accessor :businessSeller
  attr_accessor :restrictedToBusiness
  attr_accessor :vATPercent
  attr_accessor :vATSite
  attr_accessor :vATID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(businessSeller = nil, restrictedToBusiness = nil, vATPercent = nil, vATSite = nil, vATID = nil)
    @businessSeller = businessSeller
    @restrictedToBusiness = restrictedToBusiness
    @vATPercent = vATPercent
    @vATSite = vATSite
    @vATID = vATID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValType
#   valueLiteral - SOAP::SOAPString
#   suggestedValueLiteral - SOAP::SOAPString
#   valueID - SOAP::SOAPInt
class ValType
  attr_accessor :valueLiteral
  attr_accessor :suggestedValueLiteral
  attr_accessor :valueID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(valueLiteral = nil, suggestedValueLiteral = [], valueID = nil)
    @valueLiteral = valueLiteral
    @suggestedValueLiteral = suggestedValueLiteral
    @valueID = valueID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValuePackEnabledDefinitionType
class ValuePackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReasonCodeDetailsType
class VeROReasonCodeDetailsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemType
#   itemID - (any)
#   veROReasonCodeID - SOAP::SOAPLong
#   messageToSeller - SOAP::SOAPString
#   copyEmailToRightsOwner - SOAP::SOAPBoolean
class VeROReportItemType
  attr_accessor :itemID
  attr_accessor :veROReasonCodeID
  attr_accessor :messageToSeller
  attr_accessor :copyEmailToRightsOwner
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, veROReasonCodeID = nil, messageToSeller = nil, copyEmailToRightsOwner = nil)
    @itemID = itemID
    @veROReasonCodeID = veROReasonCodeID
    @messageToSeller = messageToSeller
    @copyEmailToRightsOwner = copyEmailToRightsOwner
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemsType
class VeROReportItemsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportedItemDetailsType
class VeROReportedItemDetailsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportedItemType
#   itemID - (any)
#   itemStatus - VeROItemStatusCodeType
#   itemReasonForFailure - SOAP::SOAPString
class VeROReportedItemType
  attr_accessor :itemID
  attr_accessor :itemStatus
  attr_accessor :itemReasonForFailure
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, itemStatus = nil, itemReasonForFailure = nil)
    @itemID = itemID
    @itemStatus = itemStatus
    @itemReasonForFailure = itemReasonForFailure
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROSiteDetailType
#   site - SiteCodeType
#   reasonCodeDetail - ReasonCodeDetailType
class VeROSiteDetailType
  attr_accessor :site
  attr_accessor :reasonCodeDetail
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, reasonCodeDetail = [])
    @site = site
    @reasonCodeDetail = reasonCodeDetail
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifiedUserRequirementsType
#   verifiedUser - SOAP::SOAPBoolean
#   minimumFeedbackScore - SOAP::SOAPInt
class VerifiedUserRequirementsType
  attr_accessor :verifiedUser
  attr_accessor :minimumFeedbackScore

  def initialize(verifiedUser = nil, minimumFeedbackScore = nil)
    @verifiedUser = verifiedUser
    @minimumFeedbackScore = minimumFeedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostArrayType
class WantItNowPostArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostType
#   categoryID - SOAP::SOAPString
#   description - SOAP::SOAPString
#   postID - (any)
#   site - SiteCodeType
#   startTime - SOAP::SOAPDateTime
#   responseCount - SOAP::SOAPInt
#   title - SOAP::SOAPString
class WantItNowPostType
  attr_accessor :categoryID
  attr_accessor :description
  attr_accessor :postID
  attr_accessor :site
  attr_accessor :startTime
  attr_accessor :responseCount
  attr_accessor :title

  def initialize(categoryID = nil, description = nil, postID = nil, site = nil, startTime = nil, responseCount = nil, title = nil)
    @categoryID = categoryID
    @description = description
    @postID = postID
    @site = site
    @startTime = startTime
    @responseCount = responseCount
    @title = title
  end
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyDurationDetailsType
#   warrantyDurationOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class WarrantyDurationDetailsType
  attr_accessor :warrantyDurationOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(warrantyDurationOption = nil, description = nil)
    @warrantyDurationOption = warrantyDurationOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyOfferedDetailsType
#   warrantyOfferedOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class WarrantyOfferedDetailsType
  attr_accessor :warrantyOfferedOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(warrantyOfferedOption = nil, description = nil)
    @warrantyOfferedOption = warrantyOfferedOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyTypeDetailsType
#   warrantyTypeOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class WarrantyTypeDetailsType
  attr_accessor :warrantyTypeOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(warrantyTypeOption = nil, description = nil)
    @warrantyTypeOption = warrantyTypeOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}WishListEntryType
#   item - ItemType
#   product - ExpressProductType
#   notes - SOAP::SOAPString
#   creationDate - SOAP::SOAPDateTime
#   quantityWanted - SOAP::SOAPInt
#   quantityReceived - SOAP::SOAPInt
class WishListEntryType
  attr_accessor :item
  attr_accessor :product
  attr_accessor :notes
  attr_accessor :creationDate
  attr_accessor :quantityWanted
  attr_accessor :quantityReceived
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, product = nil, notes = nil, creationDate = nil, quantityWanted = nil, quantityReceived = nil)
    @item = item
    @product = product
    @notes = notes
    @creationDate = creationDate
    @quantityWanted = quantityWanted
    @quantityReceived = quantityReceived
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}XSLFileType
#   fileName - SOAP::SOAPString
#   fileVersion - SOAP::SOAPString
#   fileContent - SOAP::SOAPString
class XSLFileType
  attr_accessor :fileName
  attr_accessor :fileVersion
  attr_accessor :fileContent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(fileName = nil, fileVersion = nil, fileContent = nil)
    @fileName = fileName
    @fileVersion = fileVersion
    @fileContent = fileContent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProAdFormatEnabledDefinitionType
class EBayMotorsProAdFormatEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProAutoAcceptEnabledDefinitionType
class EBayMotorsProAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProAutoDeclineEnabledDefinitionType
class EBayMotorsProAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProBestOfferEnabledDefinitionType
class EBayMotorsProBestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProCompanyNameEnabledDefinitionType
class EBayMotorsProCompanyNameEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProContactByAddressEnabledDefinitionType
class EBayMotorsProContactByAddressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProContactByEmailEnabledDefinitionType
class EBayMotorsProContactByEmailEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProContactByPhoneEnabledDefinitionType
class EBayMotorsProContactByPhoneEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProCounterOfferEnabledDefinitionType
class EBayMotorsProCounterOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProPaymentMethodCheckOutEnabledDefinitionType
class EBayMotorsProPaymentMethodCheckOutEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProPhoneCountDefinitionType
class EBayMotorsProPhoneCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProSellerContactDetailsEnabledDefinitionType
class EBayMotorsProSellerContactDetailsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProShippingMethodEnabledDefinitionType
class EBayMotorsProShippingMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProStreetCountDefinitionType
class EBayMotorsProStreetCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AckCodeType
class AckCodeType < ::String
  CustomCode = AckCodeType.new("CustomCode")
  Failure = AckCodeType.new("Failure")
  PartialFailure = AckCodeType.new("PartialFailure")
  Success = AckCodeType.new("Success")
  Warning = AckCodeType.new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPaymentMethodCodeType
class BuyerPaymentMethodCodeType < ::String
  Allpay = BuyerPaymentMethodCodeType.new("allpay")
  AmEx = BuyerPaymentMethodCodeType.new("AmEx")
  CCAccepted = BuyerPaymentMethodCodeType.new("CCAccepted")
  COD = BuyerPaymentMethodCodeType.new("COD")
  CODPrePayDelivery = BuyerPaymentMethodCodeType.new("CODPrePayDelivery")
  CashInPerson = BuyerPaymentMethodCodeType.new("CashInPerson")
  CashOnPickup = BuyerPaymentMethodCodeType.new("CashOnPickup")
  CustomCode = BuyerPaymentMethodCodeType.new("CustomCode")
  Discover = BuyerPaymentMethodCodeType.new("Discover")
  ELV = BuyerPaymentMethodCodeType.new("ELV")
  Escrow = BuyerPaymentMethodCodeType.new("Escrow")
  LoanCheck = BuyerPaymentMethodCodeType.new("LoanCheck")
  MOCC = BuyerPaymentMethodCodeType.new("MOCC")
  MoneyXferAccepted = BuyerPaymentMethodCodeType.new("MoneyXferAccepted")
  MoneyXferAcceptedInCheckout = BuyerPaymentMethodCodeType.new("MoneyXferAcceptedInCheckout")
  Moneybookers = BuyerPaymentMethodCodeType.new("Moneybookers")
  None = BuyerPaymentMethodCodeType.new("None")
  Other = BuyerPaymentMethodCodeType.new("Other")
  OtherOnlinePayments = BuyerPaymentMethodCodeType.new("OtherOnlinePayments")
  PaisaPayAccepted = BuyerPaymentMethodCodeType.new("PaisaPayAccepted")
  PaisaPayEscrow = BuyerPaymentMethodCodeType.new("PaisaPayEscrow")
  PaisaPayEscrowEMI = BuyerPaymentMethodCodeType.new("PaisaPayEscrowEMI")
  PayOnPickup = BuyerPaymentMethodCodeType.new("PayOnPickup")
  PayPal = BuyerPaymentMethodCodeType.new("PayPal")
  PaymentSeeDescription = BuyerPaymentMethodCodeType.new("PaymentSeeDescription")
  PersonalCheck = BuyerPaymentMethodCodeType.new("PersonalCheck")
  PostalTransfer = BuyerPaymentMethodCodeType.new("PostalTransfer")
  PrePayDelivery = BuyerPaymentMethodCodeType.new("PrePayDelivery")
  ProPay = BuyerPaymentMethodCodeType.new("ProPay")
  VisaMC = BuyerPaymentMethodCodeType.new("VisaMC")
end

# {urn:ebay:apis:eBLBaseComponents}DetailLevelCodeType
class DetailLevelCodeType < ::String
  ItemReturnAttributes = DetailLevelCodeType.new("ItemReturnAttributes")
  ItemReturnCategories = DetailLevelCodeType.new("ItemReturnCategories")
  ItemReturnDescription = DetailLevelCodeType.new("ItemReturnDescription")
  ReturnAll = DetailLevelCodeType.new("ReturnAll")
  ReturnHeaders = DetailLevelCodeType.new("ReturnHeaders")
  ReturnMessages = DetailLevelCodeType.new("ReturnMessages")
  ReturnSummary = DetailLevelCodeType.new("ReturnSummary")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeActivityCodeType
class DisputeActivityCodeType < ::String
  CameToAgreementNeedFVFCredit = DisputeActivityCodeType.new("CameToAgreementNeedFVFCredit")
  CustomCode = DisputeActivityCodeType.new("CustomCode")
  MutualAgreementOrNoBuyerResponse = DisputeActivityCodeType.new("MutualAgreementOrNoBuyerResponse")
  SellerAddInformation = DisputeActivityCodeType.new("SellerAddInformation")
  SellerComment = DisputeActivityCodeType.new("SellerComment")
  SellerCompletedTransaction = DisputeActivityCodeType.new("SellerCompletedTransaction")
  SellerEndCommunication = DisputeActivityCodeType.new("SellerEndCommunication")
  SellerOffersRefund = DisputeActivityCodeType.new("SellerOffersRefund")
  SellerPaymentNotReceived = DisputeActivityCodeType.new("SellerPaymentNotReceived")
  SellerShippedItem = DisputeActivityCodeType.new("SellerShippedItem")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeCreditEligibilityCodeType
class DisputeCreditEligibilityCodeType < ::String
  CustomCode = DisputeCreditEligibilityCodeType.new("CustomCode")
  Eligible = DisputeCreditEligibilityCodeType.new("Eligible")
  InEligible = DisputeCreditEligibilityCodeType.new("InEligible")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeExplanationCodeType
class DisputeExplanationCodeType < ::String
  BuyerHasNotResponded = DisputeExplanationCodeType.new("BuyerHasNotResponded")
  BuyerNoLongerRegistered = DisputeExplanationCodeType.new("BuyerNoLongerRegistered")
  BuyerNoLongerWantsItem = DisputeExplanationCodeType.new("BuyerNoLongerWantsItem")
  BuyerNotClearedToPay = DisputeExplanationCodeType.new("BuyerNotClearedToPay")
  BuyerPurchasingMistake = DisputeExplanationCodeType.new("BuyerPurchasingMistake")
  BuyerRefusedToPay = DisputeExplanationCodeType.new("BuyerRefusedToPay")
  BuyerReturnedItemForRefund = DisputeExplanationCodeType.new("BuyerReturnedItemForRefund")
  CustomCode = DisputeExplanationCodeType.new("CustomCode")
  OtherExplanation = DisputeExplanationCodeType.new("OtherExplanation")
  PaymentMethodNotSupported = DisputeExplanationCodeType.new("PaymentMethodNotSupported")
  ShipCountryNotSupported = DisputeExplanationCodeType.new("ShipCountryNotSupported")
  ShippingAddressNotConfirmed = DisputeExplanationCodeType.new("ShippingAddressNotConfirmed")
  UnableToResolveTerms = DisputeExplanationCodeType.new("UnableToResolveTerms")
  Unspecified = DisputeExplanationCodeType.new("Unspecified")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterTypeCodeType
class DisputeFilterTypeCodeType < ::String
  AllInvolvedClosedDisputes = DisputeFilterTypeCodeType.new("AllInvolvedClosedDisputes")
  AllInvolvedDisputes = DisputeFilterTypeCodeType.new("AllInvolvedDisputes")
  CustomCode = DisputeFilterTypeCodeType.new("CustomCode")
  DisputesAwaitingMyResponse = DisputeFilterTypeCodeType.new("DisputesAwaitingMyResponse")
  DisputesAwaitingOtherPartyResponse = DisputeFilterTypeCodeType.new("DisputesAwaitingOtherPartyResponse")
  EligibleForCredit = DisputeFilterTypeCodeType.new("EligibleForCredit")
  ItemNotReceivedDisputes = DisputeFilterTypeCodeType.new("ItemNotReceivedDisputes")
  UnpaidItemDisputes = DisputeFilterTypeCodeType.new("UnpaidItemDisputes")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageSourceCodeType
class DisputeMessageSourceCodeType < ::String
  Buyer = DisputeMessageSourceCodeType.new("Buyer")
  CustomCode = DisputeMessageSourceCodeType.new("CustomCode")
  EBay = DisputeMessageSourceCodeType.new("eBay")
  Seller = DisputeMessageSourceCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeReasonCodeType
class DisputeReasonCodeType < ::String
  BuyerHasNotPaid = DisputeReasonCodeType.new("BuyerHasNotPaid")
  CustomCode = DisputeReasonCodeType.new("CustomCode")
  ItemNotReceived = DisputeReasonCodeType.new("ItemNotReceived")
  NoRefund = DisputeReasonCodeType.new("NoRefund")
  ReturnPolicyUnpaidItem = DisputeReasonCodeType.new("ReturnPolicyUnpaidItem")
  SignificantlyNotAsDescribed = DisputeReasonCodeType.new("SignificantlyNotAsDescribed")
  TransactionMutuallyCanceled = DisputeReasonCodeType.new("TransactionMutuallyCanceled")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeRecordTypeCodeType
class DisputeRecordTypeCodeType < ::String
  CustomCode = DisputeRecordTypeCodeType.new("CustomCode")
  ItemNotReceived = DisputeRecordTypeCodeType.new("ItemNotReceived")
  UnpaidItem = DisputeRecordTypeCodeType.new("UnpaidItem")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionReasonCodeType
class DisputeResolutionReasonCodeType < ::String
  BuyerPaidAuctionFees = DisputeResolutionReasonCodeType.new("BuyerPaidAuctionFees")
  CameToAgreement = DisputeResolutionReasonCodeType.new("CameToAgreement")
  ClaimPaid = DisputeResolutionReasonCodeType.new("ClaimPaid")
  ComputerTechnicalProblem = DisputeResolutionReasonCodeType.new("ComputerTechnicalProblem")
  CustomCode = DisputeResolutionReasonCodeType.new("CustomCode")
  FamilyEmergency = DisputeResolutionReasonCodeType.new("FamilyEmergency")
  FirstInfraction = DisputeResolutionReasonCodeType.new("FirstInfraction")
  ItemReturned = DisputeResolutionReasonCodeType.new("ItemReturned")
  NoContact = DisputeResolutionReasonCodeType.new("NoContact")
  OtherResolution = DisputeResolutionReasonCodeType.new("OtherResolution")
  ProofGivenInFeedback = DisputeResolutionReasonCodeType.new("ProofGivenInFeedback")
  ProofOfPayment = DisputeResolutionReasonCodeType.new("ProofOfPayment")
  SellerReceivedPayment = DisputeResolutionReasonCodeType.new("SellerReceivedPayment")
  Unresolved = DisputeResolutionReasonCodeType.new("Unresolved")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionRecordTypeCodeType
class DisputeResolutionRecordTypeCodeType < ::String
  AppealBuyerStrike = DisputeResolutionRecordTypeCodeType.new("AppealBuyerStrike")
  CustomCode = DisputeResolutionRecordTypeCodeType.new("CustomCode")
  FVFCredit = DisputeResolutionRecordTypeCodeType.new("FVFCredit")
  FVFCreditNotGranted = DisputeResolutionRecordTypeCodeType.new("FVFCreditNotGranted")
  GenerateCSTicketForSuspend = DisputeResolutionRecordTypeCodeType.new("GenerateCSTicketForSuspend")
  InsertionFeeCredit = DisputeResolutionRecordTypeCodeType.new("InsertionFeeCredit")
  ItemNotReceivedClaimFiled = DisputeResolutionRecordTypeCodeType.new("ItemNotReceivedClaimFiled")
  ReverseFVFCredit = DisputeResolutionRecordTypeCodeType.new("ReverseFVFCredit")
  ReverseInsertionFeeCredit = DisputeResolutionRecordTypeCodeType.new("ReverseInsertionFeeCredit")
  StrikeBuyer = DisputeResolutionRecordTypeCodeType.new("StrikeBuyer")
  SuspendBuyer = DisputeResolutionRecordTypeCodeType.new("SuspendBuyer")
  UnsuspendBuyer = DisputeResolutionRecordTypeCodeType.new("UnsuspendBuyer")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeSortTypeCodeType
class DisputeSortTypeCodeType < ::String
  CustomCode = DisputeSortTypeCodeType.new("CustomCode")
  DisputeCreatedTimeAscending = DisputeSortTypeCodeType.new("DisputeCreatedTimeAscending")
  DisputeCreatedTimeDescending = DisputeSortTypeCodeType.new("DisputeCreatedTimeDescending")
  DisputeCreditEligibilityAscending = DisputeSortTypeCodeType.new("DisputeCreditEligibilityAscending")
  DisputeCreditEligibilityDescending = DisputeSortTypeCodeType.new("DisputeCreditEligibilityDescending")
  DisputeStatusAscending = DisputeSortTypeCodeType.new("DisputeStatusAscending")
  DisputeStatusDescending = DisputeSortTypeCodeType.new("DisputeStatusDescending")
  None = DisputeSortTypeCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStateCodeType
class DisputeStateCodeType < ::String
  BuyerFirstResponseNoPayOption = DisputeStateCodeType.new("BuyerFirstResponseNoPayOption")
  BuyerFirstResponseNoPayOptionLateResponse = DisputeStateCodeType.new("BuyerFirstResponseNoPayOptionLateResponse")
  BuyerFirstResponsePayOption = DisputeStateCodeType.new("BuyerFirstResponsePayOption")
  BuyerFirstResponsePayOptionLateResponse = DisputeStateCodeType.new("BuyerFirstResponsePayOptionLateResponse")
  ClaimClosed = DisputeStateCodeType.new("ClaimClosed")
  ClaimDenied = DisputeStateCodeType.new("ClaimDenied")
  ClaimOpened = DisputeStateCodeType.new("ClaimOpened")
  ClaimPaid = DisputeStateCodeType.new("ClaimPaid")
  ClaimPaymentPending = DisputeStateCodeType.new("ClaimPaymentPending")
  ClaimPending = DisputeStateCodeType.new("ClaimPending")
  ClaimResolved = DisputeStateCodeType.new("ClaimResolved")
  ClaimSubmitted = DisputeStateCodeType.new("ClaimSubmitted")
  Closed = DisputeStateCodeType.new("Closed")
  CustomCode = DisputeStateCodeType.new("CustomCode")
  Locked = DisputeStateCodeType.new("Locked")
  MutualAgreementOrBuyerReturningItem = DisputeStateCodeType.new("MutualAgreementOrBuyerReturningItem")
  MutualCommunicationNoPayOption = DisputeStateCodeType.new("MutualCommunicationNoPayOption")
  MutualCommunicationPayOption = DisputeStateCodeType.new("MutualCommunicationPayOption")
  MutualWithdrawalAgreement = DisputeStateCodeType.new("MutualWithdrawalAgreement")
  MutualWithdrawalAgreementLate = DisputeStateCodeType.new("MutualWithdrawalAgreementLate")
  NoDocumentation = DisputeStateCodeType.new("NoDocumentation")
  NotAsDescribedMutualCommunication = DisputeStateCodeType.new("NotAsDescribedMutualCommunication")
  NotAsDescribedNoSellerResponse = DisputeStateCodeType.new("NotAsDescribedNoSellerResponse")
  NotReceivedMutualCommunication = DisputeStateCodeType.new("NotReceivedMutualCommunication")
  NotReceivedNoSellerResponse = DisputeStateCodeType.new("NotReceivedNoSellerResponse")
  PendingResolve = DisputeStateCodeType.new("PendingResolve")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStatusCodeType
class DisputeStatusCodeType < ::String
  ClaimApproved = DisputeStatusCodeType.new("ClaimApproved")
  ClaimClosed = DisputeStatusCodeType.new("ClaimClosed")
  ClaimDenied = DisputeStatusCodeType.new("ClaimDenied")
  ClaimInProcess = DisputeStatusCodeType.new("ClaimInProcess")
  ClaimOpened = DisputeStatusCodeType.new("ClaimOpened")
  ClaimPaid = DisputeStatusCodeType.new("ClaimPaid")
  ClaimResolved = DisputeStatusCodeType.new("ClaimResolved")
  ClaimSubmitted = DisputeStatusCodeType.new("ClaimSubmitted")
  Closed = DisputeStatusCodeType.new("Closed")
  ClosedFVFCreditNoStrike = DisputeStatusCodeType.new("ClosedFVFCreditNoStrike")
  ClosedFVFCreditStrike = DisputeStatusCodeType.new("ClosedFVFCreditStrike")
  ClosedNoFVFCreditNoStrike = DisputeStatusCodeType.new("ClosedNoFVFCreditNoStrike")
  ClosedNoFVFCreditStrike = DisputeStatusCodeType.new("ClosedNoFVFCreditStrike")
  CustomCode = DisputeStatusCodeType.new("CustomCode")
  FVFCreditReversedAfterClosing = DisputeStatusCodeType.new("FVFCreditReversedAfterClosing")
  NoDocumentation = DisputeStatusCodeType.new("NoDocumentation")
  StrikeAppealedAfterClosing = DisputeStatusCodeType.new("StrikeAppealedAfterClosing")
  StrikeAppealedAndFVFCreditReversed = DisputeStatusCodeType.new("StrikeAppealedAndFVFCreditReversed")
  WaitingForBuyerResponse = DisputeStatusCodeType.new("WaitingForBuyerResponse")
  WaitingForSellerResponse = DisputeStatusCodeType.new("WaitingForSellerResponse")
end

# {urn:ebay:apis:eBLBaseComponents}ErrorClassificationCodeType
class ErrorClassificationCodeType < ::String
  CustomCode = ErrorClassificationCodeType.new("CustomCode")
  RequestError = ErrorClassificationCodeType.new("RequestError")
  SystemError = ErrorClassificationCodeType.new("SystemError")
end

# {urn:ebay:apis:eBLBaseComponents}ErrorHandlingCodeType
class ErrorHandlingCodeType < ::String
  AllOrNothing = ErrorHandlingCodeType.new("AllOrNothing")
  BestEffort = ErrorHandlingCodeType.new("BestEffort")
  FailOnError = ErrorHandlingCodeType.new("FailOnError")
  Legacy = ErrorHandlingCodeType.new("Legacy")
end

# {urn:ebay:apis:eBLBaseComponents}InvocationStatusType
class InvocationStatusType < ::String
  CustomCode = InvocationStatusType.new("CustomCode")
  Failure = InvocationStatusType.new("Failure")
  InProgress = InvocationStatusType.new("InProgress")
  Success = InvocationStatusType.new("Success")
end

# {urn:ebay:apis:eBLBaseComponents}MeasurementSystemCodeType
class MeasurementSystemCodeType < ::String
  English = MeasurementSystemCodeType.new("English")
  Metric = MeasurementSystemCodeType.new("Metric")
end

# {urn:ebay:apis:eBLBaseComponents}SeverityCodeType
class SeverityCodeType < ::String
  CustomCode = SeverityCodeType.new("CustomCode")
  Error = SeverityCodeType.new("Error")
  Warning = SeverityCodeType.new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}WarningLevelCodeType
class WarningLevelCodeType < ::String
  High = WarningLevelCodeType.new("High")
  Low = WarningLevelCodeType.new("Low")
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleCurrentStatusCodeType
class AccessRuleCurrentStatusCodeType < ::String
  CustomCode = AccessRuleCurrentStatusCodeType.new("CustomCode")
  DailyLimitExceeded = AccessRuleCurrentStatusCodeType.new("DailyLimitExceeded")
  DailySoftLimitExceeded = AccessRuleCurrentStatusCodeType.new("DailySoftLimitExceeded")
  HourlyLimitExceeded = AccessRuleCurrentStatusCodeType.new("HourlyLimitExceeded")
  HourlySoftLimitExceeded = AccessRuleCurrentStatusCodeType.new("HourlySoftLimitExceeded")
  NotSet = AccessRuleCurrentStatusCodeType.new("NotSet")
  PeriodicLimitExceeded = AccessRuleCurrentStatusCodeType.new("PeriodicLimitExceeded")
  PeriodicSoftLimitExceeded = AccessRuleCurrentStatusCodeType.new("PeriodicSoftLimitExceeded")
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleStatusCodeType
class AccessRuleStatusCodeType < ::String
  ApplicationBlocked = AccessRuleStatusCodeType.new("ApplicationBlocked")
  CustomCode = AccessRuleStatusCodeType.new("CustomCode")
  RuleOff = AccessRuleStatusCodeType.new("RuleOff")
  RuleOn = AccessRuleStatusCodeType.new("RuleOn")
end

# {urn:ebay:apis:eBLBaseComponents}AccountDetailEntryCodeType
class AccountDetailEntryCodeType < ::String
  AWCredit = AccountDetailEntryCodeType.new("AWCredit")
  AWDebit = AccountDetailEntryCodeType.new("AWDebit")
  AWMemo = AccountDetailEntryCodeType.new("AWMemo")
  AccountStateSwitch = AccountDetailEntryCodeType.new("AccountStateSwitch")
  AllFeesCredit = AccountDetailEntryCodeType.new("AllFeesCredit")
  AutoPmntReqExempt = AccountDetailEntryCodeType.new("AutoPmntReqExempt")
  AutoPmntReqRein = AccountDetailEntryCodeType.new("AutoPmntReqRein")
  AutoTraderOff = AccountDetailEntryCodeType.new("AutoTraderOff")
  AutoTraderOn = AccountDetailEntryCodeType.new("AutoTraderOn")
  BBAdminCredit = AccountDetailEntryCodeType.new("BBAdminCredit")
  BBAdminDebit = AccountDetailEntryCodeType.new("BBAdminDebit")
  BasicBundleFee = AccountDetailEntryCodeType.new("BasicBundleFee")
  BasicBundleFeeCredit = AccountDetailEntryCodeType.new("BasicBundleFeeCredit")
  BasicUpgradePackBundleFee = AccountDetailEntryCodeType.new("BasicUpgradePackBundleFee")
  BasicUpgradePackBundleFeeCredit = AccountDetailEntryCodeType.new("BasicUpgradePackBundleFeeCredit")
  BonusPointsAddition = AccountDetailEntryCodeType.new("BonusPointsAddition")
  BonusPointsCashPayout = AccountDetailEntryCodeType.new("BonusPointsCashPayout")
  BonusPointsPaymentAutomatic = AccountDetailEntryCodeType.new("BonusPointsPaymentAutomatic")
  BonusPointsPaymentManual = AccountDetailEntryCodeType.new("BonusPointsPaymentManual")
  BonusPointsPaymentReversal = AccountDetailEntryCodeType.new("BonusPointsPaymentReversal")
  BonusPointsReduction = AccountDetailEntryCodeType.new("BonusPointsReduction")
  BorderFee = AccountDetailEntryCodeType.new("BorderFee")
  BorderFeeCredit = AccountDetailEntryCodeType.new("BorderFeeCredit")
  BulkUserSuspension = AccountDetailEntryCodeType.new("BulkUserSuspension")
  BuyItNowCredit = AccountDetailEntryCodeType.new("BuyItNowCredit")
  BuyItNowFee = AccountDetailEntryCodeType.new("BuyItNowFee")
  CCNotOnFilePerCustReq = AccountDetailEntryCodeType.new("CCNotOnFilePerCustReq")
  CCPaymentRejected = AccountDetailEntryCodeType.new("CCPaymentRejected")
  ChargeBack = AccountDetailEntryCodeType.new("ChargeBack")
  ChargeBackReversal = AccountDetailEntryCodeType.new("ChargeBackReversal")
  Chargeoff = AccountDetailEntryCodeType.new("Chargeoff")
  ChargeoffBankruptcy = AccountDetailEntryCodeType.new("ChargeoffBankruptcy")
  ChargeoffDeceased = AccountDetailEntryCodeType.new("ChargeoffDeceased")
  ChargeoffOther = AccountDetailEntryCodeType.new("ChargeoffOther")
  ChargeoffRecovery = AccountDetailEntryCodeType.new("ChargeoffRecovery")
  ChargeoffSuspended = AccountDetailEntryCodeType.new("ChargeoffSuspended")
  ChargeoffWacko = AccountDetailEntryCodeType.new("ChargeoffWacko")
  CreditAABasic = AccountDetailEntryCodeType.new("CreditAABasic")
  CreditAAPro = AccountDetailEntryCodeType.new("CreditAAPro")
  CreditBold = AccountDetailEntryCodeType.new("CreditBold")
  CreditCardNotOnFile = AccountDetailEntryCodeType.new("CreditCardNotOnFile")
  CreditCardOnFile = AccountDetailEntryCodeType.new("CreditCardOnFile")
  CreditCategoryFeatured = AccountDetailEntryCodeType.new("CreditCategoryFeatured")
  CreditCourtesy = AccountDetailEntryCodeType.new("CreditCourtesy")
  CreditDuplicateListing = AccountDetailEntryCodeType.new("CreditDuplicateListing")
  CreditEquifaxRealtimeFee = AccountDetailEntryCodeType.new("CreditEquifaxRealtimeFee")
  CreditFeatured = AccountDetailEntryCodeType.new("CreditFeatured")
  CreditFeaturedGallery = AccountDetailEntryCodeType.new("CreditFeaturedGallery")
  CreditFinalValue = AccountDetailEntryCodeType.new("CreditFinalValue")
  CreditFinalValueFixedPrice = AccountDetailEntryCodeType.new("CreditFinalValueFixedPrice")
  CreditGallery = AccountDetailEntryCodeType.new("CreditGallery")
  CreditGalleryPlus = AccountDetailEntryCodeType.new("CreditGalleryPlus")
  CreditGiftIcon = AccountDetailEntryCodeType.new("CreditGiftIcon")
  CreditHighlight = AccountDetailEntryCodeType.new("CreditHighlight")
  CreditIPIXPhoto = AccountDetailEntryCodeType.new("CreditIPIXPhoto")
  CreditIPIXSlideShow = AccountDetailEntryCodeType.new("CreditIPIXSlideShow")
  CreditImmoProFeatureFee = AccountDetailEntryCodeType.new("CreditImmoProFeatureFee")
  CreditImmoProFee = AccountDetailEntryCodeType.new("CreditImmoProFee")
  CreditInsertion = AccountDetailEntryCodeType.new("CreditInsertion")
  CreditInsertionFee = AccountDetailEntryCodeType.new("CreditInsertionFee")
  CreditInsertionFixedPrice = AccountDetailEntryCodeType.new("CreditInsertionFixedPrice")
  CreditLargePicture = AccountDetailEntryCodeType.new("CreditLargePicture")
  CreditNoSale = AccountDetailEntryCodeType.new("CreditNoSale")
  CreditPCGS = AccountDetailEntryCodeType.new("CreditPCGS")
  CreditPSA = AccountDetailEntryCodeType.new("CreditPSA")
  CreditPartialSale = AccountDetailEntryCodeType.new("CreditPartialSale")
  CreditPicturePackFull = AccountDetailEntryCodeType.new("CreditPicturePackFull")
  CreditPicturePackPartial = AccountDetailEntryCodeType.new("CreditPicturePackPartial")
  CreditPictureShow = AccountDetailEntryCodeType.new("CreditPictureShow")
  CreditPrivateListing = AccountDetailEntryCodeType.new("CreditPrivateListing")
  CreditRealEstate30DaysListing = AccountDetailEntryCodeType.new("CreditRealEstate30DaysListing")
  CreditRealEstateProFeatureFee = AccountDetailEntryCodeType.new("CreditRealEstateProFeatureFee")
  CreditRealEstateProFee = AccountDetailEntryCodeType.new("CreditRealEstateProFee")
  CreditReserve = AccountDetailEntryCodeType.new("CreditReserve")
  CreditSMBasic = AccountDetailEntryCodeType.new("CreditSMBasic")
  CreditSMBasicPro = AccountDetailEntryCodeType.new("CreditSMBasicPro")
  CreditSchedule = AccountDetailEntryCodeType.new("CreditSchedule")
  CreditSearchableMobileDE = AccountDetailEntryCodeType.new("CreditSearchableMobileDE")
  CreditSoftOutage = AccountDetailEntryCodeType.new("CreditSoftOutage")
  CreditTenDayAuction = AccountDetailEntryCodeType.new("CreditTenDayAuction")
  CreditTransferFrom = AccountDetailEntryCodeType.new("CreditTransferFrom")
  CrediteBayMotorsProFeatureFee = AccountDetailEntryCodeType.new("CrediteBayMotorsProFeatureFee")
  CrediteBayMotorsProFee = AccountDetailEntryCodeType.new("CrediteBayMotorsProFee")
  CrediteBayStores = AccountDetailEntryCodeType.new("CrediteBayStores")
  CustomCode = AccountDetailEntryCodeType.new("CustomCode")
  DebitTransferTo = AccountDetailEntryCodeType.new("DebitTransferTo")
  DirectDebitNotOnFile = AccountDetailEntryCodeType.new("DirectDebitNotOnFile")
  DirectDebitOnFile = AccountDetailEntryCodeType.new("DirectDebitOnFile")
  DirectDebitReturnedItem = AccountDetailEntryCodeType.new("DirectDebitReturnedItem")
  DirectDebitReversal = AccountDetailEntryCodeType.new("DirectDebitReversal")
  EBayCredit = AccountDetailEntryCodeType.new("eBayCredit")
  EBayDebit = AccountDetailEntryCodeType.new("eBayDebit")
  EBayMotorsProFeatureFee = AccountDetailEntryCodeType.new("eBayMotorsProFeatureFee")
  EBayMotorsProFee = AccountDetailEntryCodeType.new("eBayMotorsProFee")
  EBayStoreInventorySubscriptionCredit = AccountDetailEntryCodeType.new("eBayStoreInventorySubscriptionCredit")
  EBayVISACredit = AccountDetailEntryCodeType.new("eBayVISACredit")
  EOMRestriction = AccountDetailEntryCodeType.new("EOMRestriction")
  ElectronicInvoiceOff = AccountDetailEntryCodeType.new("ElectronicInvoiceOff")
  ElectronicInvoiceOn = AccountDetailEntryCodeType.new("ElectronicInvoiceOn")
  EmailMarketingCredit = AccountDetailEntryCodeType.new("EmailMarketingCredit")
  EmailMarketingFee = AccountDetailEntryCodeType.new("EmailMarketingFee")
  EquifaxRealtimeFee = AccountDetailEntryCodeType.new("EquifaxRealtimeFee")
  ExtendedAcutionCredit = AccountDetailEntryCodeType.new("ExtendedAcutionCredit")
  ExtendedAuctionFee = AccountDetailEntryCodeType.new("ExtendedAuctionFee")
  ExtendedDurationFee = AccountDetailEntryCodeType.new("ExtendedDurationFee")
  ExtendedDurationFeeCredit = AccountDetailEntryCodeType.new("ExtendedDurationFeeCredit")
  FVFCreditReversal = AccountDetailEntryCodeType.new("FVFCreditReversal")
  FVFCreditReversalAutomatic = AccountDetailEntryCodeType.new("FVFCreditReversalAutomatic")
  FeeBold = AccountDetailEntryCodeType.new("FeeBold")
  FeeCategoryFeatured = AccountDetailEntryCodeType.new("FeeCategoryFeatured")
  FeeFeatured = AccountDetailEntryCodeType.new("FeeFeatured")
  FeeFeaturedGallery = AccountDetailEntryCodeType.new("FeeFeaturedGallery")
  FeeFinalValue = AccountDetailEntryCodeType.new("FeeFinalValue")
  FeeFinalValueFixedPrice = AccountDetailEntryCodeType.new("FeeFinalValueFixedPrice")
  FeeGallery = AccountDetailEntryCodeType.new("FeeGallery")
  FeeGalleryPlus = AccountDetailEntryCodeType.new("FeeGalleryPlus")
  FeeGiftIcon = AccountDetailEntryCodeType.new("FeeGiftIcon")
  FeeHighlight = AccountDetailEntryCodeType.new("FeeHighlight")
  FeeIPIXPhoto = AccountDetailEntryCodeType.new("FeeIPIXPhoto")
  FeeIPIXSlideShow = AccountDetailEntryCodeType.new("FeeIPIXSlideShow")
  FeeInsertion = AccountDetailEntryCodeType.new("FeeInsertion")
  FeeInsertionFixedPrice = AccountDetailEntryCodeType.new("FeeInsertionFixedPrice")
  FeeLargePicture = AccountDetailEntryCodeType.new("FeeLargePicture")
  FeeNSFCheck = AccountDetailEntryCodeType.new("FeeNSFCheck")
  FeePartialSale = AccountDetailEntryCodeType.new("FeePartialSale")
  FeePicturePack = AccountDetailEntryCodeType.new("FeePicturePack")
  FeePictureShow = AccountDetailEntryCodeType.new("FeePictureShow")
  FeeRealEstate30DaysListing = AccountDetailEntryCodeType.new("FeeRealEstate30DaysListing")
  FeeRedepositCheck = AccountDetailEntryCodeType.new("FeeRedepositCheck")
  FeeReserve = AccountDetailEntryCodeType.new("FeeReserve")
  FeeReturnCheckClose = AccountDetailEntryCodeType.new("FeeReturnCheckClose")
  FeeReturnedCheck = AccountDetailEntryCodeType.new("FeeReturnedCheck")
  FeeSchedule = AccountDetailEntryCodeType.new("FeeSchedule")
  FeeSearchableMobileDE = AccountDetailEntryCodeType.new("FeeSearchableMobileDE")
  FeeTenDayAuction = AccountDetailEntryCodeType.new("FeeTenDayAuction")
  FinalEntry = AccountDetailEntryCodeType.new("FinalEntry")
  FinanceCharge = AccountDetailEntryCodeType.new("FinanceCharge")
  FinanceChargeReversal = AccountDetailEntryCodeType.new("FinanceChargeReversal")
  FixedPriceDurationCredit = AccountDetailEntryCodeType.new("FixedPriceDurationCredit")
  FixedPriceDurationFee = AccountDetailEntryCodeType.new("FixedPriceDurationFee")
  FlagDDDDPending = AccountDetailEntryCodeType.new("FlagDDDDPending")
  FlagDDPaymentConfirmed = AccountDetailEntryCodeType.new("FlagDDPaymentConfirmed")
  ForeignFundsCheckReversal = AccountDetailEntryCodeType.new("ForeignFundsCheckReversal")
  ForeignFundsConvert = AccountDetailEntryCodeType.new("ForeignFundsConvert")
  ImmoProFeatureFee = AccountDetailEntryCodeType.new("ImmoProFeatureFee")
  ImmoProFee = AccountDetailEntryCodeType.new("ImmoProFee")
  InternationalListingCredit = AccountDetailEntryCodeType.new("InternationalListingCredit")
  InternationalListingFee = AccountDetailEntryCodeType.new("InternationalListingFee")
  InvoiceCreditBalance = AccountDetailEntryCodeType.new("InvoiceCreditBalance")
  Invoiced = AccountDetailEntryCodeType.new("Invoiced")
  InvoicedCreditCard = AccountDetailEntryCodeType.new("InvoicedCreditCard")
  ItemMoveFee = AccountDetailEntryCodeType.new("ItemMoveFee")
  LAAudioVideoFee = AccountDetailEntryCodeType.new("LAAudioVideoFee")
  LAAudioVideoFeeRefund = AccountDetailEntryCodeType.new("LAAudioVideoFeeRefund")
  LABuyerPremiumPercentageFee = AccountDetailEntryCodeType.new("LABuyerPremiumPercentageFee")
  LABuyerPremiumPercentageFeeRefund = AccountDetailEntryCodeType.new("LABuyerPremiumPercentageFeeRefund")
  LACatalogFee = AccountDetailEntryCodeType.new("LACatalogFee")
  LACatalogInsertionRefund = AccountDetailEntryCodeType.new("LACatalogInsertionRefund")
  LACatalogItemFeeRefund = AccountDetailEntryCodeType.new("LACatalogItemFeeRefund")
  LAExtraItem = AccountDetailEntryCodeType.new("LAExtraItem")
  LAFinalValueFee = AccountDetailEntryCodeType.new("LAFinalValueFee")
  LAFinalValueFeeRefund = AccountDetailEntryCodeType.new("LAFinalValueFeeRefund")
  ListingDesignerCredit = AccountDetailEntryCodeType.new("ListingDesignerCredit")
  ListingDesignerFee = AccountDetailEntryCodeType.new("ListingDesignerFee")
  MarketplaceResearchBasicSubscriptionFee = AccountDetailEntryCodeType.new("MarketplaceResearchBasicSubscriptionFee")
  MarketplaceResearchBasicSubscriptionFeeCredit = AccountDetailEntryCodeType.new("MarketplaceResearchBasicSubscriptionFeeCredit")
  MarketplaceResearchExpiredSubscriptionFee = AccountDetailEntryCodeType.new("MarketplaceResearchExpiredSubscriptionFee")
  MarketplaceResearchExpiredSubscriptionFeeCredit = AccountDetailEntryCodeType.new("MarketplaceResearchExpiredSubscriptionFeeCredit")
  MarketplaceResearchProSubscriptionFee = AccountDetailEntryCodeType.new("MarketplaceResearchProSubscriptionFee")
  MarketplaceResearchProSubscriptionFeeCredit = AccountDetailEntryCodeType.new("MarketplaceResearchProSubscriptionFeeCredit")
  Memo = AccountDetailEntryCodeType.new("Memo")
  Merged = AccountDetailEntryCodeType.new("Merged")
  OutageCredit = AccountDetailEntryCodeType.new("OutageCredit")
  PaperInvoiceOff = AccountDetailEntryCodeType.new("PaperInvoiceOff")
  PaperInvoiceOn = AccountDetailEntryCodeType.new("PaperInvoiceOn")
  PayPalChargeBack = AccountDetailEntryCodeType.new("PayPalChargeBack")
  PayPalFailed = AccountDetailEntryCodeType.new("PayPalFailed")
  PayPalOTPPend = AccountDetailEntryCodeType.new("PayPalOTPPend")
  PayPalOTPSucc = AccountDetailEntryCodeType.new("PayPalOTPSucc")
  PayPalRefund = AccountDetailEntryCodeType.new("PayPalRefund")
  PaymentAdjustmentCredit = AccountDetailEntryCodeType.new("PaymentAdjustmentCredit")
  PaymentAdjustmentDebit = AccountDetailEntryCodeType.new("PaymentAdjustmentDebit")
  PaymentCC = AccountDetailEntryCodeType.new("PaymentCC")
  PaymentCCOnce = AccountDetailEntryCodeType.new("PaymentCCOnce")
  PaymentCash = AccountDetailEntryCodeType.new("PaymentCash")
  PaymentCheck = AccountDetailEntryCodeType.new("PaymentCheck")
  PaymentDirectDebit = AccountDetailEntryCodeType.new("PaymentDirectDebit")
  PaymentElectronicTransfer = AccountDetailEntryCodeType.new("PaymentElectronicTransfer")
  PaymentElectronicTransferReversal = AccountDetailEntryCodeType.new("PaymentElectronicTransferReversal")
  PaymentEquifaxCredit = AccountDetailEntryCodeType.new("PaymentEquifaxCredit")
  PaymentEquifaxDebit = AccountDetailEntryCodeType.new("PaymentEquifaxDebit")
  PaymentGiftCertificate = AccountDetailEntryCodeType.new("PaymentGiftCertificate")
  PaymentHomeBanking = AccountDetailEntryCodeType.new("PaymentHomeBanking")
  PaymentMoneyOrder = AccountDetailEntryCodeType.new("PaymentMoneyOrder")
  PaymentWireTransfer = AccountDetailEntryCodeType.new("PaymentWireTransfer")
  PaypalOffFile = AccountDetailEntryCodeType.new("PaypalOffFile")
  PaypalOnFile = AccountDetailEntryCodeType.new("PaypalOnFile")
  PaypalOnFileByCSR = AccountDetailEntryCodeType.new("PaypalOnFileByCSR")
  PictureManagerSubscriptionFee = AccountDetailEntryCodeType.new("PictureManagerSubscriptionFee")
  PictureManagerSubscriptionFeeCredit = AccountDetailEntryCodeType.new("PictureManagerSubscriptionFeeCredit")
  PrivateListing = AccountDetailEntryCodeType.new("PrivateListing")
  ProPackBundleFee = AccountDetailEntryCodeType.new("ProPackBundleFee")
  ProPackBundleFeeCredit = AccountDetailEntryCodeType.new("ProPackBundleFeeCredit")
  ProPackPlusBundleFee = AccountDetailEntryCodeType.new("ProPackPlusBundleFee")
  ProPackPlusBundleFeeCredit = AccountDetailEntryCodeType.new("ProPackPlusBundleFeeCredit")
  PromotionalCredit = AccountDetailEntryCodeType.new("PromotionalCredit")
  RealEstateProFeatureFee = AccountDetailEntryCodeType.new("RealEstateProFeatureFee")
  RealEstateProFee = AccountDetailEntryCodeType.new("RealEstateProFee")
  ReferrerCredit = AccountDetailEntryCodeType.new("ReferrerCredit")
  ReferrerDebit = AccountDetailEntryCodeType.new("ReferrerDebit")
  RefundCC = AccountDetailEntryCodeType.new("RefundCC")
  RefundCheck = AccountDetailEntryCodeType.new("RefundCheck")
  RevertUserState = AccountDetailEntryCodeType.new("RevertUserState")
  SMProListingDesignerCredit = AccountDetailEntryCodeType.new("SMProListingDesignerCredit")
  SMProListingDesignerFee = AccountDetailEntryCodeType.new("SMProListingDesignerFee")
  SalesReportsPlusCredit = AccountDetailEntryCodeType.new("SalesReportsPlusCredit")
  SalesReportsPlusFee = AccountDetailEntryCodeType.new("SalesReportsPlusFee")
  SellerReportsBasicCredit = AccountDetailEntryCodeType.new("SellerReportsBasicCredit")
  SellerReportsBasicFee = AccountDetailEntryCodeType.new("SellerReportsBasicFee")
  SellerReportsPlusCredit = AccountDetailEntryCodeType.new("SellerReportsPlusCredit")
  SellerReportsPlusFee = AccountDetailEntryCodeType.new("SellerReportsPlusFee")
  SetOnHold = AccountDetailEntryCodeType.new("SetOnHold")
  StoresGTCCredit = AccountDetailEntryCodeType.new("StoresGTCCredit")
  StoresGTCFee = AccountDetailEntryCodeType.new("StoresGTCFee")
  StoresReferralCredit = AccountDetailEntryCodeType.new("StoresReferralCredit")
  StoresReferralFee = AccountDetailEntryCodeType.new("StoresReferralFee")
  StoresSuccessfulListingFee = AccountDetailEntryCodeType.new("StoresSuccessfulListingFee")
  StoresSuccessfulListingFeeCredit = AccountDetailEntryCodeType.new("StoresSuccessfulListingFeeCredit")
  SubscriptionAABasic = AccountDetailEntryCodeType.new("SubscriptionAABasic")
  SubscriptionAAPro = AccountDetailEntryCodeType.new("SubscriptionAAPro")
  SubscriptionSMBasic = AccountDetailEntryCodeType.new("SubscriptionSMBasic")
  SubscriptionSMBasicPro = AccountDetailEntryCodeType.new("SubscriptionSMBasicPro")
  SubscriptioneBayStores = AccountDetailEntryCodeType.new("SubscriptioneBayStores")
  SubtitleFee = AccountDetailEntryCodeType.new("SubtitleFee")
  SubtitleFeeCredit = AccountDetailEntryCodeType.new("SubtitleFeeCredit")
  SwitchCurrency = AccountDetailEntryCodeType.new("SwitchCurrency")
  TemporaryCredit = AccountDetailEntryCodeType.new("TemporaryCredit")
  TemporaryCreditReversal = AccountDetailEntryCodeType.new("TemporaryCreditReversal")
  TradingLimitOverrideOff = AccountDetailEntryCodeType.new("TradingLimitOverrideOff")
  TradingLimitOverrideOn = AccountDetailEntryCodeType.new("TradingLimitOverrideOn")
  Unknown = AccountDetailEntryCodeType.new("Unknown")
  VATCredit = AccountDetailEntryCodeType.new("VATCredit")
  VATDebit = AccountDetailEntryCodeType.new("VATDebit")
  VATStatusChangeApproved = AccountDetailEntryCodeType.new("VATStatusChangeApproved")
  VATStatusChangePending = AccountDetailEntryCodeType.new("VATStatusChangePending")
  VATStatusChange_Denied = AccountDetailEntryCodeType.new("VATStatusChange_Denied")
  VATStatusDeletedByCSR = AccountDetailEntryCodeType.new("VATStatusDeletedByCSR")
  VATStatusDeletedByUser = AccountDetailEntryCodeType.new("VATStatusDeletedByUser")
  ValuePackBundleFee = AccountDetailEntryCodeType.new("ValuePackBundleFee")
  ValuePackBundleFeeCredit = AccountDetailEntryCodeType.new("ValuePackBundleFeeCredit")
  VehicleLocalFinalValueFee = AccountDetailEntryCodeType.new("VehicleLocalFinalValueFee")
  VehicleLocalFinalValueFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalFinalValueFeeCredit")
  VehicleLocalGTCFee = AccountDetailEntryCodeType.new("VehicleLocalGTCFee")
  VehicleLocalGTCFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalGTCFeeCredit")
  VehicleLocalInsertionFee = AccountDetailEntryCodeType.new("VehicleLocalInsertionFee")
  VehicleLocalInsertionFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalInsertionFeeCredit")
  VehicleLocalSubscriptionFee = AccountDetailEntryCodeType.new("VehicleLocalSubscriptionFee")
  VehicleLocalSubscriptionFeeCredit = AccountDetailEntryCodeType.new("VehicleLocalSubscriptionFeeCredit")
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntrySortTypeCodeType
class AccountEntrySortTypeCodeType < ::String
  AccountEntryCreatedTimeAscending = AccountEntrySortTypeCodeType.new("AccountEntryCreatedTimeAscending")
  AccountEntryCreatedTimeDescending = AccountEntrySortTypeCodeType.new("AccountEntryCreatedTimeDescending")
  AccountEntryFeeTypeAscending = AccountEntrySortTypeCodeType.new("AccountEntryFeeTypeAscending")
  AccountEntryFeeTypeDescending = AccountEntrySortTypeCodeType.new("AccountEntryFeeTypeDescending")
  AccountEntryItemNumberAscending = AccountEntrySortTypeCodeType.new("AccountEntryItemNumberAscending")
  AccountEntryItemNumberDescending = AccountEntrySortTypeCodeType.new("AccountEntryItemNumberDescending")
  CustomCode = AccountEntrySortTypeCodeType.new("CustomCode")
  None = AccountEntrySortTypeCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}AccountHistorySelectionCodeType
class AccountHistorySelectionCodeType < ::String
  BetweenSpecifiedDates = AccountHistorySelectionCodeType.new("BetweenSpecifiedDates")
  CustomCode = AccountHistorySelectionCodeType.new("CustomCode")
  LastInvoice = AccountHistorySelectionCodeType.new("LastInvoice")
  SpecifiedInvoice = AccountHistorySelectionCodeType.new("SpecifiedInvoice")
end

# {urn:ebay:apis:eBLBaseComponents}AccountStateCodeType
class AccountStateCodeType < ::String
  Active = AccountStateCodeType.new("Active")
  CustomCode = AccountStateCodeType.new("CustomCode")
  Inactive = AccountStateCodeType.new("Inactive")
  Pending = AccountStateCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatEnabledCodeType
class AdFormatEnabledCodeType < ::String
  ClassifiedAdEnabled = AdFormatEnabledCodeType.new("ClassifiedAdEnabled")
  ClassifiedAdOnly = AdFormatEnabledCodeType.new("ClassifiedAdOnly")
  CustomCode = AdFormatEnabledCodeType.new("CustomCode")
  Disabled = AdFormatEnabledCodeType.new("Disabled")
  Enabled = AdFormatEnabledCodeType.new("Enabled")
  LocalMarketBestOfferOnly = AdFormatEnabledCodeType.new("LocalMarketBestOfferOnly")
  Only = AdFormatEnabledCodeType.new("Only")
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatLeadStatusCodeType
class AdFormatLeadStatusCodeType < ::String
  CustomCode = AdFormatLeadStatusCodeType.new("CustomCode")
  New = AdFormatLeadStatusCodeType.new("New")
  Responded = AdFormatLeadStatusCodeType.new("Responded")
end

# {urn:ebay:apis:eBLBaseComponents}AddressOwnerCodeType
class AddressOwnerCodeType < ::String
  CustomCode = AddressOwnerCodeType.new("CustomCode")
  EBay = AddressOwnerCodeType.new("eBay")
  PayPal = AddressOwnerCodeType.new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}AddressRecordTypeCodeType
class AddressRecordTypeCodeType < ::String
  Business = AddressRecordTypeCodeType.new("Business")
  CustomCode = AddressRecordTypeCodeType.new("CustomCode")
  Residential = AddressRecordTypeCodeType.new("Residential")
end

# {urn:ebay:apis:eBLBaseComponents}AddressStatusCodeType
class AddressStatusCodeType < ::String
  Confirmed = AddressStatusCodeType.new("Confirmed")
  CustomCode = AddressStatusCodeType.new("CustomCode")
  None = AddressStatusCodeType.new("None")
  Unconfirmed = AddressStatusCodeType.new("Unconfirmed")
end

# {urn:ebay:apis:eBLBaseComponents}AnnouncementMessageCodeType
class AnnouncementMessageCodeType < ::String
  CustomCode = AnnouncementMessageCodeType.new("CustomCode")
  Deprecation = AnnouncementMessageCodeType.new("Deprecation")
  DeprecationAndMapping = AnnouncementMessageCodeType.new("DeprecationAndMapping")
  Mapping = AnnouncementMessageCodeType.new("Mapping")
  None = AnnouncementMessageCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}ApplicationDeviceTypeCodeType
class ApplicationDeviceTypeCodeType < ::String
  Browser = ApplicationDeviceTypeCodeType.new("Browser")
  CustomCode = ApplicationDeviceTypeCodeType.new("CustomCode")
  Desktop = ApplicationDeviceTypeCodeType.new("Desktop")
  SetTopTVBox = ApplicationDeviceTypeCodeType.new("SetTopTVBox")
  Wireless = ApplicationDeviceTypeCodeType.new("Wireless")
end

# {urn:ebay:apis:eBLBaseComponents}AuthTokenTypeCodeType
class AuthTokenTypeCodeType < ::String
  ClientAlertsToken = AuthTokenTypeCodeType.new("ClientAlertsToken")
  CustomCode = AuthTokenTypeCodeType.new("CustomCode")
  RESTToken = AuthTokenTypeCodeType.new("RESTToken")
end

# {urn:ebay:apis:eBLBaseComponents}AutomatedLeaveFeedbackEventCodeType
class AutomatedLeaveFeedbackEventCodeType < ::String
  CustomCode = AutomatedLeaveFeedbackEventCodeType.new("CustomCode")
  None = AutomatedLeaveFeedbackEventCodeType.new("None")
  PaymentReceived = AutomatedLeaveFeedbackEventCodeType.new("PaymentReceived")
  PositiveFeedbackReceived = AutomatedLeaveFeedbackEventCodeType.new("PositiveFeedbackReceived")
end

# {urn:ebay:apis:eBLBaseComponents}BalanceCodeType
class BalanceCodeType < ::String
  CustomCode = BalanceCodeType.new("CustomCode")
  Other = BalanceCodeType.new("Other")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferActionCodeType
class BestOfferActionCodeType < ::String
  Accept = BestOfferActionCodeType.new("Accept")
  Counter = BestOfferActionCodeType.new("Counter")
  CustomCode = BestOfferActionCodeType.new("CustomCode")
  Decline = BestOfferActionCodeType.new("Decline")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferStatusCodeType
class BestOfferStatusCodeType < ::String
  Accepted = BestOfferStatusCodeType.new("Accepted")
  Active = BestOfferStatusCodeType.new("Active")
  AdminEnded = BestOfferStatusCodeType.new("AdminEnded")
  All = BestOfferStatusCodeType.new("All")
  Countered = BestOfferStatusCodeType.new("Countered")
  CustomCode = BestOfferStatusCodeType.new("CustomCode")
  Declined = BestOfferStatusCodeType.new("Declined")
  Expired = BestOfferStatusCodeType.new("Expired")
  Pending = BestOfferStatusCodeType.new("Pending")
  Retracted = BestOfferStatusCodeType.new("Retracted")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferTypeCodeType
class BestOfferTypeCodeType < ::String
  BuyerBestOffer = BestOfferTypeCodeType.new("BuyerBestOffer")
  BuyerCounterOffer = BestOfferTypeCodeType.new("BuyerCounterOffer")
  CustomCode = BestOfferTypeCodeType.new("CustomCode")
  SellerCounterOffer = BestOfferTypeCodeType.new("SellerCounterOffer")
end

# {urn:ebay:apis:eBLBaseComponents}BidActionCodeType
class BidActionCodeType < ::String
  Absentee = BidActionCodeType.new("Absentee")
  Accept = BidActionCodeType.new("Accept")
  AutoCancel = BidActionCodeType.new("AutoCancel")
  AutoRetraction = BidActionCodeType.new("AutoRetraction")
  Bid = BidActionCodeType.new("Bid")
  BuyItNow = BidActionCodeType.new("BuyItNow")
  Cancelled = BidActionCodeType.new("Cancelled")
  Counter = BidActionCodeType.new("Counter")
  CustomCode = BidActionCodeType.new("CustomCode")
  Decline = BidActionCodeType.new("Decline")
  NotUsed = BidActionCodeType.new("NotUsed")
  Offer = BidActionCodeType.new("Offer")
  Purchase = BidActionCodeType.new("Purchase")
  Retraction = BidActionCodeType.new("Retraction")
  Unknown = BidActionCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupItemStatusCodeType
class BidGroupItemStatusCodeType < ::String
  Cancelled = BidGroupItemStatusCodeType.new("Cancelled")
  CurrentBid = BidGroupItemStatusCodeType.new("CurrentBid")
  CustomCode = BidGroupItemStatusCodeType.new("CustomCode")
  Ended = BidGroupItemStatusCodeType.new("Ended")
  GroupClosed = BidGroupItemStatusCodeType.new("GroupClosed")
  Pending = BidGroupItemStatusCodeType.new("Pending")
  Skipped = BidGroupItemStatusCodeType.new("Skipped")
  Won = BidGroupItemStatusCodeType.new("Won")
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupStatusCodeType
class BidGroupStatusCodeType < ::String
  Closed = BidGroupStatusCodeType.new("Closed")
  CustomCode = BidGroupStatusCodeType.new("CustomCode")
  Open = BidGroupStatusCodeType.new("Open")
end

# {urn:ebay:apis:eBLBaseComponents}BidderStatusCodeType
class BidderStatusCodeType < ::String
  Approved = BidderStatusCodeType.new("Approved")
  CustomCode = BidderStatusCodeType.new("CustomCode")
  Denied = BidderStatusCodeType.new("Denied")
  Pending = BidderStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}BidderTypeCodeType
class BidderTypeCodeType < ::String
  AllBidder = BidderTypeCodeType.new("AllBidder")
  CustomCode = BidderTypeCodeType.new("CustomCode")
  HighBidder = BidderTypeCodeType.new("HighBidder")
end

# {urn:ebay:apis:eBLBaseComponents}BulkCatalogListerStatusCodeType
class BulkCatalogListerStatusCodeType < ::String
  Active = BulkCatalogListerStatusCodeType.new("Active")
  CustomCode = BulkCatalogListerStatusCodeType.new("CustomCode")
  OnHold = BulkCatalogListerStatusCodeType.new("OnHold")
  OnWatch = BulkCatalogListerStatusCodeType.new("OnWatch")
  Preapproved = BulkCatalogListerStatusCodeType.new("Preapproved")
  Suspended = BulkCatalogListerStatusCodeType.new("Suspended")
  WatchWarn = BulkCatalogListerStatusCodeType.new("WatchWarn")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionCodeType
class BuyerProtectionCodeType < ::String
  CustomCode = BuyerProtectionCodeType.new("CustomCode")
  ItemEligible = BuyerProtectionCodeType.new("ItemEligible")
  ItemIneligible = BuyerProtectionCodeType.new("ItemIneligible")
  ItemMarkedEligible = BuyerProtectionCodeType.new("ItemMarkedEligible")
  ItemMarkedIneligible = BuyerProtectionCodeType.new("ItemMarkedIneligible")
  NoCoverage = BuyerProtectionCodeType.new("NoCoverage")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionSourceCodeType
class BuyerProtectionSourceCodeType < ::String
  CustomCode = BuyerProtectionSourceCodeType.new("CustomCode")
  EBay = BuyerProtectionSourceCodeType.new("eBay")
  PayPal = BuyerProtectionSourceCodeType.new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerSatisfactionStatusCodeType
class BuyerSatisfactionStatusCodeType < ::String
  CustomCode = BuyerSatisfactionStatusCodeType.new("CustomCode")
  Good = BuyerSatisfactionStatusCodeType.new("Good")
  NeedsWork = BuyerSatisfactionStatusCodeType.new("NeedsWork")
  Poor = BuyerSatisfactionStatusCodeType.new("Poor")
  Unacceptable = BuyerSatisfactionStatusCodeType.new("Unacceptable")
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingChargeOptionCodeType
class CalculatedShippingChargeOptionCodeType < ::String
  ChargeEachItem = CalculatedShippingChargeOptionCodeType.new("ChargeEachItem")
  ChargeEntireOrder = CalculatedShippingChargeOptionCodeType.new("ChargeEntireOrder")
  CustomCode = CalculatedShippingChargeOptionCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateOptionCodeType
class CalculatedShippingRateOptionCodeType < ::String
  CombinedItemWeight = CalculatedShippingRateOptionCodeType.new("CombinedItemWeight")
  CustomCode = CalculatedShippingRateOptionCodeType.new("CustomCode")
  IndividualItemWeight = CalculatedShippingRateOptionCodeType.new("IndividualItemWeight")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureDetailLevelCodeType
class CategoryFeatureDetailLevelCodeType < ::String
  CustomCode = CategoryFeatureDetailLevelCodeType.new("CustomCode")
  ReturnAll = CategoryFeatureDetailLevelCodeType.new("ReturnAll")
  ReturnFeatureDefinitions = CategoryFeatureDetailLevelCodeType.new("ReturnFeatureDefinitions")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryListingsOrderCodeType
class CategoryListingsOrderCodeType < ::String
  BestMatchCategoryGroup = CategoryListingsOrderCodeType.new("BestMatchCategoryGroup")
  BestMatchSort = CategoryListingsOrderCodeType.new("BestMatchSort")
  CustomCode = CategoryListingsOrderCodeType.new("CustomCode")
  DistanceSort = CategoryListingsOrderCodeType.new("DistanceSort")
  ItemsBy24Hr = CategoryListingsOrderCodeType.new("ItemsBy24Hr")
  ItemsEndIn5Hr = CategoryListingsOrderCodeType.new("ItemsEndIn5Hr")
  ItemsEndToday = CategoryListingsOrderCodeType.new("ItemsEndToday")
  NoFilter = CategoryListingsOrderCodeType.new("NoFilter")
  PricePlusShippingAsc = CategoryListingsOrderCodeType.new("PricePlusShippingAsc")
  PricePlusShippingDesc = CategoryListingsOrderCodeType.new("PricePlusShippingDesc")
  SortByPriceAsc = CategoryListingsOrderCodeType.new("SortByPriceAsc")
  SortByPriceDesc = CategoryListingsOrderCodeType.new("SortByPriceDesc")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryListingsSearchCodeType
class CategoryListingsSearchCodeType < ::String
  CustomCode = CategoryListingsSearchCodeType.new("CustomCode")
  Featured = CategoryListingsSearchCodeType.new("Featured")
  SuperFeatured = CategoryListingsSearchCodeType.new("SuperFeatured")
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSearchCodeType
class CharacteristicsSearchCodeType < ::String
  CustomCode = CharacteristicsSearchCodeType.new("CustomCode")
  Multi = CharacteristicsSearchCodeType.new("Multi")
  Single = CharacteristicsSearchCodeType.new("Single")
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationTypeCodeType
class CharityAffiliationTypeCodeType < ::String
  Community = CharityAffiliationTypeCodeType.new("Community")
  CustomCode = CharityAffiliationTypeCodeType.new("CustomCode")
  Direct = CharityAffiliationTypeCodeType.new("Direct")
  Remove = CharityAffiliationTypeCodeType.new("Remove")
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerStatusCodeType
class CharitySellerStatusCodeType < ::String
  Closed = CharitySellerStatusCodeType.new("Closed")
  CreditCardAboutToExpire = CharitySellerStatusCodeType.new("CreditCardAboutToExpire")
  CreditCardExpired = CharitySellerStatusCodeType.new("CreditCardExpired")
  CustomCode = CharitySellerStatusCodeType.new("CustomCode")
  DirectDebitRejected = CharitySellerStatusCodeType.new("DirectDebitRejected")
  NotRegisteredLostDirectSellerStatus = CharitySellerStatusCodeType.new("NotRegisteredLostDirectSellerStatus")
  Registered = CharitySellerStatusCodeType.new("Registered")
  RegisteredDirectSeller = CharitySellerStatusCodeType.new("RegisteredDirectSeller")
  RegisteredNoCreditCard = CharitySellerStatusCodeType.new("RegisteredNoCreditCard")
  RegisteredNoPaymentMethod = CharitySellerStatusCodeType.new("RegisteredNoPaymentMethod")
  Suspended = CharitySellerStatusCodeType.new("Suspended")
  TokenExpired = CharitySellerStatusCodeType.new("TokenExpired")
end

# {urn:ebay:apis:eBLBaseComponents}CharityStatusCodeType
class CharityStatusCodeType < ::String
  CustomCode = CharityStatusCodeType.new("CustomCode")
  NoLongerValid = CharityStatusCodeType.new("NoLongerValid")
  Valid = CharityStatusCodeType.new("Valid")
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutMethodCodeType
class CheckoutMethodCodeType < ::String
  CustomCode = CheckoutMethodCodeType.new("CustomCode")
  Other = CheckoutMethodCodeType.new("Other")
  ThirdPartyCheckout = CheckoutMethodCodeType.new("ThirdPartyCheckout")
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusCodeType
class CheckoutStatusCodeType < ::String
  BuyerRequestsTotal = CheckoutStatusCodeType.new("BuyerRequestsTotal")
  CheckoutComplete = CheckoutStatusCodeType.new("CheckoutComplete")
  CheckoutIncomplete = CheckoutStatusCodeType.new("CheckoutIncomplete")
  CustomCode = CheckoutStatusCodeType.new("CustomCode")
  SellerResponded = CheckoutStatusCodeType.new("SellerResponded")
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdBestOfferEnabledCodeType
class ClassifiedAdBestOfferEnabledCodeType < ::String
  CustomCode = ClassifiedAdBestOfferEnabledCodeType.new("CustomCode")
  Disabled = ClassifiedAdBestOfferEnabledCodeType.new("Disabled")
  Enabled = ClassifiedAdBestOfferEnabledCodeType.new("Enabled")
  Required = ClassifiedAdBestOfferEnabledCodeType.new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPaymentMethodEnabledCodeType
class ClassifiedAdPaymentMethodEnabledCodeType < ::String
  CustomCode = ClassifiedAdPaymentMethodEnabledCodeType.new("CustomCode")
  EnabledWithCheckout = ClassifiedAdPaymentMethodEnabledCodeType.new("EnabledWithCheckout")
  EnabledWithoutCheckout = ClassifiedAdPaymentMethodEnabledCodeType.new("EnabledWithoutCheckout")
  NotSupported = ClassifiedAdPaymentMethodEnabledCodeType.new("NotSupported")
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentOptionCodeType
class CombinedPaymentOptionCodeType < ::String
  CustomCode = CombinedPaymentOptionCodeType.new("CustomCode")
  DiscountSpecified = CombinedPaymentOptionCodeType.new("DiscountSpecified")
  NoCombinedPayment = CombinedPaymentOptionCodeType.new("NoCombinedPayment")
  SpecifyDiscountLater = CombinedPaymentOptionCodeType.new("SpecifyDiscountLater")
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPeriodCodeType
class CombinedPaymentPeriodCodeType < ::String
  CustomCode = CombinedPaymentPeriodCodeType.new("CustomCode")
  Days_14 = CombinedPaymentPeriodCodeType.new("Days_14")
  Days_3 = CombinedPaymentPeriodCodeType.new("Days_3")
  Days_30 = CombinedPaymentPeriodCodeType.new("Days_30")
  Days_5 = CombinedPaymentPeriodCodeType.new("Days_5")
  Days_7 = CombinedPaymentPeriodCodeType.new("Days_7")
  Ineligible = CombinedPaymentPeriodCodeType.new("Ineligible")
end

# {urn:ebay:apis:eBLBaseComponents}CommentTypeCodeType
class CommentTypeCodeType < ::String
  CustomCode = CommentTypeCodeType.new("CustomCode")
  IndependentlyWithdrawn = CommentTypeCodeType.new("IndependentlyWithdrawn")
  Negative = CommentTypeCodeType.new("Negative")
  Neutral = CommentTypeCodeType.new("Neutral")
  Positive = CommentTypeCodeType.new("Positive")
  Withdrawn = CommentTypeCodeType.new("Withdrawn")
end

# {urn:ebay:apis:eBLBaseComponents}CompleteStatusCodeType
class CompleteStatusCodeType < ::String
  Complete = CompleteStatusCodeType.new("Complete")
  CustomCode = CompleteStatusCodeType.new("CustomCode")
  Incomplete = CompleteStatusCodeType.new("Incomplete")
  Pending = CompleteStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}CountryCodeType
class CountryCodeType < ::String
  AA = CountryCodeType.new("AA")
  AD = CountryCodeType.new("AD")
  AE = CountryCodeType.new("AE")
  AF = CountryCodeType.new("AF")
  AG = CountryCodeType.new("AG")
  AI = CountryCodeType.new("AI")
  AL = CountryCodeType.new("AL")
  AM = CountryCodeType.new("AM")
  AN = CountryCodeType.new("AN")
  AO = CountryCodeType.new("AO")
  AQ = CountryCodeType.new("AQ")
  AR = CountryCodeType.new("AR")
  AS = CountryCodeType.new("AS")
  AT = CountryCodeType.new("AT")
  AU = CountryCodeType.new("AU")
  AW = CountryCodeType.new("AW")
  AZ = CountryCodeType.new("AZ")
  BA = CountryCodeType.new("BA")
  BB = CountryCodeType.new("BB")
  BD = CountryCodeType.new("BD")
  BE = CountryCodeType.new("BE")
  BF = CountryCodeType.new("BF")
  BG = CountryCodeType.new("BG")
  BH = CountryCodeType.new("BH")
  BI = CountryCodeType.new("BI")
  BJ = CountryCodeType.new("BJ")
  BM = CountryCodeType.new("BM")
  BN = CountryCodeType.new("BN")
  BO = CountryCodeType.new("BO")
  BR = CountryCodeType.new("BR")
  BS = CountryCodeType.new("BS")
  BT = CountryCodeType.new("BT")
  BV = CountryCodeType.new("BV")
  BW = CountryCodeType.new("BW")
  BY = CountryCodeType.new("BY")
  BZ = CountryCodeType.new("BZ")
  CA = CountryCodeType.new("CA")
  CC = CountryCodeType.new("CC")
  CD = CountryCodeType.new("CD")
  CF = CountryCodeType.new("CF")
  CG = CountryCodeType.new("CG")
  CH = CountryCodeType.new("CH")
  CI = CountryCodeType.new("CI")
  CK = CountryCodeType.new("CK")
  CL = CountryCodeType.new("CL")
  CM = CountryCodeType.new("CM")
  CN = CountryCodeType.new("CN")
  CO = CountryCodeType.new("CO")
  CR = CountryCodeType.new("CR")
  CU = CountryCodeType.new("CU")
  CV = CountryCodeType.new("CV")
  CX = CountryCodeType.new("CX")
  CY = CountryCodeType.new("CY")
  CZ = CountryCodeType.new("CZ")
  C_IO = CountryCodeType.new("IO")
  CustomCode = CountryCodeType.new("CustomCode")
  DE = CountryCodeType.new("DE")
  DJ = CountryCodeType.new("DJ")
  DK = CountryCodeType.new("DK")
  DM = CountryCodeType.new("DM")
  DO = CountryCodeType.new("DO")
  DZ = CountryCodeType.new("DZ")
  EC = CountryCodeType.new("EC")
  EE = CountryCodeType.new("EE")
  EG = CountryCodeType.new("EG")
  EH = CountryCodeType.new("EH")
  ER = CountryCodeType.new("ER")
  ES = CountryCodeType.new("ES")
  ET = CountryCodeType.new("ET")
  FI = CountryCodeType.new("FI")
  FJ = CountryCodeType.new("FJ")
  FK = CountryCodeType.new("FK")
  FM = CountryCodeType.new("FM")
  FO = CountryCodeType.new("FO")
  FR = CountryCodeType.new("FR")
  GA = CountryCodeType.new("GA")
  GB = CountryCodeType.new("GB")
  GD = CountryCodeType.new("GD")
  GE = CountryCodeType.new("GE")
  GF = CountryCodeType.new("GF")
  GG = CountryCodeType.new("GG")
  GH = CountryCodeType.new("GH")
  GI = CountryCodeType.new("GI")
  GL = CountryCodeType.new("GL")
  GM = CountryCodeType.new("GM")
  GN = CountryCodeType.new("GN")
  GP = CountryCodeType.new("GP")
  GQ = CountryCodeType.new("GQ")
  GR = CountryCodeType.new("GR")
  GS = CountryCodeType.new("GS")
  GT = CountryCodeType.new("GT")
  GU = CountryCodeType.new("GU")
  GW = CountryCodeType.new("GW")
  GY = CountryCodeType.new("GY")
  HK = CountryCodeType.new("HK")
  HM = CountryCodeType.new("HM")
  HN = CountryCodeType.new("HN")
  HR = CountryCodeType.new("HR")
  HT = CountryCodeType.new("HT")
  HU = CountryCodeType.new("HU")
  ID = CountryCodeType.new("ID")
  IE = CountryCodeType.new("IE")
  IL = CountryCodeType.new("IL")
  IN = CountryCodeType.new("IN")
  IQ = CountryCodeType.new("IQ")
  IR = CountryCodeType.new("IR")
  IS = CountryCodeType.new("IS")
  IT = CountryCodeType.new("IT")
  JE = CountryCodeType.new("JE")
  JM = CountryCodeType.new("JM")
  JO = CountryCodeType.new("JO")
  JP = CountryCodeType.new("JP")
  KE = CountryCodeType.new("KE")
  KG = CountryCodeType.new("KG")
  KH = CountryCodeType.new("KH")
  KI = CountryCodeType.new("KI")
  KM = CountryCodeType.new("KM")
  KN = CountryCodeType.new("KN")
  KP = CountryCodeType.new("KP")
  KR = CountryCodeType.new("KR")
  KW = CountryCodeType.new("KW")
  KY = CountryCodeType.new("KY")
  KZ = CountryCodeType.new("KZ")
  LA = CountryCodeType.new("LA")
  LB = CountryCodeType.new("LB")
  LC = CountryCodeType.new("LC")
  LI = CountryCodeType.new("LI")
  LK = CountryCodeType.new("LK")
  LR = CountryCodeType.new("LR")
  LS = CountryCodeType.new("LS")
  LT = CountryCodeType.new("LT")
  LU = CountryCodeType.new("LU")
  LV = CountryCodeType.new("LV")
  LY = CountryCodeType.new("LY")
  MA = CountryCodeType.new("MA")
  MC = CountryCodeType.new("MC")
  MD = CountryCodeType.new("MD")
  ME = CountryCodeType.new("ME")
  MG = CountryCodeType.new("MG")
  MH = CountryCodeType.new("MH")
  MK = CountryCodeType.new("MK")
  ML = CountryCodeType.new("ML")
  MM = CountryCodeType.new("MM")
  MN = CountryCodeType.new("MN")
  MO = CountryCodeType.new("MO")
  MP = CountryCodeType.new("MP")
  MQ = CountryCodeType.new("MQ")
  MR = CountryCodeType.new("MR")
  MS = CountryCodeType.new("MS")
  MT = CountryCodeType.new("MT")
  MU = CountryCodeType.new("MU")
  MV = CountryCodeType.new("MV")
  MW = CountryCodeType.new("MW")
  MX = CountryCodeType.new("MX")
  MY = CountryCodeType.new("MY")
  MZ = CountryCodeType.new("MZ")
  NA = CountryCodeType.new("NA")
  NC = CountryCodeType.new("NC")
  NE = CountryCodeType.new("NE")
  NF = CountryCodeType.new("NF")
  NG = CountryCodeType.new("NG")
  NI = CountryCodeType.new("NI")
  NL = CountryCodeType.new("NL")
  NO = CountryCodeType.new("NO")
  NP = CountryCodeType.new("NP")
  NR = CountryCodeType.new("NR")
  NU = CountryCodeType.new("NU")
  NZ = CountryCodeType.new("NZ")
  OM = CountryCodeType.new("OM")
  PA = CountryCodeType.new("PA")
  PE = CountryCodeType.new("PE")
  PF = CountryCodeType.new("PF")
  PG = CountryCodeType.new("PG")
  PH = CountryCodeType.new("PH")
  PK = CountryCodeType.new("PK")
  PL = CountryCodeType.new("PL")
  PM = CountryCodeType.new("PM")
  PN = CountryCodeType.new("PN")
  PR = CountryCodeType.new("PR")
  PS = CountryCodeType.new("PS")
  PT = CountryCodeType.new("PT")
  PW = CountryCodeType.new("PW")
  PY = CountryCodeType.new("PY")
  QA = CountryCodeType.new("QA")
  QM = CountryCodeType.new("QM")
  QN = CountryCodeType.new("QN")
  QO = CountryCodeType.new("QO")
  QP = CountryCodeType.new("QP")
  RE = CountryCodeType.new("RE")
  RO = CountryCodeType.new("RO")
  RS = CountryCodeType.new("RS")
  RU = CountryCodeType.new("RU")
  RW = CountryCodeType.new("RW")
  SA = CountryCodeType.new("SA")
  SB = CountryCodeType.new("SB")
  SC = CountryCodeType.new("SC")
  SD = CountryCodeType.new("SD")
  SE = CountryCodeType.new("SE")
  SG = CountryCodeType.new("SG")
  SH = CountryCodeType.new("SH")
  SI = CountryCodeType.new("SI")
  SJ = CountryCodeType.new("SJ")
  SK = CountryCodeType.new("SK")
  SL = CountryCodeType.new("SL")
  SM = CountryCodeType.new("SM")
  SN = CountryCodeType.new("SN")
  SO = CountryCodeType.new("SO")
  SR = CountryCodeType.new("SR")
  ST = CountryCodeType.new("ST")
  SV = CountryCodeType.new("SV")
  SY = CountryCodeType.new("SY")
  SZ = CountryCodeType.new("SZ")
  TC = CountryCodeType.new("TC")
  TD = CountryCodeType.new("TD")
  TF = CountryCodeType.new("TF")
  TG = CountryCodeType.new("TG")
  TH = CountryCodeType.new("TH")
  TJ = CountryCodeType.new("TJ")
  TK = CountryCodeType.new("TK")
  TM = CountryCodeType.new("TM")
  TN = CountryCodeType.new("TN")
  TO = CountryCodeType.new("TO")
  TP = CountryCodeType.new("TP")
  TR = CountryCodeType.new("TR")
  TT = CountryCodeType.new("TT")
  TV = CountryCodeType.new("TV")
  TW = CountryCodeType.new("TW")
  TZ = CountryCodeType.new("TZ")
  UA = CountryCodeType.new("UA")
  UG = CountryCodeType.new("UG")
  UM = CountryCodeType.new("UM")
  US = CountryCodeType.new("US")
  UY = CountryCodeType.new("UY")
  UZ = CountryCodeType.new("UZ")
  VA = CountryCodeType.new("VA")
  VC = CountryCodeType.new("VC")
  VE = CountryCodeType.new("VE")
  VG = CountryCodeType.new("VG")
  VI = CountryCodeType.new("VI")
  VN = CountryCodeType.new("VN")
  VU = CountryCodeType.new("VU")
  WF = CountryCodeType.new("WF")
  WS = CountryCodeType.new("WS")
  YE = CountryCodeType.new("YE")
  YT = CountryCodeType.new("YT")
  YU = CountryCodeType.new("YU")
  ZA = CountryCodeType.new("ZA")
  ZM = CountryCodeType.new("ZM")
  ZW = CountryCodeType.new("ZW")
  ZZ = CountryCodeType.new("ZZ")
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyCodeType
class CurrencyCodeType < ::String
  ADP = CurrencyCodeType.new("ADP")
  AED = CurrencyCodeType.new("AED")
  AFA = CurrencyCodeType.new("AFA")
  ALL = CurrencyCodeType.new("ALL")
  AMD = CurrencyCodeType.new("AMD")
  ANG = CurrencyCodeType.new("ANG")
  AOA = CurrencyCodeType.new("AOA")
  ARS = CurrencyCodeType.new("ARS")
  ATS = CurrencyCodeType.new("ATS")
  AUD = CurrencyCodeType.new("AUD")
  AWG = CurrencyCodeType.new("AWG")
  AZM = CurrencyCodeType.new("AZM")
  BAM = CurrencyCodeType.new("BAM")
  BBD = CurrencyCodeType.new("BBD")
  BDT = CurrencyCodeType.new("BDT")
  BGL = CurrencyCodeType.new("BGL")
  BGN = CurrencyCodeType.new("BGN")
  BHD = CurrencyCodeType.new("BHD")
  BIF = CurrencyCodeType.new("BIF")
  BMD = CurrencyCodeType.new("BMD")
  BND = CurrencyCodeType.new("BND")
  BOB = CurrencyCodeType.new("BOB")
  BOV = CurrencyCodeType.new("BOV")
  BRL = CurrencyCodeType.new("BRL")
  BSD = CurrencyCodeType.new("BSD")
  BTN = CurrencyCodeType.new("BTN")
  BWP = CurrencyCodeType.new("BWP")
  BYR = CurrencyCodeType.new("BYR")
  BZD = CurrencyCodeType.new("BZD")
  CAD = CurrencyCodeType.new("CAD")
  CDF = CurrencyCodeType.new("CDF")
  CHF = CurrencyCodeType.new("CHF")
  CLF = CurrencyCodeType.new("CLF")
  CLP = CurrencyCodeType.new("CLP")
  CNY = CurrencyCodeType.new("CNY")
  COP = CurrencyCodeType.new("COP")
  CRC = CurrencyCodeType.new("CRC")
  CUP = CurrencyCodeType.new("CUP")
  CVE = CurrencyCodeType.new("CVE")
  CYP = CurrencyCodeType.new("CYP")
  CZK = CurrencyCodeType.new("CZK")
  CustomCode = CurrencyCodeType.new("CustomCode")
  DJF = CurrencyCodeType.new("DJF")
  DKK = CurrencyCodeType.new("DKK")
  DOP = CurrencyCodeType.new("DOP")
  DZD = CurrencyCodeType.new("DZD")
  ECS = CurrencyCodeType.new("ECS")
  ECV = CurrencyCodeType.new("ECV")
  EEK = CurrencyCodeType.new("EEK")
  EGP = CurrencyCodeType.new("EGP")
  ERN = CurrencyCodeType.new("ERN")
  ETB = CurrencyCodeType.new("ETB")
  EUR = CurrencyCodeType.new("EUR")
  FJD = CurrencyCodeType.new("FJD")
  FKP = CurrencyCodeType.new("FKP")
  GBP = CurrencyCodeType.new("GBP")
  GEL = CurrencyCodeType.new("GEL")
  GHC = CurrencyCodeType.new("GHC")
  GIP = CurrencyCodeType.new("GIP")
  GMD = CurrencyCodeType.new("GMD")
  GNF = CurrencyCodeType.new("GNF")
  GTQ = CurrencyCodeType.new("GTQ")
  GWP = CurrencyCodeType.new("GWP")
  GYD = CurrencyCodeType.new("GYD")
  HKD = CurrencyCodeType.new("HKD")
  HNL = CurrencyCodeType.new("HNL")
  HRK = CurrencyCodeType.new("HRK")
  HTG = CurrencyCodeType.new("HTG")
  HUF = CurrencyCodeType.new("HUF")
  IDR = CurrencyCodeType.new("IDR")
  ILS = CurrencyCodeType.new("ILS")
  INR = CurrencyCodeType.new("INR")
  IQD = CurrencyCodeType.new("IQD")
  IRR = CurrencyCodeType.new("IRR")
  ISK = CurrencyCodeType.new("ISK")
  JMD = CurrencyCodeType.new("JMD")
  JOD = CurrencyCodeType.new("JOD")
  JPY = CurrencyCodeType.new("JPY")
  KES = CurrencyCodeType.new("KES")
  KGS = CurrencyCodeType.new("KGS")
  KHR = CurrencyCodeType.new("KHR")
  KMF = CurrencyCodeType.new("KMF")
  KPW = CurrencyCodeType.new("KPW")
  KRW = CurrencyCodeType.new("KRW")
  KWD = CurrencyCodeType.new("KWD")
  KYD = CurrencyCodeType.new("KYD")
  KZT = CurrencyCodeType.new("KZT")
  LAK = CurrencyCodeType.new("LAK")
  LBP = CurrencyCodeType.new("LBP")
  LKR = CurrencyCodeType.new("LKR")
  LRD = CurrencyCodeType.new("LRD")
  LSL = CurrencyCodeType.new("LSL")
  LTL = CurrencyCodeType.new("LTL")
  LVL = CurrencyCodeType.new("LVL")
  LYD = CurrencyCodeType.new("LYD")
  MAD = CurrencyCodeType.new("MAD")
  MDL = CurrencyCodeType.new("MDL")
  MGF = CurrencyCodeType.new("MGF")
  MKD = CurrencyCodeType.new("MKD")
  MMK = CurrencyCodeType.new("MMK")
  MNT = CurrencyCodeType.new("MNT")
  MOP = CurrencyCodeType.new("MOP")
  MRO = CurrencyCodeType.new("MRO")
  MTL = CurrencyCodeType.new("MTL")
  MUR = CurrencyCodeType.new("MUR")
  MVR = CurrencyCodeType.new("MVR")
  MWK = CurrencyCodeType.new("MWK")
  MXN = CurrencyCodeType.new("MXN")
  MXV = CurrencyCodeType.new("MXV")
  MYR = CurrencyCodeType.new("MYR")
  MZM = CurrencyCodeType.new("MZM")
  NAD = CurrencyCodeType.new("NAD")
  NGN = CurrencyCodeType.new("NGN")
  NIO = CurrencyCodeType.new("NIO")
  NOK = CurrencyCodeType.new("NOK")
  NPR = CurrencyCodeType.new("NPR")
  NZD = CurrencyCodeType.new("NZD")
  OMR = CurrencyCodeType.new("OMR")
  PAB = CurrencyCodeType.new("PAB")
  PEN = CurrencyCodeType.new("PEN")
  PGK = CurrencyCodeType.new("PGK")
  PHP = CurrencyCodeType.new("PHP")
  PKR = CurrencyCodeType.new("PKR")
  PLN = CurrencyCodeType.new("PLN")
  PYG = CurrencyCodeType.new("PYG")
  QAR = CurrencyCodeType.new("QAR")
  ROL = CurrencyCodeType.new("ROL")
  RUB = CurrencyCodeType.new("RUB")
  RUR = CurrencyCodeType.new("RUR")
  RWF = CurrencyCodeType.new("RWF")
  SAR = CurrencyCodeType.new("SAR")
  SBD = CurrencyCodeType.new("SBD")
  SCR = CurrencyCodeType.new("SCR")
  SDD = CurrencyCodeType.new("SDD")
  SEK = CurrencyCodeType.new("SEK")
  SGD = CurrencyCodeType.new("SGD")
  SHP = CurrencyCodeType.new("SHP")
  SIT = CurrencyCodeType.new("SIT")
  SKK = CurrencyCodeType.new("SKK")
  SLL = CurrencyCodeType.new("SLL")
  SOS = CurrencyCodeType.new("SOS")
  SRG = CurrencyCodeType.new("SRG")
  STD = CurrencyCodeType.new("STD")
  SVC = CurrencyCodeType.new("SVC")
  SYP = CurrencyCodeType.new("SYP")
  SZL = CurrencyCodeType.new("SZL")
  THB = CurrencyCodeType.new("THB")
  TJS = CurrencyCodeType.new("TJS")
  TMM = CurrencyCodeType.new("TMM")
  TND = CurrencyCodeType.new("TND")
  TOP = CurrencyCodeType.new("TOP")
  TPE = CurrencyCodeType.new("TPE")
  TRL = CurrencyCodeType.new("TRL")
  TTD = CurrencyCodeType.new("TTD")
  TWD = CurrencyCodeType.new("TWD")
  TZS = CurrencyCodeType.new("TZS")
  UAH = CurrencyCodeType.new("UAH")
  UGX = CurrencyCodeType.new("UGX")
  USD = CurrencyCodeType.new("USD")
  USN = CurrencyCodeType.new("USN")
  USS = CurrencyCodeType.new("USS")
  UYU = CurrencyCodeType.new("UYU")
  UZS = CurrencyCodeType.new("UZS")
  VEB = CurrencyCodeType.new("VEB")
  VND = CurrencyCodeType.new("VND")
  VUV = CurrencyCodeType.new("VUV")
  WST = CurrencyCodeType.new("WST")
  XAF = CurrencyCodeType.new("XAF")
  XCD = CurrencyCodeType.new("XCD")
  XOF = CurrencyCodeType.new("XOF")
  XPF = CurrencyCodeType.new("XPF")
  YER = CurrencyCodeType.new("YER")
  YUM = CurrencyCodeType.new("YUM")
  ZAR = CurrencyCodeType.new("ZAR")
  ZMK = CurrencyCodeType.new("ZMK")
  ZWD = CurrencyCodeType.new("ZWD")
end

# {urn:ebay:apis:eBLBaseComponents}DateSpecifierCodeType
class DateSpecifierCodeType < ::String
  CustomCode = DateSpecifierCodeType.new("CustomCode")
  D = DateSpecifierCodeType.new("D")
  M = DateSpecifierCodeType.new("M")
  Y = DateSpecifierCodeType.new("Y")
end

# {urn:ebay:apis:eBLBaseComponents}DaysCodeType
class DaysCodeType < ::String
  CustomCode = DaysCodeType.new("CustomCode")
  EveryDay = DaysCodeType.new("EveryDay")
  None = DaysCodeType.new("None")
  Weekdays = DaysCodeType.new("Weekdays")
  Weekends = DaysCodeType.new("Weekends")
end

# {urn:ebay:apis:eBLBaseComponents}DepositTypeCodeType
class DepositTypeCodeType < ::String
  CustomCode = DepositTypeCodeType.new("CustomCode")
  FastDeposit = DepositTypeCodeType.new("FastDeposit")
  None = DepositTypeCodeType.new("None")
  OtherMethod = DepositTypeCodeType.new("OtherMethod")
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionReviseModeCodeType
class DescriptionReviseModeCodeType < ::String
  Append = DescriptionReviseModeCodeType.new("Append")
  CustomCode = DescriptionReviseModeCodeType.new("CustomCode")
  Prepend = DescriptionReviseModeCodeType.new("Prepend")
  Replace = DescriptionReviseModeCodeType.new("Replace")
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateCodeType
class DescriptionTemplateCodeType < ::String
  CustomCode = DescriptionTemplateCodeType.new("CustomCode")
  Layout = DescriptionTemplateCodeType.new("Layout")
  Theme = DescriptionTemplateCodeType.new("Theme")
end

# {urn:ebay:apis:eBLBaseComponents}DetailNameCodeType
class DetailNameCodeType < ::String
  CountryDetails = DetailNameCodeType.new("CountryDetails")
  CurrencyDetails = DetailNameCodeType.new("CurrencyDetails")
  CustomCode = DetailNameCodeType.new("CustomCode")
  DispatchTimeMaxDetails = DetailNameCodeType.new("DispatchTimeMaxDetails")
  ItemSpecificDetails = DetailNameCodeType.new("ItemSpecificDetails")
  PaymentOptionDetails = DetailNameCodeType.new("PaymentOptionDetails")
  RegionDetails = DetailNameCodeType.new("RegionDetails")
  RegionOfOriginDetails = DetailNameCodeType.new("RegionOfOriginDetails")
  ReturnPolicyDetails = DetailNameCodeType.new("ReturnPolicyDetails")
  ShippingCarrierDetails = DetailNameCodeType.new("ShippingCarrierDetails")
  ShippingLocationDetails = DetailNameCodeType.new("ShippingLocationDetails")
  ShippingPackageDetails = DetailNameCodeType.new("ShippingPackageDetails")
  ShippingServiceDetails = DetailNameCodeType.new("ShippingServiceDetails")
  SiteDetails = DetailNameCodeType.new("SiteDetails")
  TaxJurisdiction = DetailNameCodeType.new("TaxJurisdiction")
  TimeZoneDetails = DetailNameCodeType.new("TimeZoneDetails")
  URLDetails = DetailNameCodeType.new("URLDetails")
  UnitOfMeasurementDetails = DetailNameCodeType.new("UnitOfMeasurementDetails")
end

# {urn:ebay:apis:eBLBaseComponents}DeviceTypeCodeType
class DeviceTypeCodeType < ::String
  ClientAlerts = DeviceTypeCodeType.new("ClientAlerts")
  CustomCode = DeviceTypeCodeType.new("CustomCode")
  Platform = DeviceTypeCodeType.new("Platform")
  SMS = DeviceTypeCodeType.new("SMS")
end

# {urn:ebay:apis:eBLBaseComponents}DiscountCodeType
class DiscountCodeType < ::String
  CustomCode = DiscountCodeType.new("CustomCode")
  Percentage = DiscountCodeType.new("Percentage")
  Price = DiscountCodeType.new("Price")
end

# {urn:ebay:apis:eBLBaseComponents}DiscountNameCodeType
class DiscountNameCodeType < ::String
  CombinedItemWeight = DiscountNameCodeType.new("CombinedItemWeight")
  CustomCode = DiscountNameCodeType.new("CustomCode")
  EachAdditionalAmount = DiscountNameCodeType.new("EachAdditionalAmount")
  EachAdditionalAmountOff = DiscountNameCodeType.new("EachAdditionalAmountOff")
  EachAdditionalPercentOff = DiscountNameCodeType.new("EachAdditionalPercentOff")
  IndividualItemWeight = DiscountNameCodeType.new("IndividualItemWeight")
  MaximumShippingCostPerOrder = DiscountNameCodeType.new("MaximumShippingCostPerOrder")
  ShippingCostXForAmountY = DiscountNameCodeType.new("ShippingCostXForAmountY")
  ShippingCostXForItemCountN = DiscountNameCodeType.new("ShippingCostXForItemCountN")
  WeightOff = DiscountNameCodeType.new("WeightOff")
end

# {urn:ebay:apis:eBLBaseComponents}DisplayPayNowButtonCodeType
class DisplayPayNowButtonCodeType < ::String
  CustomCode = DisplayPayNowButtonCodeType.new("CustomCode")
  ShowPayNowButtonForAllPaymentMethods = DisplayPayNowButtonCodeType.new("ShowPayNowButtonForAllPaymentMethods")
  ShowPayNowButtonForPayPalOnly = DisplayPayNowButtonCodeType.new("ShowPayNowButtonForPayPalOnly")
end

# {urn:ebay:apis:eBLBaseComponents}EBaySubscriptionTypeCodeType
class EBaySubscriptionTypeCodeType < ::String
  CustomCode = EBaySubscriptionTypeCodeType.new("CustomCode")
  EBayStoreAnchor = EBaySubscriptionTypeCodeType.new("EBayStoreAnchor")
  EBayStoreBasic = EBaySubscriptionTypeCodeType.new("EBayStoreBasic")
  EBayStoreFeatured = EBaySubscriptionTypeCodeType.new("EBayStoreFeatured")
  FileExchange = EBaySubscriptionTypeCodeType.new("FileExchange")
  LocalMarketPremium = EBaySubscriptionTypeCodeType.new("LocalMarketPremium")
  LocalMarketRegular = EBaySubscriptionTypeCodeType.new("LocalMarketRegular")
  LocalMarketSpecialty = EBaySubscriptionTypeCodeType.new("LocalMarketSpecialty")
  PictureManagerLevel1 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel1")
  PictureManagerLevel2 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel2")
  PictureManagerLevel3 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel3")
  PictureManagerLevel4 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel4")
  PictureManagerLevel5 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel5")
  PictureManagerLevel6 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel6")
  PictureManagerLevel7 = EBaySubscriptionTypeCodeType.new("PictureManagerLevel7")
  SellerAssistant = EBaySubscriptionTypeCodeType.new("SellerAssistant")
  SellerAssistantPro = EBaySubscriptionTypeCodeType.new("SellerAssistantPro")
  SellerReportsBasic = EBaySubscriptionTypeCodeType.new("SellerReportsBasic")
  SellerReportsPlus = EBaySubscriptionTypeCodeType.new("SellerReportsPlus")
  SellingManager = EBaySubscriptionTypeCodeType.new("SellingManager")
  SellingManagerPro = EBaySubscriptionTypeCodeType.new("SellingManagerPro")
end

# {urn:ebay:apis:eBLBaseComponents}EnableCodeType
class EnableCodeType < ::String
  CustomCode = EnableCodeType.new("CustomCode")
  Disable = EnableCodeType.new("Disable")
  Enable = EnableCodeType.new("Enable")
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionLogoTypeCodeType
class EndOfAuctionLogoTypeCodeType < ::String
  CustomCode = EndOfAuctionLogoTypeCodeType.new("CustomCode")
  Customized = EndOfAuctionLogoTypeCodeType.new("Customized")
  None = EndOfAuctionLogoTypeCodeType.new("None")
  Store = EndOfAuctionLogoTypeCodeType.new("Store")
  WinningBidderNotice = EndOfAuctionLogoTypeCodeType.new("WinningBidderNotice")
end

# {urn:ebay:apis:eBLBaseComponents}EndReasonCodeType
class EndReasonCodeType < ::String
  CustomCode = EndReasonCodeType.new("CustomCode")
  Incorrect = EndReasonCodeType.new("Incorrect")
  LostOrBroken = EndReasonCodeType.new("LostOrBroken")
  NotAvailable = EndReasonCodeType.new("NotAvailable")
  OtherListingError = EndReasonCodeType.new("OtherListingError")
  SellToHighBidder = EndReasonCodeType.new("SellToHighBidder")
end

# {urn:ebay:apis:eBLBaseComponents}EscrowCodeType
class EscrowCodeType < ::String
  ByBuyer = EscrowCodeType.new("ByBuyer")
  BySeller = EscrowCodeType.new("BySeller")
  CustomCode = EscrowCodeType.new("CustomCode")
  None = EscrowCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}ExpressSellingPreferenceCodeType
class ExpressSellingPreferenceCodeType < ::String
  All = ExpressSellingPreferenceCodeType.new("All")
  CustomCode = ExpressSellingPreferenceCodeType.new("CustomCode")
  ExpressOnly = ExpressSellingPreferenceCodeType.new("ExpressOnly")
  OptOut = ExpressSellingPreferenceCodeType.new("OptOut")
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductCodeType
class ExternalProductCodeType < ::String
  CustomCode = ExternalProductCodeType.new("CustomCode")
  EAN = ExternalProductCodeType.new("EAN")
  ISBN = ExternalProductCodeType.new("ISBN")
  Keywords = ExternalProductCodeType.new("Keywords")
  MPN = ExternalProductCodeType.new("MPN")
  ProductID = ExternalProductCodeType.new("ProductID")
  UPC = ExternalProductCodeType.new("UPC")
end

# {urn:ebay:apis:eBLBaseComponents}FeatureIDCodeType
class FeatureIDCodeType < ::String
  AdFormatEnabled = FeatureIDCodeType.new("AdFormatEnabled")
  BasicUpgradePack = FeatureIDCodeType.new("BasicUpgradePack")
  BestOfferAutoAcceptEnabled = FeatureIDCodeType.new("BestOfferAutoAcceptEnabled")
  BestOfferAutoDeclineEnabled = FeatureIDCodeType.new("BestOfferAutoDeclineEnabled")
  BestOfferCounterEnabled = FeatureIDCodeType.new("BestOfferCounterEnabled")
  BestOfferEnabled = FeatureIDCodeType.new("BestOfferEnabled")
  BuyerGuaranteeEnabled = FeatureIDCodeType.new("BuyerGuaranteeEnabled")
  ClassifiedAdAutoAcceptEnabled = FeatureIDCodeType.new("ClassifiedAdAutoAcceptEnabled")
  ClassifiedAdAutoDeclineEnabled = FeatureIDCodeType.new("ClassifiedAdAutoDeclineEnabled")
  ClassifiedAdBestOfferEnabled = FeatureIDCodeType.new("ClassifiedAdBestOfferEnabled")
  ClassifiedAdCompanyNameEnabled = FeatureIDCodeType.new("ClassifiedAdCompanyNameEnabled")
  ClassifiedAdContactByAddressEnabled = FeatureIDCodeType.new("ClassifiedAdContactByAddressEnabled")
  ClassifiedAdContactByEmailAvailable = FeatureIDCodeType.new("ClassifiedAdContactByEmailAvailable")
  ClassifiedAdContactByEmailEnabled = FeatureIDCodeType.new("ClassifiedAdContactByEmailEnabled")
  ClassifiedAdContactByPhoneEnabled = FeatureIDCodeType.new("ClassifiedAdContactByPhoneEnabled")
  ClassifiedAdCounterOfferEnabled = FeatureIDCodeType.new("ClassifiedAdCounterOfferEnabled")
  ClassifiedAdMaximumBestOffersAllowed = FeatureIDCodeType.new("ClassifiedAdMaximumBestOffersAllowed")
  ClassifiedAdPayPerLeadEnabled = FeatureIDCodeType.new("ClassifiedAdPayPerLeadEnabled")
  ClassifiedAdPaymentMethodEnabled = FeatureIDCodeType.new("ClassifiedAdPaymentMethodEnabled")
  ClassifiedAdShippingMethodEnabled = FeatureIDCodeType.new("ClassifiedAdShippingMethodEnabled")
  CombinedFixedPriceTreatment = FeatureIDCodeType.new("CombinedFixedPriceTreatment")
  CrossBorderTradeEnabled = FeatureIDCodeType.new("CrossBorderTradeEnabled")
  CustomCode = FeatureIDCodeType.new("CustomCode")
  DigitalDeliveryEnabled = FeatureIDCodeType.new("DigitalDeliveryEnabled")
  DutchBINEnabled = FeatureIDCodeType.new("DutchBINEnabled")
  EBayMotorsProAdFormatEnabled = FeatureIDCodeType.new("eBayMotorsProAdFormatEnabled")
  EBayMotorsProAutoAcceptEnabled = FeatureIDCodeType.new("eBayMotorsProAutoAcceptEnabled")
  EBayMotorsProAutoDeclineEnabled = FeatureIDCodeType.new("eBayMotorsProAutoDeclineEnabled")
  EBayMotorsProBestOfferEnabled = FeatureIDCodeType.new("eBayMotorsProBestOfferEnabled")
  EBayMotorsProCompanyNameEnabled = FeatureIDCodeType.new("eBayMotorsProCompanyNameEnabled")
  EBayMotorsProContactByAddressEnabled = FeatureIDCodeType.new("eBayMotorsProContactByAddressEnabled")
  EBayMotorsProContactByEmailEnabled = FeatureIDCodeType.new("eBayMotorsProContactByEmailEnabled")
  EBayMotorsProContactByPhoneEnabled = FeatureIDCodeType.new("eBayMotorsProContactByPhoneEnabled")
  EBayMotorsProCounterOfferEnabled = FeatureIDCodeType.new("eBayMotorsProCounterOfferEnabled")
  EBayMotorsProPaymentMethodCheckOutEnabled = FeatureIDCodeType.new("eBayMotorsProPaymentMethodCheckOutEnabled")
  EBayMotorsProSellerContactDetailsEnabled = FeatureIDCodeType.new("eBayMotorsProSellerContactDetailsEnabled")
  EBayMotorsProShippingMethodEnabled = FeatureIDCodeType.new("eBayMotorsProShippingMethodEnabled")
  ExpressConditionRequired = FeatureIDCodeType.new("ExpressConditionRequired")
  ExpressEnabled = FeatureIDCodeType.new("ExpressEnabled")
  ExpressPicturesRequired = FeatureIDCodeType.new("ExpressPicturesRequired")
  GalleryFeaturedDurations = FeatureIDCodeType.new("GalleryFeaturedDurations")
  HandlingTimeEnabled = FeatureIDCodeType.new("HandlingTimeEnabled")
  HomePageFeaturedEnabled = FeatureIDCodeType.new("HomePageFeaturedEnabled")
  INEscrowWorkflowTimeline = FeatureIDCodeType.new("INEscrowWorkflowTimeline")
  ItemSpecificsEnabled = FeatureIDCodeType.new("ItemSpecificsEnabled")
  ListingDurations = FeatureIDCodeType.new("ListingDurations")
  LocalListingDistances = FeatureIDCodeType.new("LocalListingDistances")
  LocalMarketAdFormatEnabled = FeatureIDCodeType.new("LocalMarketAdFormatEnabled")
  LocalMarketAutoAcceptEnabled = FeatureIDCodeType.new("LocalMarketAutoAcceptEnabled")
  LocalMarketAutoDeclineEnabled = FeatureIDCodeType.new("LocalMarketAutoDeclineEnabled")
  LocalMarketBestOfferEnabled = FeatureIDCodeType.new("LocalMarketBestOfferEnabled")
  LocalMarketCompanyNameEnabled = FeatureIDCodeType.new("LocalMarketCompanyNameEnabled")
  LocalMarketContactByAddressEnabled = FeatureIDCodeType.new("LocalMarketContactByAddressEnabled")
  LocalMarketContactByEmailEnabled = FeatureIDCodeType.new("LocalMarketContactByEmailEnabled")
  LocalMarketContactByPhoneEnabled = FeatureIDCodeType.new("LocalMarketContactByPhoneEnabled")
  LocalMarketCounterOfferEnabled = FeatureIDCodeType.new("LocalMarketCounterOfferEnabled")
  LocalMarketNonSubscription = FeatureIDCodeType.new("LocalMarketNonSubscription")
  LocalMarketPaymentMethodCheckOutEnabled = FeatureIDCodeType.new("LocalMarketPaymentMethodCheckOutEnabled")
  LocalMarketPremiumSubscription = FeatureIDCodeType.new("LocalMarketPremiumSubscription")
  LocalMarketRegularSubscription = FeatureIDCodeType.new("LocalMarketRegularSubscription")
  LocalMarketSellerContactDetailsEnabled = FeatureIDCodeType.new("LocalMarketSellerContactDetailsEnabled")
  LocalMarketShippingMethodEnabled = FeatureIDCodeType.new("LocalMarketShippingMethodEnabled")
  LocalMarketSpecialitySubscription = FeatureIDCodeType.new("LocalMarketSpecialitySubscription")
  MaximumBestOffersAllowed = FeatureIDCodeType.new("MaximumBestOffersAllowed")
  MinimumReservePrice = FeatureIDCodeType.new("MinimumReservePrice")
  NonSubscription = FeatureIDCodeType.new("NonSubscription")
  PaisaPayFullEscrowEnabled = FeatureIDCodeType.new("PaisaPayFullEscrowEnabled")
  PayPalBuyerProtectionEnabled = FeatureIDCodeType.new("PayPalBuyerProtectionEnabled")
  PayPalRequired = FeatureIDCodeType.new("PayPalRequired")
  PayPalRequiredForStoreOwner = FeatureIDCodeType.new("PayPalRequiredForStoreOwner")
  PremiumSubscription = FeatureIDCodeType.new("PremiumSubscription")
  ProPack = FeatureIDCodeType.new("ProPack")
  ProPackPlus = FeatureIDCodeType.new("ProPackPlus")
  RegularSubscription = FeatureIDCodeType.new("RegularSubscription")
  ReturnPolicyEnabled = FeatureIDCodeType.new("ReturnPolicyEnabled")
  RevisePriceAllowed = FeatureIDCodeType.new("RevisePriceAllowed")
  ReviseQuantityAllowed = FeatureIDCodeType.new("ReviseQuantityAllowed")
  SafePaymentRequired = FeatureIDCodeType.new("SafePaymentRequired")
  SellerContactDetailsEnabled = FeatureIDCodeType.new("SellerContactDetailsEnabled")
  ShippingTermsRequired = FeatureIDCodeType.new("ShippingTermsRequired")
  SkypeMeNonTransactionalEnabled = FeatureIDCodeType.new("SkypeMeNonTransactionalEnabled")
  SkypeMeTransactionalEnabled = FeatureIDCodeType.new("SkypeMeTransactionalEnabled")
  SpecialitySubscription = FeatureIDCodeType.new("SpecialitySubscription")
  StoreInventoryEnabled = FeatureIDCodeType.new("StoreInventoryEnabled")
  StoreOwnerExtendedListingDurations = FeatureIDCodeType.new("StoreOwnerExtendedListingDurations")
  StoreOwnerExtendedListingDurationsEnabled = FeatureIDCodeType.new("StoreOwnerExtendedListingDurationsEnabled")
  TransactionConfirmationRequestEnabled = FeatureIDCodeType.new("TransactionConfirmationRequestEnabled")
  UserConsentRequired = FeatureIDCodeType.new("UserConsentRequired")
  ValuePack = FeatureIDCodeType.new("ValuePack")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRatingDetailCodeType
class FeedbackRatingDetailCodeType < ::String
  Communication = FeedbackRatingDetailCodeType.new("Communication")
  CustomCode = FeedbackRatingDetailCodeType.new("CustomCode")
  ItemAsDescribed = FeedbackRatingDetailCodeType.new("ItemAsDescribed")
  ShippingAndHandlingCharges = FeedbackRatingDetailCodeType.new("ShippingAndHandlingCharges")
  ShippingTime = FeedbackRatingDetailCodeType.new("ShippingTime")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRatingStarCodeType
class FeedbackRatingStarCodeType < ::String
  Blue = FeedbackRatingStarCodeType.new("Blue")
  CustomCode = FeedbackRatingStarCodeType.new("CustomCode")
  Green = FeedbackRatingStarCodeType.new("Green")
  None = FeedbackRatingStarCodeType.new("None")
  Purple = FeedbackRatingStarCodeType.new("Purple")
  PurpleShooting = FeedbackRatingStarCodeType.new("PurpleShooting")
  Red = FeedbackRatingStarCodeType.new("Red")
  RedShooting = FeedbackRatingStarCodeType.new("RedShooting")
  Turquoise = FeedbackRatingStarCodeType.new("Turquoise")
  TurquoiseShooting = FeedbackRatingStarCodeType.new("TurquoiseShooting")
  Yellow = FeedbackRatingStarCodeType.new("Yellow")
  YellowShooting = FeedbackRatingStarCodeType.new("YellowShooting")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackResponseCodeType
class FeedbackResponseCodeType < ::String
  CustomCode = FeedbackResponseCodeType.new("CustomCode")
  FollowUp = FeedbackResponseCodeType.new("FollowUp")
  Reply = FeedbackResponseCodeType.new("Reply")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackSummaryPeriodCodeType
class FeedbackSummaryPeriodCodeType < ::String
  CustomCode = FeedbackSummaryPeriodCodeType.new("CustomCode")
  FiftyTwoWeeks = FeedbackSummaryPeriodCodeType.new("FiftyTwoWeeks")
  ThirtyDays = FeedbackSummaryPeriodCodeType.new("ThirtyDays")
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCodeType
class FlatRateInsuranceRangeCodeType < ::String
  CustomCode = FlatRateInsuranceRangeCodeType.new("CustomCode")
  FlatRateInsuranceRange1 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange1")
  FlatRateInsuranceRange2 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange2")
  FlatRateInsuranceRange3 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange3")
  FlatRateInsuranceRange4 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange4")
  FlatRateInsuranceRange5 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange5")
  FlatRateInsuranceRange6 = FlatRateInsuranceRangeCodeType.new("FlatRateInsuranceRange6")
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingRateOptionCodeType
class FlatShippingRateOptionCodeType < ::String
  ChargeAmountForEachAdditionalItem = FlatShippingRateOptionCodeType.new("ChargeAmountForEachAdditionalItem")
  CustomCode = FlatShippingRateOptionCodeType.new("CustomCode")
  DeductAmountFromEachAdditionalItem = FlatShippingRateOptionCodeType.new("DeductAmountFromEachAdditionalItem")
  ShipAdditionalItemsFree = FlatShippingRateOptionCodeType.new("ShipAdditionalItemsFree")
end

# {urn:ebay:apis:eBLBaseComponents}GallerySortFilterCodeType
class GallerySortFilterCodeType < ::String
  CustomCode = GallerySortFilterCodeType.new("CustomCode")
  ShowAnyItems = GallerySortFilterCodeType.new("ShowAnyItems")
  ShowItemsWithGalleryImagesFirst = GallerySortFilterCodeType.new("ShowItemsWithGalleryImagesFirst")
  ShowOnlyItemsWithGalleryImages = GallerySortFilterCodeType.new("ShowOnlyItemsWithGalleryImages")
end

# {urn:ebay:apis:eBLBaseComponents}GalleryTypeCodeType
class GalleryTypeCodeType < ::String
  CustomCode = GalleryTypeCodeType.new("CustomCode")
  Featured = GalleryTypeCodeType.new("Featured")
  Gallery = GalleryTypeCodeType.new("Gallery")
  None = GalleryTypeCodeType.new("None")
  Plus = GalleryTypeCodeType.new("Plus")
end

# {urn:ebay:apis:eBLBaseComponents}GeneralPaymentMethodCodeType
class GeneralPaymentMethodCodeType < ::String
  ACH = GeneralPaymentMethodCodeType.new("ACH")
  Creditcard = GeneralPaymentMethodCodeType.new("Creditcard")
  CustomCode = GeneralPaymentMethodCodeType.new("CustomCode")
  Echeck = GeneralPaymentMethodCodeType.new("Echeck")
  Other = GeneralPaymentMethodCodeType.new("Other")
  PayPalBalance = GeneralPaymentMethodCodeType.new("PayPalBalance")
end

# {urn:ebay:apis:eBLBaseComponents}GeographicExposureCodeType
class GeographicExposureCodeType < ::String
  CustomCode = GeographicExposureCodeType.new("CustomCode")
  LocalOnly = GeographicExposureCodeType.new("LocalOnly")
  LocalOptional = GeographicExposureCodeType.new("LocalOptional")
  National = GeographicExposureCodeType.new("National")
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersModeCodeType
class GetAllBiddersModeCodeType < ::String
  CustomCode = GetAllBiddersModeCodeType.new("CustomCode")
  EndedListing = GetAllBiddersModeCodeType.new("EndedListing")
  SecondChanceEligibleEndedListing = GetAllBiddersModeCodeType.new("SecondChanceEligibleEndedListing")
  ViewAll = GetAllBiddersModeCodeType.new("ViewAll")
end

# {urn:ebay:apis:eBLBaseComponents}GiftServicesCodeType
class GiftServicesCodeType < ::String
  CustomCode = GiftServicesCodeType.new("CustomCode")
  GiftExpressShipping = GiftServicesCodeType.new("GiftExpressShipping")
  GiftShipToRecipient = GiftServicesCodeType.new("GiftShipToRecipient")
  GiftWrap = GiftServicesCodeType.new("GiftWrap")
end

# {urn:ebay:apis:eBLBaseComponents}GranularityLevelCodeType
class GranularityLevelCodeType < ::String
  Coarse = GranularityLevelCodeType.new("Coarse")
  CustomCode = GranularityLevelCodeType.new("CustomCode")
  Fine = GranularityLevelCodeType.new("Fine")
  Medium = GranularityLevelCodeType.new("Medium")
end

# {urn:ebay:apis:eBLBaseComponents}HandlingNameCodeType
class HandlingNameCodeType < ::String
  CombinedHandlingFee = HandlingNameCodeType.new("CombinedHandlingFee")
  CustomCode = HandlingNameCodeType.new("CustomCode")
  EachAdditionalAmount = HandlingNameCodeType.new("EachAdditionalAmount")
  EachAdditionalAmountOff = HandlingNameCodeType.new("EachAdditionalAmountOff")
  EachAdditionalPercentOff = HandlingNameCodeType.new("EachAdditionalPercentOff")
  IndividualHandlingFee = HandlingNameCodeType.new("IndividualHandlingFee")
end

# {urn:ebay:apis:eBLBaseComponents}HitCounterCodeType
class HitCounterCodeType < ::String
  BasicStyle = HitCounterCodeType.new("BasicStyle")
  CustomCode = HitCounterCodeType.new("CustomCode")
  GreenLED = HitCounterCodeType.new("GreenLED")
  Hidden = HitCounterCodeType.new("Hidden")
  HiddenStyle = HitCounterCodeType.new("HiddenStyle")
  HonestyStyle = HitCounterCodeType.new("HonestyStyle")
  NoHitCounter = HitCounterCodeType.new("NoHitCounter")
  RetroStyle = HitCounterCodeType.new("RetroStyle")
end

# {urn:ebay:apis:eBLBaseComponents}INEscrowWorkflowTimelineCodeType
class INEscrowWorkflowTimelineCodeType < ::String
  CustomCode = INEscrowWorkflowTimelineCodeType.new("CustomCode")
  Default = INEscrowWorkflowTimelineCodeType.new("Default")
  WorkflowA = INEscrowWorkflowTimelineCodeType.new("WorkflowA")
  WorkflowB = INEscrowWorkflowTimelineCodeType.new("WorkflowB")
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceOptionCodeType
class InsuranceOptionCodeType < ::String
  CustomCode = InsuranceOptionCodeType.new("CustomCode")
  IncludedInShippingHandling = InsuranceOptionCodeType.new("IncludedInShippingHandling")
  NotOffered = InsuranceOptionCodeType.new("NotOffered")
  NotOfferedOnSite = InsuranceOptionCodeType.new("NotOfferedOnSite")
  Optional = InsuranceOptionCodeType.new("Optional")
  Required = InsuranceOptionCodeType.new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceSelectedCodeType
class InsuranceSelectedCodeType < ::String
  CustomCode = InsuranceSelectedCodeType.new("CustomCode")
  IncludedInShippingHandling = InsuranceSelectedCodeType.new("IncludedInShippingHandling")
  NotOffered = InsuranceSelectedCodeType.new("NotOffered")
  OfferedNotSelected = InsuranceSelectedCodeType.new("OfferedNotSelected")
  OfferedSelected = InsuranceSelectedCodeType.new("OfferedSelected")
  Required = InsuranceSelectedCodeType.new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}InventoryTrackingMethodCodeType
class InventoryTrackingMethodCodeType < ::String
  CustomCode = InventoryTrackingMethodCodeType.new("CustomCode")
  ItemID = InventoryTrackingMethodCodeType.new("ItemID")
  SKU = InventoryTrackingMethodCodeType.new("SKU")
end

# {urn:ebay:apis:eBLBaseComponents}ItemConditionCodeType
class ItemConditionCodeType < ::String
  CustomCode = ItemConditionCodeType.new("CustomCode")
  New = ItemConditionCodeType.new("New")
  Used = ItemConditionCodeType.new("Used")
end

# {urn:ebay:apis:eBLBaseComponents}ItemFormatSortFilterCodeType
class ItemFormatSortFilterCodeType < ::String
  CustomCode = ItemFormatSortFilterCodeType.new("CustomCode")
  ShowAnyItems = ItemFormatSortFilterCodeType.new("ShowAnyItems")
  ShowItemsWithBINFirst = ItemFormatSortFilterCodeType.new("ShowItemsWithBINFirst")
  ShowOnlyItemsWithBIN = ItemFormatSortFilterCodeType.new("ShowOnlyItemsWithBIN")
  ShowOnlyStoreItems = ItemFormatSortFilterCodeType.new("ShowOnlyStoreItems")
end

# {urn:ebay:apis:eBLBaseComponents}ItemLocationCodeType
class ItemLocationCodeType < ::String
  CustomCode = ItemLocationCodeType.new("CustomCode")
  ItemAvailableIn = ItemLocationCodeType.new("ItemAvailableIn")
  ItemLocatedIn = ItemLocationCodeType.new("ItemLocatedIn")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortFilterCodeType
class ItemSortFilterCodeType < ::String
  CustomCode = ItemSortFilterCodeType.new("CustomCode")
  EndingLast = ItemSortFilterCodeType.new("EndingLast")
  EndingSoonest = ItemSortFilterCodeType.new("EndingSoonest")
  HighestPrice = ItemSortFilterCodeType.new("HighestPrice")
  LowestPrice = ItemSortFilterCodeType.new("LowestPrice")
  NewlyListed = ItemSortFilterCodeType.new("NewlyListed")
  RandomlySelected = ItemSortFilterCodeType.new("RandomlySelected")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortTypeCodeType
class ItemSortTypeCodeType < ::String
  BestOffer = ItemSortTypeCodeType.new("BestOffer")
  BestOfferCount = ItemSortTypeCodeType.new("BestOfferCount")
  BestOfferCountDescending = ItemSortTypeCodeType.new("BestOfferCountDescending")
  BestOfferDescending = ItemSortTypeCodeType.new("BestOfferDescending")
  BidCount = ItemSortTypeCodeType.new("BidCount")
  BidCountDescending = ItemSortTypeCodeType.new("BidCountDescending")
  BidderCount = ItemSortTypeCodeType.new("BidderCount")
  BidderCountDescending = ItemSortTypeCodeType.new("BidderCountDescending")
  BuyerEmail = ItemSortTypeCodeType.new("BuyerEmail")
  BuyerEmailDescending = ItemSortTypeCodeType.new("BuyerEmailDescending")
  BuyerPostalCode = ItemSortTypeCodeType.new("BuyerPostalCode")
  BuyerPostalCodeDescending = ItemSortTypeCodeType.new("BuyerPostalCodeDescending")
  BuyerUserID = ItemSortTypeCodeType.new("BuyerUserID")
  BuyerUserIDDescending = ItemSortTypeCodeType.new("BuyerUserIDDescending")
  ClassifiedAdPayPerLeadFee = ItemSortTypeCodeType.new("ClassifiedAdPayPerLeadFee")
  ClassifiedAdPayPerLeadFeeDescending = ItemSortTypeCodeType.new("ClassifiedAdPayPerLeadFeeDescending")
  CurrentPrice = ItemSortTypeCodeType.new("CurrentPrice")
  CurrentPriceDescending = ItemSortTypeCodeType.new("CurrentPriceDescending")
  CustomCode = ItemSortTypeCodeType.new("CustomCode")
  EndTime = ItemSortTypeCodeType.new("EndTime")
  EndTimeDescending = ItemSortTypeCodeType.new("EndTimeDescending")
  FeedbackLeft = ItemSortTypeCodeType.new("FeedbackLeft")
  FeedbackLeftDescending = ItemSortTypeCodeType.new("FeedbackLeftDescending")
  FeedbackReceived = ItemSortTypeCodeType.new("FeedbackReceived")
  FeedbackReceivedDescending = ItemSortTypeCodeType.new("FeedbackReceivedDescending")
  HighBidderUserID = ItemSortTypeCodeType.new("HighBidderUserID")
  HighBidderUserIDDescending = ItemSortTypeCodeType.new("HighBidderUserIDDescending")
  ItemID = ItemSortTypeCodeType.new("ItemID")
  ItemIDDescending = ItemSortTypeCodeType.new("ItemIDDescending")
  LeadCount = ItemSortTypeCodeType.new("LeadCount")
  LeadCountDescending = ItemSortTypeCodeType.new("LeadCountDescending")
  ListingDuration = ItemSortTypeCodeType.new("ListingDuration")
  ListingDurationDescending = ItemSortTypeCodeType.new("ListingDurationDescending")
  ListingType = ItemSortTypeCodeType.new("ListingType")
  ListingTypeDescending = ItemSortTypeCodeType.new("ListingTypeDescending")
  MaxBid = ItemSortTypeCodeType.new("MaxBid")
  MaxBidDescending = ItemSortTypeCodeType.new("MaxBidDescending")
  NewLeadCount = ItemSortTypeCodeType.new("NewLeadCount")
  NewLeadCountDescending = ItemSortTypeCodeType.new("NewLeadCountDescending")
  Price = ItemSortTypeCodeType.new("Price")
  PriceDescending = ItemSortTypeCodeType.new("PriceDescending")
  Quantity = ItemSortTypeCodeType.new("Quantity")
  QuantityAvailable = ItemSortTypeCodeType.new("QuantityAvailable")
  QuantityAvailableDescending = ItemSortTypeCodeType.new("QuantityAvailableDescending")
  QuantityDescending = ItemSortTypeCodeType.new("QuantityDescending")
  QuantityPurchased = ItemSortTypeCodeType.new("QuantityPurchased")
  QuantityPurchasedDescending = ItemSortTypeCodeType.new("QuantityPurchasedDescending")
  QuantitySold = ItemSortTypeCodeType.new("QuantitySold")
  QuantitySoldDescending = ItemSortTypeCodeType.new("QuantitySoldDescending")
  QuestionCount = ItemSortTypeCodeType.new("QuestionCount")
  QuestionCountDescending = ItemSortTypeCodeType.new("QuestionCountDescending")
  ReservePrice = ItemSortTypeCodeType.new("ReservePrice")
  ReservePriceDescending = ItemSortTypeCodeType.new("ReservePriceDescending")
  SellerEmail = ItemSortTypeCodeType.new("SellerEmail")
  SellerEmailDescending = ItemSortTypeCodeType.new("SellerEmailDescending")
  SellerUserID = ItemSortTypeCodeType.new("SellerUserID")
  SellerUserIDDescending = ItemSortTypeCodeType.new("SellerUserIDDescending")
  ShippingServiceCost = ItemSortTypeCodeType.new("ShippingServiceCost")
  ShippingServiceCostDescending = ItemSortTypeCodeType.new("ShippingServiceCostDescending")
  SoldPlatform = ItemSortTypeCodeType.new("SoldPlatform")
  SoldPlatformDescending = ItemSortTypeCodeType.new("SoldPlatformDescending")
  StartPrice = ItemSortTypeCodeType.new("StartPrice")
  StartPriceDescending = ItemSortTypeCodeType.new("StartPriceDescending")
  StartTime = ItemSortTypeCodeType.new("StartTime")
  StartTimeDescending = ItemSortTypeCodeType.new("StartTimeDescending")
  TimeLeft = ItemSortTypeCodeType.new("TimeLeft")
  TimeLeftDescending = ItemSortTypeCodeType.new("TimeLeftDescending")
  Title = ItemSortTypeCodeType.new("Title")
  TitleDescending = ItemSortTypeCodeType.new("TitleDescending")
  TotalPrice = ItemSortTypeCodeType.new("TotalPrice")
  TotalPriceDescending = ItemSortTypeCodeType.new("TotalPriceDescending")
  UserID = ItemSortTypeCodeType.new("UserID")
  UserIDDescending = ItemSortTypeCodeType.new("UserIDDescending")
  WatchCount = ItemSortTypeCodeType.new("WatchCount")
  WatchCountDescending = ItemSortTypeCodeType.new("WatchCountDescending")
  WonPlatform = ItemSortTypeCodeType.new("WonPlatform")
  WonPlatformDescending = ItemSortTypeCodeType.new("WonPlatformDescending")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificSourceCodeType
class ItemSpecificSourceCodeType < ::String
  Attribute = ItemSpecificSourceCodeType.new("Attribute")
  CustomCode = ItemSpecificSourceCodeType.new("CustomCode")
  ItemSpecific = ItemSpecificSourceCodeType.new("ItemSpecific")
  Product = ItemSpecificSourceCodeType.new("Product")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificsEnabledCodeType
class ItemSpecificsEnabledCodeType < ::String
  CustomCode = ItemSpecificsEnabledCodeType.new("CustomCode")
  Disabled = ItemSpecificsEnabledCodeType.new("Disabled")
  Enabled = ItemSpecificsEnabledCodeType.new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}ItemTypeCodeType
class ItemTypeCodeType < ::String
  AdFormat = ItemTypeCodeType.new("AdFormat")
  AllFixedPriceItemTypes = ItemTypeCodeType.new("AllFixedPriceItemTypes")
  AllItemTypes = ItemTypeCodeType.new("AllItemTypes")
  AllItems = ItemTypeCodeType.new("AllItems")
  AuctionItemsOnly = ItemTypeCodeType.new("AuctionItemsOnly")
  ClassifiedItemsOnly = ItemTypeCodeType.new("ClassifiedItemsOnly")
  CustomCode = ItemTypeCodeType.new("CustomCode")
  ExcludeStoreInventory = ItemTypeCodeType.new("ExcludeStoreInventory")
  FixedPriceExcludeStoreInventory = ItemTypeCodeType.new("FixedPriceExcludeStoreInventory")
  FixedPricedItem = ItemTypeCodeType.new("FixedPricedItem")
  StoreInventoryOnly = ItemTypeCodeType.new("StoreInventoryOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ItemTypeFilterCodeType
class ItemTypeFilterCodeType < ::String
  AllFixedPriceItemTypes = ItemTypeFilterCodeType.new("AllFixedPriceItemTypes")
  AllItemTypes = ItemTypeFilterCodeType.new("AllItemTypes")
  AllItems = ItemTypeFilterCodeType.new("AllItems")
  AuctionItemsOnly = ItemTypeFilterCodeType.new("AuctionItemsOnly")
  ClassifiedItemsOnly = ItemTypeFilterCodeType.new("ClassifiedItemsOnly")
  CustomCode = ItemTypeFilterCodeType.new("CustomCode")
  ExcludeStoreInventory = ItemTypeFilterCodeType.new("ExcludeStoreInventory")
  FixedPriceExcludeStoreInventory = ItemTypeFilterCodeType.new("FixedPriceExcludeStoreInventory")
  FixedPricedItem = ItemTypeFilterCodeType.new("FixedPricedItem")
  StoreInventoryOnly = ItemTypeFilterCodeType.new("StoreInventoryOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationCodeType
class ListingDurationCodeType < ::String
  CustomCode = ListingDurationCodeType.new("CustomCode")
  Days_1 = ListingDurationCodeType.new("Days_1")
  Days_10 = ListingDurationCodeType.new("Days_10")
  Days_120 = ListingDurationCodeType.new("Days_120")
  Days_14 = ListingDurationCodeType.new("Days_14")
  Days_21 = ListingDurationCodeType.new("Days_21")
  Days_3 = ListingDurationCodeType.new("Days_3")
  Days_30 = ListingDurationCodeType.new("Days_30")
  Days_5 = ListingDurationCodeType.new("Days_5")
  Days_60 = ListingDurationCodeType.new("Days_60")
  Days_7 = ListingDurationCodeType.new("Days_7")
  Days_90 = ListingDurationCodeType.new("Days_90")
  GTC = ListingDurationCodeType.new("GTC")
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementDurationCodeType
class ListingEnhancementDurationCodeType < ::String
  CustomCode = ListingEnhancementDurationCodeType.new("CustomCode")
  Days_1 = ListingEnhancementDurationCodeType.new("Days_1")
  Days_10 = ListingEnhancementDurationCodeType.new("Days_10")
  Days_11 = ListingEnhancementDurationCodeType.new("Days_11")
  Days_12 = ListingEnhancementDurationCodeType.new("Days_12")
  Days_13 = ListingEnhancementDurationCodeType.new("Days_13")
  Days_14 = ListingEnhancementDurationCodeType.new("Days_14")
  Days_15 = ListingEnhancementDurationCodeType.new("Days_15")
  Days_16 = ListingEnhancementDurationCodeType.new("Days_16")
  Days_17 = ListingEnhancementDurationCodeType.new("Days_17")
  Days_18 = ListingEnhancementDurationCodeType.new("Days_18")
  Days_19 = ListingEnhancementDurationCodeType.new("Days_19")
  Days_2 = ListingEnhancementDurationCodeType.new("Days_2")
  Days_20 = ListingEnhancementDurationCodeType.new("Days_20")
  Days_21 = ListingEnhancementDurationCodeType.new("Days_21")
  Days_22 = ListingEnhancementDurationCodeType.new("Days_22")
  Days_23 = ListingEnhancementDurationCodeType.new("Days_23")
  Days_24 = ListingEnhancementDurationCodeType.new("Days_24")
  Days_25 = ListingEnhancementDurationCodeType.new("Days_25")
  Days_26 = ListingEnhancementDurationCodeType.new("Days_26")
  Days_27 = ListingEnhancementDurationCodeType.new("Days_27")
  Days_28 = ListingEnhancementDurationCodeType.new("Days_28")
  Days_29 = ListingEnhancementDurationCodeType.new("Days_29")
  Days_3 = ListingEnhancementDurationCodeType.new("Days_3")
  Days_30 = ListingEnhancementDurationCodeType.new("Days_30")
  Days_31 = ListingEnhancementDurationCodeType.new("Days_31")
  Days_32 = ListingEnhancementDurationCodeType.new("Days_32")
  Days_33 = ListingEnhancementDurationCodeType.new("Days_33")
  Days_34 = ListingEnhancementDurationCodeType.new("Days_34")
  Days_35 = ListingEnhancementDurationCodeType.new("Days_35")
  Days_36 = ListingEnhancementDurationCodeType.new("Days_36")
  Days_37 = ListingEnhancementDurationCodeType.new("Days_37")
  Days_38 = ListingEnhancementDurationCodeType.new("Days_38")
  Days_39 = ListingEnhancementDurationCodeType.new("Days_39")
  Days_4 = ListingEnhancementDurationCodeType.new("Days_4")
  Days_40 = ListingEnhancementDurationCodeType.new("Days_40")
  Days_41 = ListingEnhancementDurationCodeType.new("Days_41")
  Days_42 = ListingEnhancementDurationCodeType.new("Days_42")
  Days_43 = ListingEnhancementDurationCodeType.new("Days_43")
  Days_44 = ListingEnhancementDurationCodeType.new("Days_44")
  Days_45 = ListingEnhancementDurationCodeType.new("Days_45")
  Days_46 = ListingEnhancementDurationCodeType.new("Days_46")
  Days_47 = ListingEnhancementDurationCodeType.new("Days_47")
  Days_48 = ListingEnhancementDurationCodeType.new("Days_48")
  Days_49 = ListingEnhancementDurationCodeType.new("Days_49")
  Days_5 = ListingEnhancementDurationCodeType.new("Days_5")
  Days_50 = ListingEnhancementDurationCodeType.new("Days_50")
  Days_6 = ListingEnhancementDurationCodeType.new("Days_6")
  Days_7 = ListingEnhancementDurationCodeType.new("Days_7")
  Days_8 = ListingEnhancementDurationCodeType.new("Days_8")
  Days_9 = ListingEnhancementDurationCodeType.new("Days_9")
  Lifetime = ListingEnhancementDurationCodeType.new("Lifetime")
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementsCodeType
class ListingEnhancementsCodeType < ::String
  BasicUpgradePackBundle = ListingEnhancementsCodeType.new("BasicUpgradePackBundle")
  BoldTitle = ListingEnhancementsCodeType.new("BoldTitle")
  Border = ListingEnhancementsCodeType.new("Border")
  CustomCode = ListingEnhancementsCodeType.new("CustomCode")
  Featured = ListingEnhancementsCodeType.new("Featured")
  Highlight = ListingEnhancementsCodeType.new("Highlight")
  HomePageFeatured = ListingEnhancementsCodeType.new("HomePageFeatured")
  ProPackBundle = ListingEnhancementsCodeType.new("ProPackBundle")
  ProPackPlusBundle = ListingEnhancementsCodeType.new("ProPackPlusBundle")
  ValuePackBundle = ListingEnhancementsCodeType.new("ValuePackBundle")
end

# {urn:ebay:apis:eBLBaseComponents}ListingFlowCodeType
class ListingFlowCodeType < ::String
  AddItem = ListingFlowCodeType.new("AddItem")
  CustomCode = ListingFlowCodeType.new("CustomCode")
  RelistItem = ListingFlowCodeType.new("RelistItem")
  ReviseItem = ListingFlowCodeType.new("ReviseItem")
end

# {urn:ebay:apis:eBLBaseComponents}ListingStatusCodeType
class ListingStatusCodeType < ::String
  Active = ListingStatusCodeType.new("Active")
  Completed = ListingStatusCodeType.new("Completed")
  Custom = ListingStatusCodeType.new("Custom")
  CustomCode = ListingStatusCodeType.new("CustomCode")
  Ended = ListingStatusCodeType.new("Ended")
end

# {urn:ebay:apis:eBLBaseComponents}ListingSubtypeCodeType
class ListingSubtypeCodeType < ::String
  ClassifiedAd = ListingSubtypeCodeType.new("ClassifiedAd")
  CustomCode = ListingSubtypeCodeType.new("CustomCode")
  LocalMarketBestOfferOnly = ListingSubtypeCodeType.new("LocalMarketBestOfferOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ListingTypeCodeType
class ListingTypeCodeType < ::String
  AdType = ListingTypeCodeType.new("AdType")
  Auction = ListingTypeCodeType.new("Auction")
  Chinese = ListingTypeCodeType.new("Chinese")
  CustomCode = ListingTypeCodeType.new("CustomCode")
  Dutch = ListingTypeCodeType.new("Dutch")
  Express = ListingTypeCodeType.new("Express")
  FixedPriceItem = ListingTypeCodeType.new("FixedPriceItem")
  Half = ListingTypeCodeType.new("Half")
  LeadGeneration = ListingTypeCodeType.new("LeadGeneration")
  Live = ListingTypeCodeType.new("Live")
  PersonalOffer = ListingTypeCodeType.new("PersonalOffer")
  Shopping = ListingTypeCodeType.new("Shopping")
  StoresFixedPrice = ListingTypeCodeType.new("StoresFixedPrice")
  Unknown = ListingTypeCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}LogoTypeCodeType
class LogoTypeCodeType < ::String
  Custom = LogoTypeCodeType.new("Custom")
  CustomCode = LogoTypeCodeType.new("CustomCode")
  Store = LogoTypeCodeType.new("Store")
  WinningBidderNotice = LogoTypeCodeType.new("WinningBidderNotice")
end

# {urn:ebay:apis:eBLBaseComponents}MailOptionsTypeCodeType
class MailOptionsTypeCodeType < ::String
  CustomCode = MailOptionsTypeCodeType.new("CustomCode")
  DoNotSendEmail = MailOptionsTypeCodeType.new("DoNotSendEmail")
  EmailCopyToSender = MailOptionsTypeCodeType.new("EmailCopyToSender")
  HideSenderEmailAddress = MailOptionsTypeCodeType.new("HideSenderEmailAddress")
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownEventTypeCodeType
class MarkUpMarkDownEventTypeCodeType < ::String
  CustomCode = MarkUpMarkDownEventTypeCodeType.new("CustomCode")
  MarkDown = MarkUpMarkDownEventTypeCodeType.new("MarkDown")
  MarkUp = MarkUpMarkDownEventTypeCodeType.new("MarkUp")
end

# {urn:ebay:apis:eBLBaseComponents}MerchDisplayCodeType
class MerchDisplayCodeType < ::String
  CustomCode = MerchDisplayCodeType.new("CustomCode")
  DefaultTheme = MerchDisplayCodeType.new("DefaultTheme")
  StoreTheme = MerchDisplayCodeType.new("StoreTheme")
end

# {urn:ebay:apis:eBLBaseComponents}MerchandizingPrefCodeType
class MerchandizingPrefCodeType < ::String
  CustomCode = MerchandizingPrefCodeType.new("CustomCode")
  OptIn = MerchandizingPrefCodeType.new("OptIn")
  OptOut = MerchandizingPrefCodeType.new("OptOut")
end

# {urn:ebay:apis:eBLBaseComponents}MessageStatusTypeCodeType
class MessageStatusTypeCodeType < ::String
  Answered = MessageStatusTypeCodeType.new("Answered")
  CustomCode = MessageStatusTypeCodeType.new("CustomCode")
  Unanswered = MessageStatusTypeCodeType.new("Unanswered")
end

# {urn:ebay:apis:eBLBaseComponents}MessageTypeCodeType
class MessageTypeCodeType < ::String
  All = MessageTypeCodeType.new("All")
  AskSellerQuestion = MessageTypeCodeType.new("AskSellerQuestion")
  ContactEbayMember = MessageTypeCodeType.new("ContactEbayMember")
  ContactMyBidder = MessageTypeCodeType.new("ContactMyBidder")
  ContactTransactionPartner = MessageTypeCodeType.new("ContactTransactionPartner")
  ContacteBayMemberViaCommunityLink = MessageTypeCodeType.new("ContacteBayMemberViaCommunityLink")
  CustomCode = MessageTypeCodeType.new("CustomCode")
  ResponseToASQQuestion = MessageTypeCodeType.new("ResponseToASQQuestion")
  ResponseToContacteBayMember = MessageTypeCodeType.new("ResponseToContacteBayMember")
end

# {urn:ebay:apis:eBLBaseComponents}ModifyActionCodeType
class ModifyActionCodeType < ::String
  Add = ModifyActionCodeType.new("Add")
  CustomCode = ModifyActionCodeType.new("CustomCode")
  Delete = ModifyActionCodeType.new("Delete")
  Update = ModifyActionCodeType.new("Update")
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertResolutionStatusCode
class MyMessagesAlertResolutionStatusCode < ::String
  CustomCode = MyMessagesAlertResolutionStatusCode.new("CustomCode")
  ResolvedByAutoResolution = MyMessagesAlertResolutionStatusCode.new("ResolvedByAutoResolution")
  ResolvedByUser = MyMessagesAlertResolutionStatusCode.new("ResolvedByUser")
  Unresolved = MyMessagesAlertResolutionStatusCode.new("Unresolved")
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderOperationCodeType
class MyMessagesFolderOperationCodeType < ::String
  CustomCode = MyMessagesFolderOperationCodeType.new("CustomCode")
  Display = MyMessagesFolderOperationCodeType.new("Display")
  Remove = MyMessagesFolderOperationCodeType.new("Remove")
  Rename = MyMessagesFolderOperationCodeType.new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDeliveryStatusCodeType
class NotificationDeliveryStatusCodeType < ::String
  CustomCode = NotificationDeliveryStatusCodeType.new("CustomCode")
  Delivered = NotificationDeliveryStatusCodeType.new("Delivered")
  Failed = NotificationDeliveryStatusCodeType.new("Failed")
  MarkedDown = NotificationDeliveryStatusCodeType.new("MarkedDown")
  Rejected = NotificationDeliveryStatusCodeType.new("Rejected")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventPropertyNameCodeType
class NotificationEventPropertyNameCodeType < ::String
  CustomCode = NotificationEventPropertyNameCodeType.new("CustomCode")
  TimeLeft = NotificationEventPropertyNameCodeType.new("TimeLeft")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventStateCodeType
class NotificationEventStateCodeType < ::String
  Canceled = NotificationEventStateCodeType.new("Canceled")
  CustomCode = NotificationEventStateCodeType.new("CustomCode")
  Delivered = NotificationEventStateCodeType.new("Delivered")
  Failed = NotificationEventStateCodeType.new("Failed")
  FailedPending = NotificationEventStateCodeType.new("FailedPending")
  MarkedDown = NotificationEventStateCodeType.new("MarkedDown")
  MarkedDownPending = NotificationEventStateCodeType.new("MarkedDownPending")
  New = NotificationEventStateCodeType.new("New")
  Pending = NotificationEventStateCodeType.new("Pending")
  Rejected = NotificationEventStateCodeType.new("Rejected")
  Undeliverable = NotificationEventStateCodeType.new("Undeliverable")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventTypeCodeType
class NotificationEventTypeCodeType < ::String
  AccountSummary = NotificationEventTypeCodeType.new("AccountSummary")
  AccountSuspended = NotificationEventTypeCodeType.new("AccountSuspended")
  AskSellerQuestion = NotificationEventTypeCodeType.new("AskSellerQuestion")
  AuctionCheckoutComplete = NotificationEventTypeCodeType.new("AuctionCheckoutComplete")
  BestOffer = NotificationEventTypeCodeType.new("BestOffer")
  BestOfferDeclined = NotificationEventTypeCodeType.new("BestOfferDeclined")
  BestOfferPlaced = NotificationEventTypeCodeType.new("BestOfferPlaced")
  BidPlaced = NotificationEventTypeCodeType.new("BidPlaced")
  BidReceived = NotificationEventTypeCodeType.new("BidReceived")
  BuyerResponseDispute = NotificationEventTypeCodeType.new("BuyerResponseDispute")
  Checkout = NotificationEventTypeCodeType.new("Checkout")
  CheckoutBuyerRequestsTotal = NotificationEventTypeCodeType.new("CheckoutBuyerRequestsTotal")
  CounterOfferReceived = NotificationEventTypeCodeType.new("CounterOfferReceived")
  CustomCode = NotificationEventTypeCodeType.new("CustomCode")
  EmailAddressChanged = NotificationEventTypeCodeType.new("EmailAddressChanged")
  EndOfAuction = NotificationEventTypeCodeType.new("EndOfAuction")
  Feedback = NotificationEventTypeCodeType.new("Feedback")
  FeedbackForSeller = NotificationEventTypeCodeType.new("FeedbackForSeller")
  FeedbackLeft = NotificationEventTypeCodeType.new("FeedbackLeft")
  FeedbackReceived = NotificationEventTypeCodeType.new("FeedbackReceived")
  FeedbackStarChanged = NotificationEventTypeCodeType.new("FeedbackStarChanged")
  FixedPriceEndOfTransaction = NotificationEventTypeCodeType.new("FixedPriceEndOfTransaction")
  FixedPriceTransaction = NotificationEventTypeCodeType.new("FixedPriceTransaction")
  INRBuyerClosedDispute = NotificationEventTypeCodeType.new("INRBuyerClosedDispute")
  INRBuyerOpenedDispute = NotificationEventTypeCodeType.new("INRBuyerOpenedDispute")
  INRBuyerRespondedToDispute = NotificationEventTypeCodeType.new("INRBuyerRespondedToDispute")
  INRSellerRespondedToDispute = NotificationEventTypeCodeType.new("INRSellerRespondedToDispute")
  ItemAddedToBidGroup = NotificationEventTypeCodeType.new("ItemAddedToBidGroup")
  ItemAddedToWatchList = NotificationEventTypeCodeType.new("ItemAddedToWatchList")
  ItemClosed = NotificationEventTypeCodeType.new("ItemClosed")
  ItemExtended = NotificationEventTypeCodeType.new("ItemExtended")
  ItemListed = NotificationEventTypeCodeType.new("ItemListed")
  ItemLost = NotificationEventTypeCodeType.new("ItemLost")
  ItemRemovedFromBidGroup = NotificationEventTypeCodeType.new("ItemRemovedFromBidGroup")
  ItemRemovedFromWatchList = NotificationEventTypeCodeType.new("ItemRemovedFromWatchList")
  ItemRevised = NotificationEventTypeCodeType.new("ItemRevised")
  ItemRevisedAddCharity = NotificationEventTypeCodeType.new("ItemRevisedAddCharity")
  ItemSold = NotificationEventTypeCodeType.new("ItemSold")
  ItemSuspended = NotificationEventTypeCodeType.new("ItemSuspended")
  ItemUnsold = NotificationEventTypeCodeType.new("ItemUnsold")
  ItemWon = NotificationEventTypeCodeType.new("ItemWon")
  ItemsCanceled = NotificationEventTypeCodeType.new("ItemsCanceled")
  MyMessagesAlert = NotificationEventTypeCodeType.new("MyMessagesAlert")
  MyMessagesAlertHeader = NotificationEventTypeCodeType.new("MyMessagesAlertHeader")
  MyMessagesM2MMessage = NotificationEventTypeCodeType.new("MyMessagesM2MMessage")
  MyMessagesM2MMessageHeader = NotificationEventTypeCodeType.new("MyMessagesM2MMessageHeader")
  MyMessageseBayMessage = NotificationEventTypeCodeType.new("MyMessageseBayMessage")
  MyMessageseBayMessageHeader = NotificationEventTypeCodeType.new("MyMessageseBayMessageHeader")
  None = NotificationEventTypeCodeType.new("None")
  OutBid = NotificationEventTypeCodeType.new("OutBid")
  PasswordChanged = NotificationEventTypeCodeType.new("PasswordChanged")
  PasswordHintChanged = NotificationEventTypeCodeType.new("PasswordHintChanged")
  PaymentDetailChanged = NotificationEventTypeCodeType.new("PaymentDetailChanged")
  SecondChanceOffer = NotificationEventTypeCodeType.new("SecondChanceOffer")
  SellerClosedDispute = NotificationEventTypeCodeType.new("SellerClosedDispute")
  SellerOpenedDispute = NotificationEventTypeCodeType.new("SellerOpenedDispute")
  SellerRespondedToDispute = NotificationEventTypeCodeType.new("SellerRespondedToDispute")
  ThirdPartyCartCheckout = NotificationEventTypeCodeType.new("ThirdPartyCartCheckout")
  TokenRevocation = NotificationEventTypeCodeType.new("TokenRevocation")
  UserIDChanged = NotificationEventTypeCodeType.new("UserIDChanged")
  WatchedItemEndingSoon = NotificationEventTypeCodeType.new("WatchedItemEndingSoon")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationPayloadTypeCodeType
class NotificationPayloadTypeCodeType < ::String
  CustomCode = NotificationPayloadTypeCodeType.new("CustomCode")
  EBLSchemaSOAP = NotificationPayloadTypeCodeType.new("eBLSchemaSOAP")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationRoleCodeType
class NotificationRoleCodeType < ::String
  Application = NotificationRoleCodeType.new("Application")
  CustomCode = NotificationRoleCodeType.new("CustomCode")
  Event = NotificationRoleCodeType.new("Event")
  User = NotificationRoleCodeType.new("User")
  UserData = NotificationRoleCodeType.new("UserData")
end

# {urn:ebay:apis:eBLBaseComponents}OrderRoleCodeType
class OrderRoleCodeType < ::String
  Buyer = OrderRoleCodeType.new("Buyer")
  CustomCode = OrderRoleCodeType.new("CustomCode")
  Seller = OrderRoleCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}OrderStatusCodeType
class OrderStatusCodeType < ::String
  Active = OrderStatusCodeType.new("Active")
  Authenticated = OrderStatusCodeType.new("Authenticated")
  Cancelled = OrderStatusCodeType.new("Cancelled")
  Completed = OrderStatusCodeType.new("Completed")
  CustomCode = OrderStatusCodeType.new("CustomCode")
  Default = OrderStatusCodeType.new("Default")
  InProcess = OrderStatusCodeType.new("InProcess")
  Inactive = OrderStatusCodeType.new("Inactive")
  Invalid = OrderStatusCodeType.new("Invalid")
  Shipped = OrderStatusCodeType.new("Shipped")
end

# {urn:ebay:apis:eBLBaseComponents}PaidStatusCodeType
class PaidStatusCodeType < ::String
  BuyerHasNotCompletedCheckout = PaidStatusCodeType.new("BuyerHasNotCompletedCheckout")
  CustomCode = PaidStatusCodeType.new("CustomCode")
  EscrowPaymentCancelled = PaidStatusCodeType.new("EscrowPaymentCancelled")
  MarkedAsPaid = PaidStatusCodeType.new("MarkedAsPaid")
  NotPaid = PaidStatusCodeType.new("NotPaid")
  PaidWithEscrow = PaidStatusCodeType.new("PaidWithEscrow")
  PaidWithPaisaPay = PaidStatusCodeType.new("PaidWithPaisaPay")
  PaidWithPayPal = PaidStatusCodeType.new("PaidWithPayPal")
  PaymentPending = PaidStatusCodeType.new("PaymentPending")
  PaymentPendingWithEscrow = PaidStatusCodeType.new("PaymentPendingWithEscrow")
  PaymentPendingWithPaisaPay = PaidStatusCodeType.new("PaymentPendingWithPaisaPay")
  PaymentPendingWithPayPal = PaidStatusCodeType.new("PaymentPendingWithPayPal")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountLevelCodeType
class PayPalAccountLevelCodeType < ::String
  CustomCode = PayPalAccountLevelCodeType.new("CustomCode")
  InternationalUnverified = PayPalAccountLevelCodeType.new("InternationalUnverified")
  InternationalVerified = PayPalAccountLevelCodeType.new("InternationalVerified")
  Invalid = PayPalAccountLevelCodeType.new("Invalid")
  Trusted = PayPalAccountLevelCodeType.new("Trusted")
  Unknown = PayPalAccountLevelCodeType.new("Unknown")
  Unverified = PayPalAccountLevelCodeType.new("Unverified")
  Verified = PayPalAccountLevelCodeType.new("Verified")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountStatusCodeType
class PayPalAccountStatusCodeType < ::String
  Active = PayPalAccountStatusCodeType.new("Active")
  Closed = PayPalAccountStatusCodeType.new("Closed")
  CustomCode = PayPalAccountStatusCodeType.new("CustomCode")
  HighRestricted = PayPalAccountStatusCodeType.new("HighRestricted")
  Invalid = PayPalAccountStatusCodeType.new("Invalid")
  Locked = PayPalAccountStatusCodeType.new("Locked")
  LowRestricted = PayPalAccountStatusCodeType.new("LowRestricted")
  Unknown = PayPalAccountStatusCodeType.new("Unknown")
  WireOff = PayPalAccountStatusCodeType.new("WireOff")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountTypeCodeType
class PayPalAccountTypeCodeType < ::String
  Business = PayPalAccountTypeCodeType.new("Business")
  CustomCode = PayPalAccountTypeCodeType.new("CustomCode")
  Invalid = PayPalAccountTypeCodeType.new("Invalid")
  Personal = PayPalAccountTypeCodeType.new("Personal")
  Premier = PayPalAccountTypeCodeType.new("Premier")
  Unknown = PayPalAccountTypeCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentHoldStatusCodeType
class PaymentHoldStatusCodeType < ::String
  CustomCode = PaymentHoldStatusCodeType.new("CustomCode")
  MerchantHold = PaymentHoldStatusCodeType.new("MerchantHold")
  None = PaymentHoldStatusCodeType.new("None")
  PaymentReview = PaymentHoldStatusCodeType.new("PaymentReview")
  Released = PaymentHoldStatusCodeType.new("Released")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentMethodSearchCodeType
class PaymentMethodSearchCodeType < ::String
  CustomCode = PaymentMethodSearchCodeType.new("CustomCode")
  PaisaPay = PaymentMethodSearchCodeType.new("PaisaPay")
  PaisaPayEscrowEMI = PaymentMethodSearchCodeType.new("PaisaPayEscrowEMI")
  PayPal = PaymentMethodSearchCodeType.new("PayPal")
  PayPalOrPaisaPay = PaymentMethodSearchCodeType.new("PayPalOrPaisaPay")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentStatusCodeType
class PaymentStatusCodeType < ::String
  BuyerCreditCardFailed = PaymentStatusCodeType.new("BuyerCreditCardFailed")
  BuyerECheckBounced = PaymentStatusCodeType.new("BuyerECheckBounced")
  BuyerFailedPaymentReportedBySeller = PaymentStatusCodeType.new("BuyerFailedPaymentReportedBySeller")
  CustomCode = PaymentStatusCodeType.new("CustomCode")
  NoPaymentFailure = PaymentStatusCodeType.new("NoPaymentFailure")
  PayPalPaymentInProcess = PaymentStatusCodeType.new("PayPalPaymentInProcess")
  PaymentInProcess = PaymentStatusCodeType.new("PaymentInProcess")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTypeCodeType
class PaymentTypeCodeType < ::String
  AdminReversal = PaymentTypeCodeType.new("AdminReversal")
  AllOther = PaymentTypeCodeType.new("AllOther")
  CustomCode = PaymentTypeCodeType.new("CustomCode")
  Refund = PaymentTypeCodeType.new("Refund")
  Sale = PaymentTypeCodeType.new("Sale")
  SellerDeniedPayment = PaymentTypeCodeType.new("SellerDeniedPayment")
end

# {urn:ebay:apis:eBLBaseComponents}PeriodCodeType
class PeriodCodeType < ::String
  CustomCode = PeriodCodeType.new("CustomCode")
  Days_1 = PeriodCodeType.new("Days_1")
  Days_180 = PeriodCodeType.new("Days_180")
  Days_30 = PeriodCodeType.new("Days_30")
  Days_360 = PeriodCodeType.new("Days_360")
  Days_540 = PeriodCodeType.new("Days_540")
end

# {urn:ebay:apis:eBLBaseComponents}PhotoDisplayCodeType
class PhotoDisplayCodeType < ::String
  CustomCode = PhotoDisplayCodeType.new("CustomCode")
  None = PhotoDisplayCodeType.new("None")
  PicturePack = PhotoDisplayCodeType.new("PicturePack")
  SiteHostedPictureShow = PhotoDisplayCodeType.new("SiteHostedPictureShow")
  SlideShow = PhotoDisplayCodeType.new("SlideShow")
  SuperSize = PhotoDisplayCodeType.new("SuperSize")
  SuperSizePictureShow = PhotoDisplayCodeType.new("SuperSizePictureShow")
  VendorHostedPictureShow = PhotoDisplayCodeType.new("VendorHostedPictureShow")
end

# {urn:ebay:apis:eBLBaseComponents}PictureFormatCodeType
class PictureFormatCodeType < ::String
  CustomCode = PictureFormatCodeType.new("CustomCode")
  GIF = PictureFormatCodeType.new("GIF")
  JPG = PictureFormatCodeType.new("JPG")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerActionCodeType
class PictureManagerActionCodeType < ::String
  Add = PictureManagerActionCodeType.new("Add")
  Change = PictureManagerActionCodeType.new("Change")
  CustomCode = PictureManagerActionCodeType.new("CustomCode")
  Delete = PictureManagerActionCodeType.new("Delete")
  Move = PictureManagerActionCodeType.new("Move")
  Rename = PictureManagerActionCodeType.new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailLevelCodeType
class PictureManagerDetailLevelCodeType < ::String
  CustomCode = PictureManagerDetailLevelCodeType.new("CustomCode")
  ReturnAll = PictureManagerDetailLevelCodeType.new("ReturnAll")
  ReturnPicture = PictureManagerDetailLevelCodeType.new("ReturnPicture")
  ReturnSubscription = PictureManagerDetailLevelCodeType.new("ReturnSubscription")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayTypeCodeType
class PictureManagerPictureDisplayTypeCodeType < ::String
  BIBO = PictureManagerPictureDisplayTypeCodeType.new("BIBO")
  CustomCode = PictureManagerPictureDisplayTypeCodeType.new("CustomCode")
  Large = PictureManagerPictureDisplayTypeCodeType.new("Large")
  Original = PictureManagerPictureDisplayTypeCodeType.new("Original")
  Standard = PictureManagerPictureDisplayTypeCodeType.new("Standard")
  Supersize = PictureManagerPictureDisplayTypeCodeType.new("Supersize")
  Thumbnail = PictureManagerPictureDisplayTypeCodeType.new("Thumbnail")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionLevelCodeType
class PictureManagerSubscriptionLevelCodeType < ::String
  CustomCode = PictureManagerSubscriptionLevelCodeType.new("CustomCode")
  Free = PictureManagerSubscriptionLevelCodeType.new("Free")
  Level1 = PictureManagerSubscriptionLevelCodeType.new("Level1")
  Level2 = PictureManagerSubscriptionLevelCodeType.new("Level2")
  Level3 = PictureManagerSubscriptionLevelCodeType.new("Level3")
  Level4 = PictureManagerSubscriptionLevelCodeType.new("Level4")
end

# {urn:ebay:apis:eBLBaseComponents}PictureSetCodeType
class PictureSetCodeType < ::String
  CustomCode = PictureSetCodeType.new("CustomCode")
  Large = PictureSetCodeType.new("Large")
  Standard = PictureSetCodeType.new("Standard")
  Supersize = PictureSetCodeType.new("Supersize")
end

# {urn:ebay:apis:eBLBaseComponents}PictureSourceCodeType
class PictureSourceCodeType < ::String
  CustomCode = PictureSourceCodeType.new("CustomCode")
  EPS = PictureSourceCodeType.new("EPS")
  PictureManager = PictureSourceCodeType.new("PictureManager")
  Vendor = PictureSourceCodeType.new("Vendor")
end

# {urn:ebay:apis:eBLBaseComponents}PictureUploadPolicyCodeType
class PictureUploadPolicyCodeType < ::String
  Add = PictureUploadPolicyCodeType.new("Add")
  ClearAndAdd = PictureUploadPolicyCodeType.new("ClearAndAdd")
  CustomCode = PictureUploadPolicyCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}PolicyComplianceStatusCodeType
class PolicyComplianceStatusCodeType < ::String
  CustomCode = PolicyComplianceStatusCodeType.new("CustomCode")
  Failing = PolicyComplianceStatusCodeType.new("Failing")
  Fair = PolicyComplianceStatusCodeType.new("Fair")
  Good = PolicyComplianceStatusCodeType.new("Good")
  Poor = PolicyComplianceStatusCodeType.new("Poor")
end

# {urn:ebay:apis:eBLBaseComponents}PreferredLocationCodeType
class PreferredLocationCodeType < ::String
  AvailableInCountryImplied = PreferredLocationCodeType.new("AvailableInCountryImplied")
  BelgiumListing = PreferredLocationCodeType.new("BelgiumListing")
  CustomCode = PreferredLocationCodeType.new("CustomCode")
  ListedInCurrencyImplied = PreferredLocationCodeType.new("ListedInCurrencyImplied")
  LocatedInCountryImplied = PreferredLocationCodeType.new("LocatedInCountryImplied")
  SiteImplied = PreferredLocationCodeType.new("SiteImplied")
end

# {urn:ebay:apis:eBLBaseComponents}ProductSortCodeType
class ProductSortCodeType < ::String
  CustomCode = ProductSortCodeType.new("CustomCode")
  ItemCountAsc = ProductSortCodeType.new("ItemCountAsc")
  ItemCountDesc = ProductSortCodeType.new("ItemCountDesc")
  PopularityAsc = ProductSortCodeType.new("PopularityAsc")
  PopularityDesc = ProductSortCodeType.new("PopularityDesc")
  RatingAsc = ProductSortCodeType.new("RatingAsc")
  RatingDesc = ProductSortCodeType.new("RatingDesc")
  ReviewCountAsc = ProductSortCodeType.new("ReviewCountAsc")
  ReviewCountDesc = ProductSortCodeType.new("ReviewCountDesc")
  TitleAsc = ProductSortCodeType.new("TitleAsc")
  TitleDesc = ProductSortCodeType.new("TitleDesc")
end

# {urn:ebay:apis:eBLBaseComponents}ProductStateCodeType
class ProductStateCodeType < ::String
  CustomCode = ProductStateCodeType.new("CustomCode")
  Delete = ProductStateCodeType.new("Delete")
  Merge = ProductStateCodeType.new("Merge")
  Update = ProductStateCodeType.new("Update")
  UpdateMajor = ProductStateCodeType.new("UpdateMajor")
  UpdateNoDetails = ProductStateCodeType.new("UpdateNoDetails")
end

# {urn:ebay:apis:eBLBaseComponents}ProductUseCaseCodeType
class ProductUseCaseCodeType < ::String
  AddItem = ProductUseCaseCodeType.new("AddItem")
  CustomCode = ProductUseCaseCodeType.new("CustomCode")
  RelistItem = ProductUseCaseCodeType.new("RelistItem")
  ReviseItem = ProductUseCaseCodeType.new("ReviseItem")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemPriceTypeCodeType
class PromotionItemPriceTypeCodeType < ::String
  AuctionPrice = PromotionItemPriceTypeCodeType.new("AuctionPrice")
  BestOfferOnlyPrice = PromotionItemPriceTypeCodeType.new("BestOfferOnlyPrice")
  BuyItNowPrice = PromotionItemPriceTypeCodeType.new("BuyItNowPrice")
  ClassifiedAdPrice = PromotionItemPriceTypeCodeType.new("ClassifiedAdPrice")
  CustomCode = PromotionItemPriceTypeCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemSelectionCodeType
class PromotionItemSelectionCodeType < ::String
  Automatic = PromotionItemSelectionCodeType.new("Automatic")
  CustomCode = PromotionItemSelectionCodeType.new("CustomCode")
  Manual = PromotionItemSelectionCodeType.new("Manual")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionMethodCodeType
class PromotionMethodCodeType < ::String
  CrossSell = PromotionMethodCodeType.new("CrossSell")
  CustomCode = PromotionMethodCodeType.new("CustomCode")
  UpSell = PromotionMethodCodeType.new("UpSell")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionSchemeCodeType
class PromotionSchemeCodeType < ::String
  CategoryProximity = PromotionSchemeCodeType.new("CategoryProximity")
  CustomCode = PromotionSchemeCodeType.new("CustomCode")
  DefaultCrossSellLogic = PromotionSchemeCodeType.new("DefaultCrossSellLogic")
  DefaultRule = PromotionSchemeCodeType.new("DefaultRule")
  DefaultUpSellLogic = PromotionSchemeCodeType.new("DefaultUpSellLogic")
  ItemToDefaultRule = PromotionSchemeCodeType.new("ItemToDefaultRule")
  ItemToItem = PromotionSchemeCodeType.new("ItemToItem")
  ItemToStoreCat = PromotionSchemeCodeType.new("ItemToStoreCat")
  RelatedCategoryRule = PromotionSchemeCodeType.new("RelatedCategoryRule")
  StoreToStoreCat = PromotionSchemeCodeType.new("StoreToStoreCat")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleStatusCodeType
class PromotionalSaleStatusCodeType < ::String
  Active = PromotionalSaleStatusCodeType.new("Active")
  CustomCode = PromotionalSaleStatusCodeType.new("CustomCode")
  Deleted = PromotionalSaleStatusCodeType.new("Deleted")
  Inactive = PromotionalSaleStatusCodeType.new("Inactive")
  Processing = PromotionalSaleStatusCodeType.new("Processing")
  Scheduled = PromotionalSaleStatusCodeType.new("Scheduled")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleTypeCodeType
class PromotionalSaleTypeCodeType < ::String
  CustomCode = PromotionalSaleTypeCodeType.new("CustomCode")
  FreeShippingOnly = PromotionalSaleTypeCodeType.new("FreeShippingOnly")
  PriceDiscountAndFreeShipping = PromotionalSaleTypeCodeType.new("PriceDiscountAndFreeShipping")
  PriceDiscountOnly = PromotionalSaleTypeCodeType.new("PriceDiscountOnly")
end

# {urn:ebay:apis:eBLBaseComponents}PurchasePurposeTypeCodeType
class PurchasePurposeTypeCodeType < ::String
  AuctionItem = PurchasePurposeTypeCodeType.new("AuctionItem")
  BuyNowItem = PurchasePurposeTypeCodeType.new("BuyNowItem")
  CustomCode = PurchasePurposeTypeCodeType.new("CustomCode")
  Donation = PurchasePurposeTypeCodeType.new("Donation")
  EBayBilling = PurchasePurposeTypeCodeType.new("eBayBilling")
  GiftCertificates = PurchasePurposeTypeCodeType.new("GiftCertificates")
  Other = PurchasePurposeTypeCodeType.new("Other")
  ShoppingCart = PurchasePurposeTypeCodeType.new("ShoppingCart")
  Subscription = PurchasePurposeTypeCodeType.new("Subscription")
end

# {urn:ebay:apis:eBLBaseComponents}QuantityOperatorCodeType
class QuantityOperatorCodeType < ::String
  CustomCode = QuantityOperatorCodeType.new("CustomCode")
  Equal = QuantityOperatorCodeType.new("Equal")
  GreaterThan = QuantityOperatorCodeType.new("GreaterThan")
  GreaterThanOrEqual = QuantityOperatorCodeType.new("GreaterThanOrEqual")
  LessThan = QuantityOperatorCodeType.new("LessThan")
  LessThanOrEqual = QuantityOperatorCodeType.new("LessThanOrEqual")
end

# {urn:ebay:apis:eBLBaseComponents}QuestionTypeCodeType
class QuestionTypeCodeType < ::String
  CustomCode = QuestionTypeCodeType.new("CustomCode")
  CustomizedSubject = QuestionTypeCodeType.new("CustomizedSubject")
  General = QuestionTypeCodeType.new("General")
  MultipleItemShipping = QuestionTypeCodeType.new("MultipleItemShipping")
  None = QuestionTypeCodeType.new("None")
  Payment = QuestionTypeCodeType.new("Payment")
  Shipping = QuestionTypeCodeType.new("Shipping")
end

# {urn:ebay:apis:eBLBaseComponents}RCSPaymentStatusCodeType
class RCSPaymentStatusCodeType < ::String
  Canceled = RCSPaymentStatusCodeType.new("Canceled")
  CustomCode = RCSPaymentStatusCodeType.new("CustomCode")
  Paid = RCSPaymentStatusCodeType.new("Paid")
  Pending = RCSPaymentStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}RangeCodeType
class RangeCodeType < ::String
  CustomCode = RangeCodeType.new("CustomCode")
  High = RangeCodeType.new("High")
  Low = RangeCodeType.new("Low")
end

# {urn:ebay:apis:eBLBaseComponents}RecipientRelationCodeType
class RecipientRelationCodeType < ::String
  C_1 = RecipientRelationCodeType.new("1")
  C_2 = RecipientRelationCodeType.new("2")
  C_3 = RecipientRelationCodeType.new("3")
  C_4 = RecipientRelationCodeType.new("4")
  CustomCode = RecipientRelationCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationEngineCodeType
class RecommendationEngineCodeType < ::String
  CustomCode = RecommendationEngineCodeType.new("CustomCode")
  ItemSpecifics = RecommendationEngineCodeType.new("ItemSpecifics")
  ListingAnalyzer = RecommendationEngineCodeType.new("ListingAnalyzer")
  ProductPricing = RecommendationEngineCodeType.new("ProductPricing")
  SIFFTAS = RecommendationEngineCodeType.new("SIFFTAS")
  SuggestedAttributes = RecommendationEngineCodeType.new("SuggestedAttributes")
end

# {urn:ebay:apis:eBLBaseComponents}RefundOptionsCodeType
class RefundOptionsCodeType < ::String
  CustomCode = RefundOptionsCodeType.new("CustomCode")
  Exchange = RefundOptionsCodeType.new("Exchange")
  MerchandiseCredit = RefundOptionsCodeType.new("MerchandiseCredit")
  MoneyBack = RefundOptionsCodeType.new("MoneyBack")
end

# {urn:ebay:apis:eBLBaseComponents}RefundReasonCodeType
class RefundReasonCodeType < ::String
  BuyerRemorse = RefundReasonCodeType.new("BuyerRemorse")
  CannotShipProduct = RefundReasonCodeType.new("CannotShipProduct")
  CustomCode = RefundReasonCodeType.new("CustomCode")
  ItemBadQuality = RefundReasonCodeType.new("ItemBadQuality")
  ItemDamaged = RefundReasonCodeType.new("ItemDamaged")
  Other = RefundReasonCodeType.new("Other")
  WrongItemShipped = RefundReasonCodeType.new("WrongItemShipped")
end

# {urn:ebay:apis:eBLBaseComponents}RefundTypeCodeType
class RefundTypeCodeType < ::String
  CustomCode = RefundTypeCodeType.new("CustomCode")
  CustomOrPartial = RefundTypeCodeType.new("CustomOrPartial")
  Full = RefundTypeCodeType.new("Full")
  FullPlusShipping = RefundTypeCodeType.new("FullPlusShipping")
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsAcceptedOptionsCodeType
class ReturnsAcceptedOptionsCodeType < ::String
  CustomCode = ReturnsAcceptedOptionsCodeType.new("CustomCode")
  ReturnsAccepted = ReturnsAcceptedOptionsCodeType.new("ReturnsAccepted")
  ReturnsNotAccepted = ReturnsAcceptedOptionsCodeType.new("ReturnsNotAccepted")
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsWithinOptionsCodeType
class ReturnsWithinOptionsCodeType < ::String
  CustomCode = ReturnsWithinOptionsCodeType.new("CustomCode")
  Days_10 = ReturnsWithinOptionsCodeType.new("Days_10")
  Days_14 = ReturnsWithinOptionsCodeType.new("Days_14")
  Days_3 = ReturnsWithinOptionsCodeType.new("Days_3")
  Days_30 = ReturnsWithinOptionsCodeType.new("Days_30")
  Days_60 = ReturnsWithinOptionsCodeType.new("Days_60")
  Days_7 = ReturnsWithinOptionsCodeType.new("Days_7")
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionErrorCodeCodeType
class SMSSubscriptionErrorCodeCodeType < ::String
  CustomCode = SMSSubscriptionErrorCodeCodeType.new("CustomCode")
  PhoneNumberCarrierChanged = SMSSubscriptionErrorCodeCodeType.new("PhoneNumberCarrierChanged")
  PhoneNumberChanged = SMSSubscriptionErrorCodeCodeType.new("PhoneNumberChanged")
  PhoneNumberInvalid = SMSSubscriptionErrorCodeCodeType.new("PhoneNumberInvalid")
  SMSAggregatorNotAvailable = SMSSubscriptionErrorCodeCodeType.new("SMSAggregatorNotAvailable")
  UserRequestedUnregistration = SMSSubscriptionErrorCodeCodeType.new("UserRequestedUnregistration")
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionUserStatusCodeType
class SMSSubscriptionUserStatusCodeType < ::String
  CustomCode = SMSSubscriptionUserStatusCodeType.new("CustomCode")
  Failed = SMSSubscriptionUserStatusCodeType.new("Failed")
  Pending = SMSSubscriptionUserStatusCodeType.new("Pending")
  Registered = SMSSubscriptionUserStatusCodeType.new("Registered")
  Unregistered = SMSSubscriptionUserStatusCodeType.new("Unregistered")
end

# {urn:ebay:apis:eBLBaseComponents}SearchFlagCodeType
class SearchFlagCodeType < ::String
  Charity = SearchFlagCodeType.new("Charity")
  CustomCode = SearchFlagCodeType.new("CustomCode")
  DigitalDelivery = SearchFlagCodeType.new("DigitalDelivery")
  FreeShipping = SearchFlagCodeType.new("FreeShipping")
  Gallery = SearchFlagCodeType.new("Gallery")
  GermanMotorsSearchable = SearchFlagCodeType.new("GermanMotorsSearchable")
  GetItFast = SearchFlagCodeType.new("GetItFast")
  Gift = SearchFlagCodeType.new("Gift")
  LocalSearch = SearchFlagCodeType.new("LocalSearch")
  Lot = SearchFlagCodeType.new("Lot")
  NowAndNew = SearchFlagCodeType.new("NowAndNew")
  Picture = SearchFlagCodeType.new("Picture")
end

# {urn:ebay:apis:eBLBaseComponents}SearchFlagsCodeType
class SearchFlagsCodeType < ::String
  Charity = SearchFlagsCodeType.new("Charity")
  CustomCode = SearchFlagsCodeType.new("CustomCode")
  NowAndNew = SearchFlagsCodeType.new("NowAndNew")
  PayPalBuyerPaymentOption = SearchFlagsCodeType.new("PayPalBuyerPaymentOption")
  SearchInDescription = SearchFlagsCodeType.new("SearchInDescription")
end

# {urn:ebay:apis:eBLBaseComponents}SearchResultValuesCodeType
class SearchResultValuesCodeType < ::String
  CharityListing = SearchResultValuesCodeType.new("CharityListing")
  CustomCode = SearchResultValuesCodeType.new("CustomCode")
  Escrow = SearchResultValuesCodeType.new("Escrow")
  Gift = SearchResultValuesCodeType.new("Gift")
  New = SearchResultValuesCodeType.new("New")
  Picture = SearchResultValuesCodeType.new("Picture")
end

# {urn:ebay:apis:eBLBaseComponents}SearchSortOrderCodeType
class SearchSortOrderCodeType < ::String
  BestMatchCategoryGroup = SearchSortOrderCodeType.new("BestMatchCategoryGroup")
  BestMatchSort = SearchSortOrderCodeType.new("BestMatchSort")
  CustomCode = SearchSortOrderCodeType.new("CustomCode")
  PricePlusShippingAsc = SearchSortOrderCodeType.new("PricePlusShippingAsc")
  PricePlusShippingDesc = SearchSortOrderCodeType.new("PricePlusShippingDesc")
  SortByBidCountAsc = SearchSortOrderCodeType.new("SortByBidCountAsc")
  SortByBidCountDesc = SearchSortOrderCodeType.new("SortByBidCountDesc")
  SortByCountryAsc = SearchSortOrderCodeType.new("SortByCountryAsc")
  SortByCountryDesc = SearchSortOrderCodeType.new("SortByCountryDesc")
  SortByCurrentBid = SearchSortOrderCodeType.new("SortByCurrentBid")
  SortByCurrentBidAsc = SearchSortOrderCodeType.new("SortByCurrentBidAsc")
  SortByCurrentBidDesc = SearchSortOrderCodeType.new("SortByCurrentBidDesc")
  SortByDistanceAsc = SearchSortOrderCodeType.new("SortByDistanceAsc")
  SortByEndDate = SearchSortOrderCodeType.new("SortByEndDate")
  SortByEscrowAsc = SearchSortOrderCodeType.new("SortByEscrowAsc")
  SortByEscrowDesc = SearchSortOrderCodeType.new("SortByEscrowDesc")
  SortByListingDate = SearchSortOrderCodeType.new("SortByListingDate")
  SortByPayPalAsc = SearchSortOrderCodeType.new("SortByPayPalAsc")
  SortByPayPalDesc = SearchSortOrderCodeType.new("SortByPayPalDesc")
  SortByStartDate = SearchSortOrderCodeType.new("SortByStartDate")
end

# {urn:ebay:apis:eBLBaseComponents}SearchStandingStatusCodeType
class SearchStandingStatusCodeType < ::String
  CustomCode = SearchStandingStatusCodeType.new("CustomCode")
  Lowered = SearchStandingStatusCodeType.new("Lowered")
  Raised = SearchStandingStatusCodeType.new("Raised")
  Standard = SearchStandingStatusCodeType.new("Standard")
end

# {urn:ebay:apis:eBLBaseComponents}SearchTypeCodeType
class SearchTypeCodeType < ::String
  All = SearchTypeCodeType.new("All")
  CustomCode = SearchTypeCodeType.new("CustomCode")
  Gallery = SearchTypeCodeType.new("Gallery")
end

# {urn:ebay:apis:eBLBaseComponents}SecondChanceOfferDurationCodeType
class SecondChanceOfferDurationCodeType < ::String
  CustomCode = SecondChanceOfferDurationCodeType.new("CustomCode")
  Days_1 = SecondChanceOfferDurationCodeType.new("Days_1")
  Days_3 = SecondChanceOfferDurationCodeType.new("Days_3")
  Days_5 = SecondChanceOfferDurationCodeType.new("Days_5")
  Days_7 = SecondChanceOfferDurationCodeType.new("Days_7")
end

# {urn:ebay:apis:eBLBaseComponents}SelectionModeCodeType
class SelectionModeCodeType < ::String
  Automatic = SelectionModeCodeType.new("Automatic")
  CustomCode = SelectionModeCodeType.new("CustomCode")
  Manual = SelectionModeCodeType.new("Manual")
end

# {urn:ebay:apis:eBLBaseComponents}SellerAccountStatusCodeType
class SellerAccountStatusCodeType < ::String
  Current = SellerAccountStatusCodeType.new("Current")
  CustomCode = SellerAccountStatusCodeType.new("CustomCode")
  OnHold = SellerAccountStatusCodeType.new("OnHold")
  PastDue = SellerAccountStatusCodeType.new("PastDue")
end

# {urn:ebay:apis:eBLBaseComponents}SellerBusinessCodeType
class SellerBusinessCodeType < ::String
  Commercial = SellerBusinessCodeType.new("Commercial")
  CustomCode = SellerBusinessCodeType.new("CustomCode")
  Private = SellerBusinessCodeType.new("Private")
  Undefined = SellerBusinessCodeType.new("Undefined")
end

# {urn:ebay:apis:eBLBaseComponents}SellerDashboardAlertSeverityCodeType
class SellerDashboardAlertSeverityCodeType < ::String
  CustomCode = SellerDashboardAlertSeverityCodeType.new("CustomCode")
  Informational = SellerDashboardAlertSeverityCodeType.new("Informational")
  StrongWarning = SellerDashboardAlertSeverityCodeType.new("StrongWarning")
  Warning = SellerDashboardAlertSeverityCodeType.new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}SellerGuaranteeLevelCodeType
class SellerGuaranteeLevelCodeType < ::String
  CustomCode = SellerGuaranteeLevelCodeType.new("CustomCode")
  NotEligible = SellerGuaranteeLevelCodeType.new("NotEligible")
  Premium = SellerGuaranteeLevelCodeType.new("Premium")
  Regular = SellerGuaranteeLevelCodeType.new("Regular")
  Ultra = SellerGuaranteeLevelCodeType.new("Ultra")
end

# {urn:ebay:apis:eBLBaseComponents}SellerLevelCodeType
class SellerLevelCodeType < ::String
  Bronze = SellerLevelCodeType.new("Bronze")
  CustomCode = SellerLevelCodeType.new("CustomCode")
  Gold = SellerLevelCodeType.new("Gold")
  None = SellerLevelCodeType.new("None")
  Platinum = SellerLevelCodeType.new("Platinum")
  Silver = SellerLevelCodeType.new("Silver")
  Titanium = SellerLevelCodeType.new("Titanium")
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentMethodCodeType
class SellerPaymentMethodCodeType < ::String
  CreditCard = SellerPaymentMethodCodeType.new("CreditCard")
  CustomCode = SellerPaymentMethodCodeType.new("CustomCode")
  DirectDebit = SellerPaymentMethodCodeType.new("DirectDebit")
  DirectDebitPendingSignatureMandate = SellerPaymentMethodCodeType.new("DirectDebitPendingSignatureMandate")
  EBayDirectPay = SellerPaymentMethodCodeType.new("eBayDirectPay")
  NothingOnFile = SellerPaymentMethodCodeType.new("NothingOnFile")
  PayPal = SellerPaymentMethodCodeType.new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesActionCodeType
class SetUserNotesActionCodeType < ::String
  AddOrUpdate = SetUserNotesActionCodeType.new("AddOrUpdate")
  CustomCode = SetUserNotesActionCodeType.new("CustomCode")
  Delete = SetUserNotesActionCodeType.new("Delete")
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentDeliveryStatusCodeType
class ShipmentDeliveryStatusCodeType < ::String
  Canceled = ShipmentDeliveryStatusCodeType.new("Canceled")
  Created = ShipmentDeliveryStatusCodeType.new("Created")
  CustomCode = ShipmentDeliveryStatusCodeType.new("CustomCode")
  Delivered = ShipmentDeliveryStatusCodeType.new("Delivered")
  DroppedOff = ShipmentDeliveryStatusCodeType.new("DroppedOff")
  InTransit = ShipmentDeliveryStatusCodeType.new("InTransit")
  LabelPrinted = ShipmentDeliveryStatusCodeType.new("LabelPrinted")
  Returned = ShipmentDeliveryStatusCodeType.new("Returned")
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentStatusCodeType
class ShipmentStatusCodeType < ::String
  Active = ShipmentStatusCodeType.new("Active")
  Canceled = ShipmentStatusCodeType.new("Canceled")
  CustomCode = ShipmentStatusCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCarrierCodeType
class ShippingCarrierCodeType < ::String
  Chronopost = ShippingCarrierCodeType.new("Chronopost")
  ColiposteDomestic = ShippingCarrierCodeType.new("ColiposteDomestic")
  ColiposteInternational = ShippingCarrierCodeType.new("ColiposteInternational")
  Correos = ShippingCarrierCodeType.new("Correos")
  CustomCode = ShippingCarrierCodeType.new("CustomCode")
  DHL = ShippingCarrierCodeType.new("DHL")
  DeutschePost = ShippingCarrierCodeType.new("DeutschePost")
  Hermes = ShippingCarrierCodeType.new("Hermes")
  ILoxx = ShippingCarrierCodeType.new("iLoxx")
  Nacex = ShippingCarrierCodeType.new("Nacex")
  Other = ShippingCarrierCodeType.new("Other")
  Seur = ShippingCarrierCodeType.new("Seur")
  UPS = ShippingCarrierCodeType.new("UPS")
  USPS = ShippingCarrierCodeType.new("USPS")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCostPaidByOptionsCodeType
class ShippingCostPaidByOptionsCodeType < ::String
  Buyer = ShippingCostPaidByOptionsCodeType.new("Buyer")
  CustomCode = ShippingCostPaidByOptionsCodeType.new("CustomCode")
  Seller = ShippingCostPaidByOptionsCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingFeatureCodeType
class ShippingFeatureCodeType < ::String
  CustomCode = ShippingFeatureCodeType.new("CustomCode")
  DeliveryConfirmation = ShippingFeatureCodeType.new("DeliveryConfirmation")
  NotDefined = ShippingFeatureCodeType.new("NotDefined")
  Other = ShippingFeatureCodeType.new("Other")
  SaturdayDelivery = ShippingFeatureCodeType.new("SaturdayDelivery")
  SignatureConfirmation = ShippingFeatureCodeType.new("SignatureConfirmation")
  StealthPostage = ShippingFeatureCodeType.new("StealthPostage")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageCodeType
class ShippingPackageCodeType < ::String
  BulkyGoods = ShippingPackageCodeType.new("BulkyGoods")
  Caravan = ShippingPackageCodeType.new("Caravan")
  Cars = ShippingPackageCodeType.new("Cars")
  CustomCode = ShippingPackageCodeType.new("CustomCode")
  Europallet = ShippingPackageCodeType.new("Europallet")
  ExpandableToughBags = ShippingPackageCodeType.new("ExpandableToughBags")
  ExtraLargePack = ShippingPackageCodeType.new("ExtraLargePack")
  Furniture = ShippingPackageCodeType.new("Furniture")
  IndustryVehicles = ShippingPackageCodeType.new("IndustryVehicles")
  LargeCanadaPostBox = ShippingPackageCodeType.new("LargeCanadaPostBox")
  LargeCanadaPostBubbleMailer = ShippingPackageCodeType.new("LargeCanadaPostBubbleMailer")
  LargeEnvelope = ShippingPackageCodeType.new("LargeEnvelope")
  Letter = ShippingPackageCodeType.new("Letter")
  MailingBoxes = ShippingPackageCodeType.new("MailingBoxes")
  MediumCanadaPostBox = ShippingPackageCodeType.new("MediumCanadaPostBox")
  MediumCanadaPostBubbleMailer = ShippingPackageCodeType.new("MediumCanadaPostBubbleMailer")
  Motorbikes = ShippingPackageCodeType.new("Motorbikes")
  None = ShippingPackageCodeType.new("None")
  OneWayPallet = ShippingPackageCodeType.new("OneWayPallet")
  PackageThickEnvelope = ShippingPackageCodeType.new("PackageThickEnvelope")
  PaddedBags = ShippingPackageCodeType.new("PaddedBags")
  ParcelOrPaddedEnvelope = ShippingPackageCodeType.new("ParcelOrPaddedEnvelope")
  Roll = ShippingPackageCodeType.new("Roll")
  SmallCanadaPostBox = ShippingPackageCodeType.new("SmallCanadaPostBox")
  SmallCanadaPostBubbleMailer = ShippingPackageCodeType.new("SmallCanadaPostBubbleMailer")
  ToughBags = ShippingPackageCodeType.new("ToughBags")
  UPSLetter = ShippingPackageCodeType.new("UPSLetter")
  USPSFlatRateEnvelope = ShippingPackageCodeType.new("USPSFlatRateEnvelope")
  USPSLargePack = ShippingPackageCodeType.new("USPSLargePack")
  VeryLargePack = ShippingPackageCodeType.new("VeryLargePack")
  Winepak = ShippingPackageCodeType.new("Winepak")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRateTypeCodeType
class ShippingRateTypeCodeType < ::String
  CustomCode = ShippingRateTypeCodeType.new("CustomCode")
  DailyPickup = ShippingRateTypeCodeType.new("DailyPickup")
  OnDemand = ShippingRateTypeCodeType.new("OnDemand")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRegionCodeType
class ShippingRegionCodeType < ::String
  Africa = ShippingRegionCodeType.new("Africa")
  Americas = ShippingRegionCodeType.new("Americas")
  Asia = ShippingRegionCodeType.new("Asia")
  Caribbean = ShippingRegionCodeType.new("Caribbean")
  CustomCode = ShippingRegionCodeType.new("CustomCode")
  Europe = ShippingRegionCodeType.new("Europe")
  EuropeanUnion = ShippingRegionCodeType.new("EuropeanUnion")
  LatinAmerica = ShippingRegionCodeType.new("LatinAmerica")
  MiddleEast = ShippingRegionCodeType.new("MiddleEast")
  None = ShippingRegionCodeType.new("None")
  NorthAmerica = ShippingRegionCodeType.new("NorthAmerica")
  Oceania = ShippingRegionCodeType.new("Oceania")
  SouthAmerica = ShippingRegionCodeType.new("SouthAmerica")
  WillNotShip = ShippingRegionCodeType.new("WillNotShip")
  Worldwide = ShippingRegionCodeType.new("Worldwide")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceCodeType
class ShippingServiceCodeType < ::String
  AT_BitteTreffenSieEineAuswahl = ShippingServiceCodeType.new("AT_BitteTreffenSieEineAuswahl")
  AT_COD = ShippingServiceCodeType.new("AT_COD")
  AT_EinschreibenVersandInklEinschreibengebuhr = ShippingServiceCodeType.new("AT_EinschreibenVersandInklEinschreibengebuhr")
  AT_ExpeditedInternational = ShippingServiceCodeType.new("AT_ExpeditedInternational")
  AT_ExpressOrCourier = ShippingServiceCodeType.new("AT_ExpressOrCourier")
  AT_ExpressOrCourierInternational = ShippingServiceCodeType.new("AT_ExpressOrCourierInternational")
  AT_InsuredDispatch = ShippingServiceCodeType.new("AT_InsuredDispatch")
  AT_InsuredExpressOrCourier = ShippingServiceCodeType.new("AT_InsuredExpressOrCourier")
  AT_InsuredExpressOrCourierInternational = ShippingServiceCodeType.new("AT_InsuredExpressOrCourierInternational")
  AT_InsuredSpecialDispatch = ShippingServiceCodeType.new("AT_InsuredSpecialDispatch")
  AT_InsuredSpecialDispatchInternational = ShippingServiceCodeType.new("AT_InsuredSpecialDispatchInternational")
  AT_NachnahmeVersandInklNachnahmegebuhr = ShippingServiceCodeType.new("AT_NachnahmeVersandInklNachnahmegebuhr")
  AT_OtherInternationalShipping = ShippingServiceCodeType.new("AT_OtherInternationalShipping")
  AT_Pickup = ShippingServiceCodeType.new("AT_Pickup")
  AT_Sonstige = ShippingServiceCodeType.new("AT_Sonstige")
  AT_SonstigerVersandInternational = ShippingServiceCodeType.new("AT_SonstigerVersandInternational")
  AT_SpecialDispatch = ShippingServiceCodeType.new("AT_SpecialDispatch")
  AT_SpecialDispatchInternational = ShippingServiceCodeType.new("AT_SpecialDispatchInternational")
  AT_StandardDispatch = ShippingServiceCodeType.new("AT_StandardDispatch")
  AT_StandardInternational = ShippingServiceCodeType.new("AT_StandardInternational")
  AT_UnversicherterExpressVersandInternational = ShippingServiceCodeType.new("AT_UnversicherterExpressVersandInternational")
  AT_UnversicherterVersandInternational = ShippingServiceCodeType.new("AT_UnversicherterVersandInternational")
  AT_VersicherterExpressVersandInternational = ShippingServiceCodeType.new("AT_VersicherterExpressVersandInternational")
  AT_VersicherterVersandInternational = ShippingServiceCodeType.new("AT_VersicherterVersandInternational")
  AT_Writing = ShippingServiceCodeType.new("AT_Writing")
  AU_AirMailInternational = ShippingServiceCodeType.new("AU_AirMailInternational")
  AU_Courier = ShippingServiceCodeType.new("AU_Courier")
  AU_EMSInternationalCourierDocuments = ShippingServiceCodeType.new("AU_EMSInternationalCourierDocuments")
  AU_EMSInternationalCourierParcels = ShippingServiceCodeType.new("AU_EMSInternationalCourierParcels")
  AU_EconomyAirInternational = ShippingServiceCodeType.new("AU_EconomyAirInternational")
  AU_ExpeditedInternational = ShippingServiceCodeType.new("AU_ExpeditedInternational")
  AU_Express = ShippingServiceCodeType.new("AU_Express")
  AU_ExpressCourierInternational = ShippingServiceCodeType.new("AU_ExpressCourierInternational")
  AU_ExpressPostInternational = ShippingServiceCodeType.new("AU_ExpressPostInternational")
  AU_ExpressPostInternationalDocuments = ShippingServiceCodeType.new("AU_ExpressPostInternationalDocuments")
  AU_ExpressWithInsurance = ShippingServiceCodeType.new("AU_ExpressWithInsurance")
  AU_Other = ShippingServiceCodeType.new("AU_Other")
  AU_OtherInternational = ShippingServiceCodeType.new("AU_OtherInternational")
  AU_Pickup = ShippingServiceCodeType.new("AU_Pickup")
  AU_PrePaidExpressPostInternationalBox10kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalBox10kg")
  AU_PrePaidExpressPostInternationalBox20kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalBox20kg")
  AU_PrePaidExpressPostInternationalBox5kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalBox5kg")
  AU_PrePaidExpressPostInternationalEnvelopeB4 = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalEnvelopeB4")
  AU_PrePaidExpressPostInternationalEnvelopeC5 = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalEnvelopeC5")
  AU_PrePaidExpressPostInternationalSatchels2kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalSatchels2kg")
  AU_PrePaidExpressPostInternationalSatchels3kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostInternationalSatchels3kg")
  AU_PrePaidExpressPostPlatinum3kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostPlatinum3kg")
  AU_PrePaidExpressPostPlatinum500g = ShippingServiceCodeType.new("AU_PrePaidExpressPostPlatinum500g")
  AU_PrePaidExpressPostSatchel3kg = ShippingServiceCodeType.new("AU_PrePaidExpressPostSatchel3kg")
  AU_PrePaidExpressPostSatchel500g = ShippingServiceCodeType.new("AU_PrePaidExpressPostSatchel500g")
  AU_PrePaidParcelPostSatchels3kg = ShippingServiceCodeType.new("AU_PrePaidParcelPostSatchels3kg")
  AU_PrePaidParcelPostSatchels500g = ShippingServiceCodeType.new("AU_PrePaidParcelPostSatchels500g")
  AU_Registered = ShippingServiceCodeType.new("AU_Registered")
  AU_RegisteredParcelPost = ShippingServiceCodeType.new("AU_RegisteredParcelPost")
  AU_RegisteredParcelPostPrepaidSatchel3kg = ShippingServiceCodeType.new("AU_RegisteredParcelPostPrepaidSatchel3kg")
  AU_RegisteredParcelPostPrepaidSatchel500g = ShippingServiceCodeType.new("AU_RegisteredParcelPostPrepaidSatchel500g")
  AU_RegisteredSmallParcel = ShippingServiceCodeType.new("AU_RegisteredSmallParcel")
  AU_Regular = ShippingServiceCodeType.new("AU_Regular")
  AU_RegularWithInsurance = ShippingServiceCodeType.new("AU_RegularWithInsurance")
  AU_SeaMailInternational = ShippingServiceCodeType.new("AU_SeaMailInternational")
  AU_SmallParcels = ShippingServiceCodeType.new("AU_SmallParcels")
  AU_StandardInternational = ShippingServiceCodeType.new("AU_StandardInternational")
  BEFR_DHLInternational = ShippingServiceCodeType.new("BEFR_DHLInternational")
  BEFR_DePostInternational = ShippingServiceCodeType.new("BEFR_DePostInternational")
  BEFR_ExpeditedInternational = ShippingServiceCodeType.new("BEFR_ExpeditedInternational")
  BEFR_ExpressTaxipost = ShippingServiceCodeType.new("BEFR_ExpressTaxipost")
  BEFR_FedExInternational = ShippingServiceCodeType.new("BEFR_FedExInternational")
  BEFR_LaPosteCertifiedShipping = ShippingServiceCodeType.new("BEFR_LaPosteCertifiedShipping")
  BEFR_LaPosteEnvoiNONPRIOR = ShippingServiceCodeType.new("BEFR_LaPosteEnvoiNONPRIOR")
  BEFR_LaPosteEnvoiPRIOR = ShippingServiceCodeType.new("BEFR_LaPosteEnvoiPRIOR")
  BEFR_LaPosteEnvoiRecommande = ShippingServiceCodeType.new("BEFR_LaPosteEnvoiRecommande")
  BEFR_LaPosteInternational = ShippingServiceCodeType.new("BEFR_LaPosteInternational")
  BEFR_LaPosteStandardShipping = ShippingServiceCodeType.new("BEFR_LaPosteStandardShipping")
  BEFR_LaPosteTaxipost24h = ShippingServiceCodeType.new("BEFR_LaPosteTaxipost24h")
  BEFR_LaPosteTaxipostLLS = ShippingServiceCodeType.new("BEFR_LaPosteTaxipostLLS")
  BEFR_LaPosteTaxipostSecur = ShippingServiceCodeType.new("BEFR_LaPosteTaxipostSecur")
  BEFR_LaPosteenvoieNONPRIOR = ShippingServiceCodeType.new("BEFR_LaPosteenvoieNONPRIOR")
  BEFR_LaPosteenvoiePRIOR = ShippingServiceCodeType.new("BEFR_LaPosteenvoiePRIOR")
  BEFR_LaPosteenvoieRecommande = ShippingServiceCodeType.new("BEFR_LaPosteenvoieRecommande")
  BEFR_LivraisonExpressInternationalePrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonExpressInternationalePrixforFaitaire")
  BEFR_LivraisonExpressPrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonExpressPrixforFaitaire")
  BEFR_LivraisonSecurise = ShippingServiceCodeType.new("BEFR_LivraisonSecurise")
  BEFR_LivraisonSecuriseInternational = ShippingServiceCodeType.new("BEFR_LivraisonSecuriseInternational")
  BEFR_LivraisonStandardInternationalePrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonStandardInternationalePrixforFaitaire")
  BEFR_LivraisonStandardPrixforFaitaire = ShippingServiceCodeType.new("BEFR_LivraisonStandardPrixforFaitaire")
  BEFR_Other = ShippingServiceCodeType.new("BEFR_Other")
  BEFR_OtherInternational = ShippingServiceCodeType.new("BEFR_OtherInternational")
  BEFR_PaquetKilopost = ShippingServiceCodeType.new("BEFR_PaquetKilopost")
  BEFR_PaquetKilopostInternationale = ShippingServiceCodeType.new("BEFR_PaquetKilopostInternationale")
  BEFR_ParcelPost = ShippingServiceCodeType.new("BEFR_ParcelPost")
  BEFR_Pickup = ShippingServiceCodeType.new("BEFR_Pickup")
  BEFR_PointRetraitKiala = ShippingServiceCodeType.new("BEFR_PointRetraitKiala")
  BEFR_PostInternationalRegistered = ShippingServiceCodeType.new("BEFR_PostInternationalRegistered")
  BEFR_PostInternationalStandard = ShippingServiceCodeType.new("BEFR_PostInternationalStandard")
  BEFR_PriorityDelivery = ShippingServiceCodeType.new("BEFR_PriorityDelivery")
  BEFR_RegisteredMail = ShippingServiceCodeType.new("BEFR_RegisteredMail")
  BEFR_StandardDelivery = ShippingServiceCodeType.new("BEFR_StandardDelivery")
  BEFR_StandardInternational = ShippingServiceCodeType.new("BEFR_StandardInternational")
  BEFR_TNTInternational = ShippingServiceCodeType.new("BEFR_TNTInternational")
  BEFR_TPGPostTNTInternational = ShippingServiceCodeType.new("BEFR_TPGPostTNTInternational")
  BEFR_Taxipost = ShippingServiceCodeType.new("BEFR_Taxipost")
  BEFR_UPSInternational = ShippingServiceCodeType.new("BEFR_UPSInternational")
  BENL_DHLInternational = ShippingServiceCodeType.new("BENL_DHLInternational")
  BENL_DePostCertifiedShipping = ShippingServiceCodeType.new("BENL_DePostCertifiedShipping")
  BENL_DePostInternational = ShippingServiceCodeType.new("BENL_DePostInternational")
  BENL_DePostStandardShipping = ShippingServiceCodeType.new("BENL_DePostStandardShipping")
  BENL_DePostTaxipost24h = ShippingServiceCodeType.new("BENL_DePostTaxipost24h")
  BENL_DePostTaxipostLLS = ShippingServiceCodeType.new("BENL_DePostTaxipostLLS")
  BENL_DePostTaxipostSecur = ShippingServiceCodeType.new("BENL_DePostTaxipostSecur")
  BENL_DePostZendingAangetekend = ShippingServiceCodeType.new("BENL_DePostZendingAangetekend")
  BENL_DePostZendingAangetekendInternational = ShippingServiceCodeType.new("BENL_DePostZendingAangetekendInternational")
  BENL_DePostZendingNONPRIOR = ShippingServiceCodeType.new("BENL_DePostZendingNONPRIOR")
  BENL_DePostZendingNONPRIORInternational = ShippingServiceCodeType.new("BENL_DePostZendingNONPRIORInternational")
  BENL_DePostZendingPRIOR = ShippingServiceCodeType.new("BENL_DePostZendingPRIOR")
  BENL_DePostZendingPRIORInternational = ShippingServiceCodeType.new("BENL_DePostZendingPRIORInternational")
  BENL_ExpeditedInternational = ShippingServiceCodeType.new("BENL_ExpeditedInternational")
  BENL_FedExInternational = ShippingServiceCodeType.new("BENL_FedExInternational")
  BENL_KialaAfhaalpunt = ShippingServiceCodeType.new("BENL_KialaAfhaalpunt")
  BENL_KilopostPakje = ShippingServiceCodeType.new("BENL_KilopostPakje")
  BENL_KilopostPakjeInternational = ShippingServiceCodeType.new("BENL_KilopostPakjeInternational")
  BENL_LaPosteInternational = ShippingServiceCodeType.new("BENL_LaPosteInternational")
  BENL_Other = ShippingServiceCodeType.new("BENL_Other")
  BENL_OtherInternational = ShippingServiceCodeType.new("BENL_OtherInternational")
  BENL_OtherShippingMethods = ShippingServiceCodeType.new("BENL_OtherShippingMethods")
  BENL_ParcelPost = ShippingServiceCodeType.new("BENL_ParcelPost")
  BENL_Pickup = ShippingServiceCodeType.new("BENL_Pickup")
  BENL_PostInternationalRegistered = ShippingServiceCodeType.new("BENL_PostInternationalRegistered")
  BENL_PostInternationalStandard = ShippingServiceCodeType.new("BENL_PostInternationalStandard")
  BENL_PriorityDelivery = ShippingServiceCodeType.new("BENL_PriorityDelivery")
  BENL_RegisteredMail = ShippingServiceCodeType.new("BENL_RegisteredMail")
  BENL_StandardDelivery = ShippingServiceCodeType.new("BENL_StandardDelivery")
  BENL_StandardInternational = ShippingServiceCodeType.new("BENL_StandardInternational")
  BENL_TNTInternational = ShippingServiceCodeType.new("BENL_TNTInternational")
  BENL_TPGPostTNTInternational = ShippingServiceCodeType.new("BENL_TPGPostTNTInternational")
  BENL_Taxipost = ShippingServiceCodeType.new("BENL_Taxipost")
  BENL_TaxipostExpressverzending = ShippingServiceCodeType.new("BENL_TaxipostExpressverzending")
  BENL_UPSInternational = ShippingServiceCodeType.new("BENL_UPSInternational")
  BENL_VasteKostenStandaardVerzending = ShippingServiceCodeType.new("BENL_VasteKostenStandaardVerzending")
  BENL_VasteKostenVersneldeVerzending = ShippingServiceCodeType.new("BENL_VasteKostenVersneldeVerzending")
  BENL_VerzekerdeVerzending = ShippingServiceCodeType.new("BENL_VerzekerdeVerzending")
  BENL_VerzekerdeVerzendingInternational = ShippingServiceCodeType.new("BENL_VerzekerdeVerzendingInternational")
  CAFR_ExpeditedDelivery = ShippingServiceCodeType.new("CAFR_ExpeditedDelivery")
  CAFR_ExpeditedInternational = ShippingServiceCodeType.new("CAFR_ExpeditedInternational")
  CAFR_OtherInternational = ShippingServiceCodeType.new("CAFR_OtherInternational")
  CAFR_PostExpeditedParcel = ShippingServiceCodeType.new("CAFR_PostExpeditedParcel")
  CAFR_PostExpeditedParcelUSA = ShippingServiceCodeType.new("CAFR_PostExpeditedParcelUSA")
  CAFR_PostInternationalLetterPost = ShippingServiceCodeType.new("CAFR_PostInternationalLetterPost")
  CAFR_PostInternationalParcelAir = ShippingServiceCodeType.new("CAFR_PostInternationalParcelAir")
  CAFR_PostInternationalParcelSurface = ShippingServiceCodeType.new("CAFR_PostInternationalParcelSurface")
  CAFR_PostLettermail = ShippingServiceCodeType.new("CAFR_PostLettermail")
  CAFR_PostPriorityCourier = ShippingServiceCodeType.new("CAFR_PostPriorityCourier")
  CAFR_PostRegularParcel = ShippingServiceCodeType.new("CAFR_PostRegularParcel")
  CAFR_PostSmallPacketsUSA = ShippingServiceCodeType.new("CAFR_PostSmallPacketsUSA")
  CAFR_PostSmallPacketsUSAAir = ShippingServiceCodeType.new("CAFR_PostSmallPacketsUSAAir")
  CAFR_PostSmallPacketsUSAGround = ShippingServiceCodeType.new("CAFR_PostSmallPacketsUSAGround")
  CAFR_PostUSALetterPost = ShippingServiceCodeType.new("CAFR_PostUSALetterPost")
  CAFR_PostXpresspost = ShippingServiceCodeType.new("CAFR_PostXpresspost")
  CAFR_PostXpresspostInternational = ShippingServiceCodeType.new("CAFR_PostXpresspostInternational")
  CAFR_PostXpresspostUSA = ShippingServiceCodeType.new("CAFR_PostXpresspostUSA")
  CAFR_PurolatorInternational = ShippingServiceCodeType.new("CAFR_PurolatorInternational")
  CAFR_SmallPacketsInternational = ShippingServiceCodeType.new("CAFR_SmallPacketsInternational")
  CAFR_SmallPacketsInternationalAir = ShippingServiceCodeType.new("CAFR_SmallPacketsInternationalAir")
  CAFR_SmallPacketsInternationalGround = ShippingServiceCodeType.new("CAFR_SmallPacketsInternationalGround")
  CAFR_StandardDelivery = ShippingServiceCodeType.new("CAFR_StandardDelivery")
  CAFR_StandardInternational = ShippingServiceCodeType.new("CAFR_StandardInternational")
  CAFR_UPS3DaySelectUnitedStates = ShippingServiceCodeType.new("CAFR_UPS3DaySelectUnitedStates")
  CAFR_UPSExpeditedCanada = ShippingServiceCodeType.new("CAFR_UPSExpeditedCanada")
  CAFR_UPSExpeditedUnitedStates = ShippingServiceCodeType.new("CAFR_UPSExpeditedUnitedStates")
  CAFR_UPSExpressCanada = ShippingServiceCodeType.new("CAFR_UPSExpressCanada")
  CAFR_UPSExpressSaverCanada = ShippingServiceCodeType.new("CAFR_UPSExpressSaverCanada")
  CAFR_UPSExpressUnitedStates = ShippingServiceCodeType.new("CAFR_UPSExpressUnitedStates")
  CAFR_UPSStandardCanada = ShippingServiceCodeType.new("CAFR_UPSStandardCanada")
  CAFR_UPSStandardUnitedStates = ShippingServiceCodeType.new("CAFR_UPSStandardUnitedStates")
  CAFR_UPSWorldWideExpedited = ShippingServiceCodeType.new("CAFR_UPSWorldWideExpedited")
  CAFR_UPSWorldWideExpress = ShippingServiceCodeType.new("CAFR_UPSWorldWideExpress")
  CA_ExpeditedDelivery = ShippingServiceCodeType.new("CA_ExpeditedDelivery")
  CA_ExpeditedInternational = ShippingServiceCodeType.new("CA_ExpeditedInternational")
  CA_OtherInternational = ShippingServiceCodeType.new("CA_OtherInternational")
  CA_Pickup = ShippingServiceCodeType.new("CA_Pickup")
  CA_PostExpeditedParcel = ShippingServiceCodeType.new("CA_PostExpeditedParcel")
  CA_PostExpeditedParcelUSA = ShippingServiceCodeType.new("CA_PostExpeditedParcelUSA")
  CA_PostInternationalLetterPost = ShippingServiceCodeType.new("CA_PostInternationalLetterPost")
  CA_PostInternationalParcelAir = ShippingServiceCodeType.new("CA_PostInternationalParcelAir")
  CA_PostInternationalParcelSurface = ShippingServiceCodeType.new("CA_PostInternationalParcelSurface")
  CA_PostLettermail = ShippingServiceCodeType.new("CA_PostLettermail")
  CA_PostLightPacketInternational = ShippingServiceCodeType.new("CA_PostLightPacketInternational")
  CA_PostLightPacketUSA = ShippingServiceCodeType.new("CA_PostLightPacketUSA")
  CA_PostPriorityCourier = ShippingServiceCodeType.new("CA_PostPriorityCourier")
  CA_PostRegularParcel = ShippingServiceCodeType.new("CA_PostRegularParcel")
  CA_PostSmallPacketsUSA = ShippingServiceCodeType.new("CA_PostSmallPacketsUSA")
  CA_PostSmallPacketsUSAAir = ShippingServiceCodeType.new("CA_PostSmallPacketsUSAAir")
  CA_PostSmallPacketsUSAGround = ShippingServiceCodeType.new("CA_PostSmallPacketsUSAGround")
  CA_PostUSALetterPost = ShippingServiceCodeType.new("CA_PostUSALetterPost")
  CA_PostXpresspost = ShippingServiceCodeType.new("CA_PostXpresspost")
  CA_PostXpresspostInternational = ShippingServiceCodeType.new("CA_PostXpresspostInternational")
  CA_PostXpresspostUSA = ShippingServiceCodeType.new("CA_PostXpresspostUSA")
  CA_PurolatorInternational = ShippingServiceCodeType.new("CA_PurolatorInternational")
  CA_SmallPacketsInternational = ShippingServiceCodeType.new("CA_SmallPacketsInternational")
  CA_SmallPacketsInternationalAir = ShippingServiceCodeType.new("CA_SmallPacketsInternationalAir")
  CA_SmallPacketsInternationalGround = ShippingServiceCodeType.new("CA_SmallPacketsInternationalGround")
  CA_StandardDelivery = ShippingServiceCodeType.new("CA_StandardDelivery")
  CA_StandardInternational = ShippingServiceCodeType.new("CA_StandardInternational")
  CA_UPS3DaySelectUnitedStates = ShippingServiceCodeType.new("CA_UPS3DaySelectUnitedStates")
  CA_UPSExpeditedCanada = ShippingServiceCodeType.new("CA_UPSExpeditedCanada")
  CA_UPSExpeditedUnitedStates = ShippingServiceCodeType.new("CA_UPSExpeditedUnitedStates")
  CA_UPSExpressCanada = ShippingServiceCodeType.new("CA_UPSExpressCanada")
  CA_UPSExpressSaverCanada = ShippingServiceCodeType.new("CA_UPSExpressSaverCanada")
  CA_UPSExpressUnitedStates = ShippingServiceCodeType.new("CA_UPSExpressUnitedStates")
  CA_UPSStandardCanada = ShippingServiceCodeType.new("CA_UPSStandardCanada")
  CA_UPSStandardUnitedStates = ShippingServiceCodeType.new("CA_UPSStandardUnitedStates")
  CA_UPSWorldWideExpedited = ShippingServiceCodeType.new("CA_UPSWorldWideExpedited")
  CA_UPSWorldWideExpress = ShippingServiceCodeType.new("CA_UPSWorldWideExpress")
  CH_BitteTreffenSieEineAuswahl = ShippingServiceCodeType.new("CH_BitteTreffenSieEineAuswahl")
  CH_COD = ShippingServiceCodeType.new("CH_COD")
  CH_EconomySendungenInternational = ShippingServiceCodeType.new("CH_EconomySendungenInternational")
  CH_EinschreibenVersandInklEinschreibengebuhr = ShippingServiceCodeType.new("CH_EinschreibenVersandInklEinschreibengebuhr")
  CH_ExpeditedInternational = ShippingServiceCodeType.new("CH_ExpeditedInternational")
  CH_ExpressOrCourier = ShippingServiceCodeType.new("CH_ExpressOrCourier")
  CH_ExpressOrCourierInternational = ShippingServiceCodeType.new("CH_ExpressOrCourierInternational")
  CH_InsuredDispatch = ShippingServiceCodeType.new("CH_InsuredDispatch")
  CH_InsuredExpressOrCourier = ShippingServiceCodeType.new("CH_InsuredExpressOrCourier")
  CH_InsuredExpressOrCourierInternational = ShippingServiceCodeType.new("CH_InsuredExpressOrCourierInternational")
  CH_InsuredSpecialDispatch = ShippingServiceCodeType.new("CH_InsuredSpecialDispatch")
  CH_NachnahmeVersandInklNachnahmegebuhr = ShippingServiceCodeType.new("CH_NachnahmeVersandInklNachnahmegebuhr")
  CH_Pickup = ShippingServiceCodeType.new("CH_Pickup")
  CH_PrioritySendungenInternational = ShippingServiceCodeType.new("CH_PrioritySendungenInternational")
  CH_SonderversandZBSperrgutKFZ = ShippingServiceCodeType.new("CH_SonderversandZBSperrgutKFZ")
  CH_Sonstige = ShippingServiceCodeType.new("CH_Sonstige")
  CH_SonstigerVersandInternational = ShippingServiceCodeType.new("CH_SonstigerVersandInternational")
  CH_SonstigerVersandSieheArtikelbeschreibung = ShippingServiceCodeType.new("CH_SonstigerVersandSieheArtikelbeschreibung")
  CH_SpecialDispatch = ShippingServiceCodeType.new("CH_SpecialDispatch")
  CH_StandardDispatchAPost = ShippingServiceCodeType.new("CH_StandardDispatchAPost")
  CH_StandardDispatchBPost = ShippingServiceCodeType.new("CH_StandardDispatchBPost")
  CH_StandardInternational = ShippingServiceCodeType.new("CH_StandardInternational")
  CH_StandardversandAPostPriority = ShippingServiceCodeType.new("CH_StandardversandAPostPriority")
  CH_StandardversandBPostEconomy = ShippingServiceCodeType.new("CH_StandardversandBPostEconomy")
  CH_UnversicherterVersand = ShippingServiceCodeType.new("CH_UnversicherterVersand")
  CH_UrgentSendungenInternational = ShippingServiceCodeType.new("CH_UrgentSendungenInternational")
  CH_VersicherterSonderversandZBSperrgutKFZ = ShippingServiceCodeType.new("CH_VersicherterSonderversandZBSperrgutKFZ")
  CH_VersicherterVersand = ShippingServiceCodeType.new("CH_VersicherterVersand")
  CH_Writing = ShippingServiceCodeType.new("CH_Writing")
  CN_CODInternational = ShippingServiceCodeType.new("CN_CODInternational")
  CN_DeliveryCompanyExpress = ShippingServiceCodeType.new("CN_DeliveryCompanyExpress")
  CN_EMSInternational = ShippingServiceCodeType.new("CN_EMSInternational")
  CN_ExpeditedInternational = ShippingServiceCodeType.new("CN_ExpeditedInternational")
  CN_ExpressDeliveryOtherCities = ShippingServiceCodeType.new("CN_ExpressDeliveryOtherCities")
  CN_ExpressDeliverySameCity = ShippingServiceCodeType.new("CN_ExpressDeliverySameCity")
  CN_FastPostOffice = ShippingServiceCodeType.new("CN_FastPostOffice")
  CN_OtherInternational = ShippingServiceCodeType.new("CN_OtherInternational")
  CN_Others = ShippingServiceCodeType.new("CN_Others")
  CN_OthersInternational = ShippingServiceCodeType.new("CN_OthersInternational")
  CN_PersonalDelivery = ShippingServiceCodeType.new("CN_PersonalDelivery")
  CN_PostOfficeExpress = ShippingServiceCodeType.new("CN_PostOfficeExpress")
  CN_RegularLogisticsInternational = ShippingServiceCodeType.new("CN_RegularLogisticsInternational")
  CN_RegularPackage = ShippingServiceCodeType.new("CN_RegularPackage")
  CN_StandardInternational = ShippingServiceCodeType.new("CN_StandardInternational")
  CN_StandardMailingInternational = ShippingServiceCodeType.new("CN_StandardMailingInternational")
  CanadaPostExpeditedFlatRateBox = ShippingServiceCodeType.new("CanadaPostExpeditedFlatRateBox")
  CanadaPostExpeditedFlatRateBoxUSA = ShippingServiceCodeType.new("CanadaPostExpeditedFlatRateBoxUSA")
  Courier = ShippingServiceCodeType.new("Courier")
  CustomCode = ShippingServiceCodeType.new("CustomCode")
  DE_BitteTreffenSieEineAuswahl = ShippingServiceCodeType.new("DE_BitteTreffenSieEineAuswahl")
  DE_COD = ShippingServiceCodeType.new("DE_COD")
  DE_DHLPackchen = ShippingServiceCodeType.new("DE_DHLPackchen")
  DE_DHLPackchenInternational = ShippingServiceCodeType.new("DE_DHLPackchenInternational")
  DE_DHLPaket = ShippingServiceCodeType.new("DE_DHLPaket")
  DE_DHLPaketInternational = ShippingServiceCodeType.new("DE_DHLPaketInternational")
  DE_DHLPostpaket = ShippingServiceCodeType.new("DE_DHLPostpaket")
  DE_DHLPostpaketInternational = ShippingServiceCodeType.new("DE_DHLPostpaketInternational")
  DE_DPBriefInternational = ShippingServiceCodeType.new("DE_DPBriefInternational")
  DE_DPBuecherWarensendung = ShippingServiceCodeType.new("DE_DPBuecherWarensendung")
  DE_DPD = ShippingServiceCodeType.new("DE_DPD")
  DE_DPDInternational = ShippingServiceCodeType.new("DE_DPDInternational")
  DE_DeutschePostBrief = ShippingServiceCodeType.new("DE_DeutschePostBrief")
  DE_DeutschePostBriefInternational = ShippingServiceCodeType.new("DE_DeutschePostBriefInternational")
  DE_DeutschePostBriefLandInternational = ShippingServiceCodeType.new("DE_DeutschePostBriefLandInternational")
  DE_DeutschePostBriefLuftInternational = ShippingServiceCodeType.new("DE_DeutschePostBriefLuftInternational")
  DE_DeutschePostBuchersendung = ShippingServiceCodeType.new("DE_DeutschePostBuchersendung")
  DE_DeutschePostByendung = ShippingServiceCodeType.new("DE_DeutschePostByendung")
  DE_DeutschePostWarensendung = ShippingServiceCodeType.new("DE_DeutschePostWarensendung")
  DE_DeutschePostWarensendungInternational = ShippingServiceCodeType.new("DE_DeutschePostWarensendungInternational")
  DE_Einschreiben = ShippingServiceCodeType.new("DE_Einschreiben")
  DE_EinschreibenVersandInklEinschreibengebuhr = ShippingServiceCodeType.new("DE_EinschreibenVersandInklEinschreibengebuhr")
  DE_ExpeditedInternational = ShippingServiceCodeType.new("DE_ExpeditedInternational")
  DE_Express = ShippingServiceCodeType.new("DE_Express")
  DE_ExpressInternational = ShippingServiceCodeType.new("DE_ExpressInternational")
  DE_ExpressOrCourier = ShippingServiceCodeType.new("DE_ExpressOrCourier")
  DE_ExpressOrCourierInternational = ShippingServiceCodeType.new("DE_ExpressOrCourierInternational")
  DE_GLS = ShippingServiceCodeType.new("DE_GLS")
  DE_GLSInternational = ShippingServiceCodeType.new("DE_GLSInternational")
  DE_HermesPaket = ShippingServiceCodeType.new("DE_HermesPaket")
  DE_HermesPaketInternational = ShippingServiceCodeType.new("DE_HermesPaketInternational")
  DE_HermesPaketUnversichert = ShippingServiceCodeType.new("DE_HermesPaketUnversichert")
  DE_HermesPaketUnversichertInternational = ShippingServiceCodeType.new("DE_HermesPaketUnversichertInternational")
  DE_HermesPaketVersichert = ShippingServiceCodeType.new("DE_HermesPaketVersichert")
  DE_HermesPaketVersichertInternational = ShippingServiceCodeType.new("DE_HermesPaketVersichertInternational")
  DE_IloxxEuropaInternational = ShippingServiceCodeType.new("DE_IloxxEuropaInternational")
  DE_IloxxStandard = ShippingServiceCodeType.new("DE_IloxxStandard")
  DE_IloxxTransport = ShippingServiceCodeType.new("DE_IloxxTransport")
  DE_IloxxTransportInternational = ShippingServiceCodeType.new("DE_IloxxTransportInternational")
  DE_IloxxTransportXXL = ShippingServiceCodeType.new("DE_IloxxTransportXXL")
  DE_IloxxUbernachtExpress = ShippingServiceCodeType.new("DE_IloxxUbernachtExpress")
  DE_IloxxWorldWideInternational = ShippingServiceCodeType.new("DE_IloxxWorldWideInternational")
  DE_InsuredDispatch = ShippingServiceCodeType.new("DE_InsuredDispatch")
  DE_InsuredExpressOrCourier = ShippingServiceCodeType.new("DE_InsuredExpressOrCourier")
  DE_InsuredExpressOrCourierInternational = ShippingServiceCodeType.new("DE_InsuredExpressOrCourierInternational")
  DE_InsuredSpecialDispatch = ShippingServiceCodeType.new("DE_InsuredSpecialDispatch")
  DE_NachnahmeVersandInklNachnahmegebuhr = ShippingServiceCodeType.new("DE_NachnahmeVersandInklNachnahmegebuhr")
  DE_Nachname = ShippingServiceCodeType.new("DE_Nachname")
  DE_Paket = ShippingServiceCodeType.new("DE_Paket")
  DE_PaketInternational = ShippingServiceCodeType.new("DE_PaketInternational")
  DE_Pickup = ShippingServiceCodeType.new("DE_Pickup")
  DE_SonderversandZBMobelKFZ = ShippingServiceCodeType.new("DE_SonderversandZBMobelKFZ")
  DE_Sonstige = ShippingServiceCodeType.new("DE_Sonstige")
  DE_SonstigeDomestic = ShippingServiceCodeType.new("DE_SonstigeDomestic")
  DE_SonstigeInternational = ShippingServiceCodeType.new("DE_SonstigeInternational")
  DE_SonstigerVersandInternational = ShippingServiceCodeType.new("DE_SonstigerVersandInternational")
  DE_SpecialDelivery = ShippingServiceCodeType.new("DE_SpecialDelivery")
  DE_SpecialDispatch = ShippingServiceCodeType.new("DE_SpecialDispatch")
  DE_StandardDispatch = ShippingServiceCodeType.new("DE_StandardDispatch")
  DE_StandardInternational = ShippingServiceCodeType.new("DE_StandardInternational")
  DE_UPS = ShippingServiceCodeType.new("DE_UPS")
  DE_UPSInternational = ShippingServiceCodeType.new("DE_UPSInternational")
  DE_UnversicherterExpressVersandInternational = ShippingServiceCodeType.new("DE_UnversicherterExpressVersandInternational")
  DE_UnversicherterVersand = ShippingServiceCodeType.new("DE_UnversicherterVersand")
  DE_UnversicherterVersandInternational = ShippingServiceCodeType.new("DE_UnversicherterVersandInternational")
  DE_VersicherterExpressVersandInternational = ShippingServiceCodeType.new("DE_VersicherterExpressVersandInternational")
  DE_VersicherterSonderversandZBMobelKFZ = ShippingServiceCodeType.new("DE_VersicherterSonderversandZBMobelKFZ")
  DE_VersicherterVersandInternational = ShippingServiceCodeType.new("DE_VersicherterVersandInternational")
  DE_Writing = ShippingServiceCodeType.new("DE_Writing")
  DE_iLoxxStandardInternational = ShippingServiceCodeType.new("DE_iLoxxStandardInternational")
  DE_iLoxxTransportXXLInternational = ShippingServiceCodeType.new("DE_iLoxxTransportXXLInternational")
  DE_iLoxxUbernachtExpressInternational = ShippingServiceCodeType.new("DE_iLoxxUbernachtExpressInternational")
  Delivery = ShippingServiceCodeType.new("Delivery")
  ES_CartasInternacionalesDeMas20 = ShippingServiceCodeType.new("ES_CartasInternacionalesDeMas20")
  ES_CartasInternacionalesHasta20 = ShippingServiceCodeType.new("ES_CartasInternacionalesHasta20")
  ES_CartasNacionalesDeMas20 = ShippingServiceCodeType.new("ES_CartasNacionalesDeMas20")
  ES_CartasNacionalesHasta20 = ShippingServiceCodeType.new("ES_CartasNacionalesHasta20")
  ES_CartasPostalInternational = ShippingServiceCodeType.new("ES_CartasPostalInternational")
  ES_EconomyPacketInternational = ShippingServiceCodeType.new("ES_EconomyPacketInternational")
  ES_EmsPostalExpressInternational = ShippingServiceCodeType.new("ES_EmsPostalExpressInternational")
  ES_ExpeditedInternational = ShippingServiceCodeType.new("ES_ExpeditedInternational")
  ES_OtherInternational = ShippingServiceCodeType.new("ES_OtherInternational")
  ES_Otros = ShippingServiceCodeType.new("ES_Otros")
  ES_PaqueteAzulDeMas2kg = ShippingServiceCodeType.new("ES_PaqueteAzulDeMas2kg")
  ES_PaqueteAzulHasta2kg = ShippingServiceCodeType.new("ES_PaqueteAzulHasta2kg")
  ES_PaqueteInternacionalEconomico = ShippingServiceCodeType.new("ES_PaqueteInternacionalEconomico")
  ES_Pickup = ShippingServiceCodeType.new("ES_Pickup")
  ES_StandardInternational = ShippingServiceCodeType.new("ES_StandardInternational")
  ES_Urgente = ShippingServiceCodeType.new("ES_Urgente")
  ExpeditedInternational = ShippingServiceCodeType.new("ExpeditedInternational")
  FR_AuteModeDenvoiDeColis = ShippingServiceCodeType.new("FR_AuteModeDenvoiDeColis")
  FR_Autre = ShippingServiceCodeType.new("FR_Autre")
  FR_Chrono10 = ShippingServiceCodeType.new("FR_Chrono10")
  FR_Chrono13 = ShippingServiceCodeType.new("FR_Chrono13")
  FR_Chrono18 = ShippingServiceCodeType.new("FR_Chrono18")
  FR_Chronopost = ShippingServiceCodeType.new("FR_Chronopost")
  FR_ChronopostChronoRelais = ShippingServiceCodeType.new("FR_ChronopostChronoRelais")
  FR_ChronopostClassicInternational = ShippingServiceCodeType.new("FR_ChronopostClassicInternational")
  FR_ChronopostExpressInternational = ShippingServiceCodeType.new("FR_ChronopostExpressInternational")
  FR_ChronopostPremiumInternational = ShippingServiceCodeType.new("FR_ChronopostPremiumInternational")
  FR_ChronoposteInternationalClassic = ShippingServiceCodeType.new("FR_ChronoposteInternationalClassic")
  FR_Colieco = ShippingServiceCodeType.new("FR_Colieco")
  FR_ColiposteColissimo = ShippingServiceCodeType.new("FR_ColiposteColissimo")
  FR_ColiposteColissimoDirect = ShippingServiceCodeType.new("FR_ColiposteColissimoDirect")
  FR_ColiposteColissimoRecommended = ShippingServiceCodeType.new("FR_ColiposteColissimoRecommended")
  FR_DHLExpressEuropack = ShippingServiceCodeType.new("FR_DHLExpressEuropack")
  FR_DHLInternational = ShippingServiceCodeType.new("FR_DHLInternational")
  FR_Ecopli = ShippingServiceCodeType.new("FR_Ecopli")
  FR_ExpeditedInternational = ShippingServiceCodeType.new("FR_ExpeditedInternational")
  FR_LaPosteColisEconomiqueInternational = ShippingServiceCodeType.new("FR_LaPosteColisEconomiqueInternational")
  FR_LaPosteColissimoEmballageInternational = ShippingServiceCodeType.new("FR_LaPosteColissimoEmballageInternational")
  FR_LaPosteColissimoInternational = ShippingServiceCodeType.new("FR_LaPosteColissimoInternational")
  FR_LaPosteInternationalEconomyCourier = ShippingServiceCodeType.new("FR_LaPosteInternationalEconomyCourier")
  FR_LaPosteInternationalPriorityCourier = ShippingServiceCodeType.new("FR_LaPosteInternationalPriorityCourier")
  FR_LaPosteLetterMax = ShippingServiceCodeType.new("FR_LaPosteLetterMax")
  FR_OtherInternational = ShippingServiceCodeType.new("FR_OtherInternational")
  FR_Pickup = ShippingServiceCodeType.new("FR_Pickup")
  FR_PostOfficeLetter = ShippingServiceCodeType.new("FR_PostOfficeLetter")
  FR_PostOfficeLetterFollowed = ShippingServiceCodeType.new("FR_PostOfficeLetterFollowed")
  FR_PostOfficeLetterRecommended = ShippingServiceCodeType.new("FR_PostOfficeLetterRecommended")
  FR_RemiseEnMainPropre = ShippingServiceCodeType.new("FR_RemiseEnMainPropre")
  FR_StandardInternational = ShippingServiceCodeType.new("FR_StandardInternational")
  FR_UPSExpressInternational = ShippingServiceCodeType.new("FR_UPSExpressInternational")
  FR_UPSStandard = ShippingServiceCodeType.new("FR_UPSStandard")
  FR_UPSStandardAgainstRefund = ShippingServiceCodeType.new("FR_UPSStandardAgainstRefund")
  FR_UPSStandardInternational = ShippingServiceCodeType.new("FR_UPSStandardInternational")
  Freight = ShippingServiceCodeType.new("Freight")
  FreightOtherShipping = ShippingServiceCodeType.new("FreightOtherShipping")
  FreightShipping = ShippingServiceCodeType.new("FreightShipping")
  FreightShippingInternational = ShippingServiceCodeType.new("FreightShippingInternational")
  HK_DomesticRegularShipping = ShippingServiceCodeType.new("HK_DomesticRegularShipping")
  HK_DomesticSpecialShipping = ShippingServiceCodeType.new("HK_DomesticSpecialShipping")
  HK_InternationalRegularShipping = ShippingServiceCodeType.new("HK_InternationalRegularShipping")
  HK_InternationalSpecialShipping = ShippingServiceCodeType.new("HK_InternationalSpecialShipping")
  HK_LocalCourier = ShippingServiceCodeType.new("HK_LocalCourier")
  HK_LocalPickUpOnly = ShippingServiceCodeType.new("HK_LocalPickUpOnly")
  IE_CollectionInPerson = ShippingServiceCodeType.new("IE_CollectionInPerson")
  IE_CollectionInPersonInternational = ShippingServiceCodeType.new("IE_CollectionInPersonInternational")
  IE_EMSSDSCourier = ShippingServiceCodeType.new("IE_EMSSDSCourier")
  IE_EMSSDSCourierInternational = ShippingServiceCodeType.new("IE_EMSSDSCourierInternational")
  IE_EconomySDSCourier = ShippingServiceCodeType.new("IE_EconomySDSCourier")
  IE_EconomySDSCourierInternational = ShippingServiceCodeType.new("IE_EconomySDSCourierInternational")
  IE_ExpeditedInternationalFlatRatePostage = ShippingServiceCodeType.new("IE_ExpeditedInternationalFlatRatePostage")
  IE_FirstClassLetterService = ShippingServiceCodeType.new("IE_FirstClassLetterService")
  IE_InternationalEconomyService = ShippingServiceCodeType.new("IE_InternationalEconomyService")
  IE_InternationalPriorityService = ShippingServiceCodeType.new("IE_InternationalPriorityService")
  IE_OtherCourier = ShippingServiceCodeType.new("IE_OtherCourier")
  IE_OtherCourierInternational = ShippingServiceCodeType.new("IE_OtherCourierInternational")
  IE_OtherInternationalPostage = ShippingServiceCodeType.new("IE_OtherInternationalPostage")
  IE_RegisteredPost = ShippingServiceCodeType.new("IE_RegisteredPost")
  IE_SellersStandardRate = ShippingServiceCodeType.new("IE_SellersStandardRate")
  IE_SellersStandardRateInternational = ShippingServiceCodeType.new("IE_SellersStandardRateInternational")
  IE_StandardInternationalFlatRatePostage = ShippingServiceCodeType.new("IE_StandardInternationalFlatRatePostage")
  IE_SwiftPostExpressInternational = ShippingServiceCodeType.new("IE_SwiftPostExpressInternational")
  IE_SwiftPostInternational = ShippingServiceCodeType.new("IE_SwiftPostInternational")
  IE_SwiftPostNational = ShippingServiceCodeType.new("IE_SwiftPostNational")
  IN_BuyerPicksUpAndPays = ShippingServiceCodeType.new("IN_BuyerPicksUpAndPays")
  IN_Courier = ShippingServiceCodeType.new("IN_Courier")
  IN_ExpeditedInternational = ShippingServiceCodeType.new("IN_ExpeditedInternational")
  IN_Express = ShippingServiceCodeType.new("IN_Express")
  IN_FlatRateCOD = ShippingServiceCodeType.new("IN_FlatRateCOD")
  IN_LocalCOD = ShippingServiceCodeType.new("IN_LocalCOD")
  IN_NationalCOD = ShippingServiceCodeType.new("IN_NationalCOD")
  IN_OtherInternational = ShippingServiceCodeType.new("IN_OtherInternational")
  IN_Regular = ShippingServiceCodeType.new("IN_Regular")
  IN_StandardInternational = ShippingServiceCodeType.new("IN_StandardInternational")
  IT_ExpeditedInternational = ShippingServiceCodeType.new("IT_ExpeditedInternational")
  IT_ExpressCourier = ShippingServiceCodeType.new("IT_ExpressCourier")
  IT_ExpressPackageMaxi = ShippingServiceCodeType.new("IT_ExpressPackageMaxi")
  IT_InsuredMail = ShippingServiceCodeType.new("IT_InsuredMail")
  IT_MailRegisteredLetter = ShippingServiceCodeType.new("IT_MailRegisteredLetter")
  IT_MailRegisteredLetterWithMark = ShippingServiceCodeType.new("IT_MailRegisteredLetterWithMark")
  IT_OtherInternational = ShippingServiceCodeType.new("IT_OtherInternational")
  IT_Pickup = ShippingServiceCodeType.new("IT_Pickup")
  IT_PriorityMail = ShippingServiceCodeType.new("IT_PriorityMail")
  IT_QuickMail = ShippingServiceCodeType.new("IT_QuickMail")
  IT_QuickPackage1 = ShippingServiceCodeType.new("IT_QuickPackage1")
  IT_QuickPackage3 = ShippingServiceCodeType.new("IT_QuickPackage3")
  IT_RegularMail = ShippingServiceCodeType.new("IT_RegularMail")
  IT_RegularPackage = ShippingServiceCodeType.new("IT_RegularPackage")
  IT_StandardInternational = ShippingServiceCodeType.new("IT_StandardInternational")
  InternationalNotSelected = ShippingServiceCodeType.new("InternationalNotSelected")
  LocalDelivery = ShippingServiceCodeType.new("LocalDelivery")
  NL_DHLInternational = ShippingServiceCodeType.new("NL_DHLInternational")
  NL_DPDGBRInternational = ShippingServiceCodeType.new("NL_DPDGBRInternational")
  NL_ExpeditedInternational = ShippingServiceCodeType.new("NL_ExpeditedInternational")
  NL_FedExInternational = ShippingServiceCodeType.new("NL_FedExInternational")
  NL_GLSBusinessInternational = ShippingServiceCodeType.new("NL_GLSBusinessInternational")
  NL_Other = ShippingServiceCodeType.new("NL_Other")
  NL_OtherInternational = ShippingServiceCodeType.new("NL_OtherInternational")
  NL_ParcelPost = ShippingServiceCodeType.new("NL_ParcelPost")
  NL_Pickup = ShippingServiceCodeType.new("NL_Pickup")
  NL_RegisteredMail = ShippingServiceCodeType.new("NL_RegisteredMail")
  NL_StandardDelivery = ShippingServiceCodeType.new("NL_StandardDelivery")
  NL_StandardInternational = ShippingServiceCodeType.new("NL_StandardInternational")
  NL_TPGPostTNTInternational = ShippingServiceCodeType.new("NL_TPGPostTNTInternational")
  NL_UPSInternational = ShippingServiceCodeType.new("NL_UPSInternational")
  NotSelected = ShippingServiceCodeType.new("NotSelected")
  Other = ShippingServiceCodeType.new("Other")
  OtherInternational = ShippingServiceCodeType.new("OtherInternational")
  PL_DHLInternational = ShippingServiceCodeType.new("PL_DHLInternational")
  PL_DomesticRegular = ShippingServiceCodeType.new("PL_DomesticRegular")
  PL_DomesticSpecial = ShippingServiceCodeType.new("PL_DomesticSpecial")
  PL_InternationalRegular = ShippingServiceCodeType.new("PL_InternationalRegular")
  PL_InternationalSpecial = ShippingServiceCodeType.new("PL_InternationalSpecial")
  PL_Pickup = ShippingServiceCodeType.new("PL_Pickup")
  PL_UPSInternational = ShippingServiceCodeType.new("PL_UPSInternational")
  Pickup = ShippingServiceCodeType.new("Pickup")
  SG_Delivery = ShippingServiceCodeType.new("SG_Delivery")
  SG_DomesticNonStandardMail = ShippingServiceCodeType.new("SG_DomesticNonStandardMail")
  SG_DomesticSpeedpostIslandwide = ShippingServiceCodeType.new("SG_DomesticSpeedpostIslandwide")
  SG_DomesticStandardMail = ShippingServiceCodeType.new("SG_DomesticStandardMail")
  SG_InternationalCourier = ShippingServiceCodeType.new("SG_InternationalCourier")
  SG_InternationalExpressMailService = ShippingServiceCodeType.new("SG_InternationalExpressMailService")
  SG_InternationalStandardMail = ShippingServiceCodeType.new("SG_InternationalStandardMail")
  SG_LocalCourier = ShippingServiceCodeType.new("SG_LocalCourier")
  SG_LocalPickUpOnly = ShippingServiceCodeType.new("SG_LocalPickUpOnly")
  ShippingMethodExpress = ShippingServiceCodeType.new("ShippingMethodExpress")
  ShippingMethodOvernight = ShippingServiceCodeType.new("ShippingMethodOvernight")
  ShippingMethodStandard = ShippingServiceCodeType.new("ShippingMethodStandard")
  StandardInternational = ShippingServiceCodeType.new("StandardInternational")
  TW_COD = ShippingServiceCodeType.new("TW_COD")
  TW_CPInternationalEMS = ShippingServiceCodeType.new("TW_CPInternationalEMS")
  TW_CPInternationalLetterPost = ShippingServiceCodeType.new("TW_CPInternationalLetterPost")
  TW_CPInternationalOceanShippingParcel = ShippingServiceCodeType.new("TW_CPInternationalOceanShippingParcel")
  TW_CPInternationalParcelPost = ShippingServiceCodeType.new("TW_CPInternationalParcelPost")
  TW_CPInternationalRegisteredLetterPost = ShippingServiceCodeType.new("TW_CPInternationalRegisteredLetterPost")
  TW_CPInternationalRegisteredParcelPost = ShippingServiceCodeType.new("TW_CPInternationalRegisteredParcelPost")
  TW_DwellingMatchCOD = ShippingServiceCodeType.new("TW_DwellingMatchCOD")
  TW_DwellingMatchPost = ShippingServiceCodeType.new("TW_DwellingMatchPost")
  TW_ExpeditedInternationalFixedRate = ShippingServiceCodeType.new("TW_ExpeditedInternationalFixedRate")
  TW_ExpressMail = ShippingServiceCodeType.new("TW_ExpressMail")
  TW_FedExInternationalEconomy = ShippingServiceCodeType.new("TW_FedExInternationalEconomy")
  TW_FedExInternationalPriority = ShippingServiceCodeType.new("TW_FedExInternationalPriority")
  TW_Other = ShippingServiceCodeType.new("TW_Other")
  TW_OtherInternational = ShippingServiceCodeType.new("TW_OtherInternational")
  TW_ParcelPost = ShippingServiceCodeType.new("TW_ParcelPost")
  TW_RegisteredMail = ShippingServiceCodeType.new("TW_RegisteredMail")
  TW_SelfPickup = ShippingServiceCodeType.new("TW_SelfPickup")
  TW_StandardInternationalFixedRate = ShippingServiceCodeType.new("TW_StandardInternationalFixedRate")
  TW_UPSWorldwideExpedited = ShippingServiceCodeType.new("TW_UPSWorldwideExpedited")
  TW_UPSWorldwideExpress = ShippingServiceCodeType.new("TW_UPSWorldwideExpress")
  TW_UPSWorldwideExpressPlus = ShippingServiceCodeType.new("TW_UPSWorldwideExpressPlus")
  TW_UnregisteredMail = ShippingServiceCodeType.new("TW_UnregisteredMail")
  UK_CollectInPerson = ShippingServiceCodeType.new("UK_CollectInPerson")
  UK_CollectInPersonInternational = ShippingServiceCodeType.new("UK_CollectInPersonInternational")
  UK_ExpeditedInternationalFlatRatePostage = ShippingServiceCodeType.new("UK_ExpeditedInternationalFlatRatePostage")
  UK_OtherCourier = ShippingServiceCodeType.new("UK_OtherCourier")
  UK_OtherCourier24 = ShippingServiceCodeType.new("UK_OtherCourier24")
  UK_OtherCourier48 = ShippingServiceCodeType.new("UK_OtherCourier48")
  UK_OtherCourierOrDeliveryInternational = ShippingServiceCodeType.new("UK_OtherCourierOrDeliveryInternational")
  UK_OtherInternationalPostage = ShippingServiceCodeType.new("UK_OtherInternationalPostage")
  UK_ParcelForceEuro48International = ShippingServiceCodeType.new("UK_ParcelForceEuro48International")
  UK_ParcelForceInternationalDatapost = ShippingServiceCodeType.new("UK_ParcelForceInternationalDatapost")
  UK_ParcelForceInternationalScheduled = ShippingServiceCodeType.new("UK_ParcelForceInternationalScheduled")
  UK_ParcelForceIreland24International = ShippingServiceCodeType.new("UK_ParcelForceIreland24International")
  UK_Parcelforce24 = ShippingServiceCodeType.new("UK_Parcelforce24")
  UK_Parcelforce48 = ShippingServiceCodeType.new("UK_Parcelforce48")
  UK_RoyalMailAirmailInternational = ShippingServiceCodeType.new("UK_RoyalMailAirmailInternational")
  UK_RoyalMailAirsureInternational = ShippingServiceCodeType.new("UK_RoyalMailAirsureInternational")
  UK_RoyalMailFirstClassRecorded = ShippingServiceCodeType.new("UK_RoyalMailFirstClassRecorded")
  UK_RoyalMailFirstClassStandard = ShippingServiceCodeType.new("UK_RoyalMailFirstClassStandard")
  UK_RoyalMailHMForcesMailInternational = ShippingServiceCodeType.new("UK_RoyalMailHMForcesMailInternational")
  UK_RoyalMailInternationalSignedFor = ShippingServiceCodeType.new("UK_RoyalMailInternationalSignedFor")
  UK_RoyalMailSecondClassRecorded = ShippingServiceCodeType.new("UK_RoyalMailSecondClassRecorded")
  UK_RoyalMailSecondClassStandard = ShippingServiceCodeType.new("UK_RoyalMailSecondClassStandard")
  UK_RoyalMailSpecialDelivery = ShippingServiceCodeType.new("UK_RoyalMailSpecialDelivery")
  UK_RoyalMailSpecialDelivery9am = ShippingServiceCodeType.new("UK_RoyalMailSpecialDelivery9am")
  UK_RoyalMailSpecialDeliveryNextDay = ShippingServiceCodeType.new("UK_RoyalMailSpecialDeliveryNextDay")
  UK_RoyalMailStandardParcel = ShippingServiceCodeType.new("UK_RoyalMailStandardParcel")
  UK_RoyalMailSurfaceMailInternational = ShippingServiceCodeType.new("UK_RoyalMailSurfaceMailInternational")
  UK_SellersStandardInternationalRate = ShippingServiceCodeType.new("UK_SellersStandardInternationalRate")
  UK_SellersStandardRate = ShippingServiceCodeType.new("UK_SellersStandardRate")
  UK_StandardInternationalFlatRatePostage = ShippingServiceCodeType.new("UK_StandardInternationalFlatRatePostage")
  UPS2DayAirAM = ShippingServiceCodeType.new("UPS2DayAirAM")
  UPS2ndDay = ShippingServiceCodeType.new("UPS2ndDay")
  UPS3rdDay = ShippingServiceCodeType.new("UPS3rdDay")
  UPSGround = ShippingServiceCodeType.new("UPSGround")
  UPSNextDay = ShippingServiceCodeType.new("UPSNextDay")
  UPSNextDayAir = ShippingServiceCodeType.new("UPSNextDayAir")
  UPSStandardToCanada = ShippingServiceCodeType.new("UPSStandardToCanada")
  UPSWorldWideExpedited = ShippingServiceCodeType.new("UPSWorldWideExpedited")
  UPSWorldWideExpress = ShippingServiceCodeType.new("UPSWorldWideExpress")
  UPSWorldWideExpressBox10kg = ShippingServiceCodeType.new("UPSWorldWideExpressBox10kg")
  UPSWorldWideExpressBox25kg = ShippingServiceCodeType.new("UPSWorldWideExpressBox25kg")
  UPSWorldWideExpressPlus = ShippingServiceCodeType.new("UPSWorldWideExpressPlus")
  UPSWorldWideExpressPlusBox10kg = ShippingServiceCodeType.new("UPSWorldWideExpressPlusBox10kg")
  UPSWorldWideExpressPlusBox25kg = ShippingServiceCodeType.new("UPSWorldWideExpressPlusBox25kg")
  USPSAirmailLetter = ShippingServiceCodeType.new("USPSAirmailLetter")
  USPSAirmailParcel = ShippingServiceCodeType.new("USPSAirmailParcel")
  USPSEconomyLetter = ShippingServiceCodeType.new("USPSEconomyLetter")
  USPSEconomyParcel = ShippingServiceCodeType.new("USPSEconomyParcel")
  USPSExpressFlatRateEnvelope = ShippingServiceCodeType.new("USPSExpressFlatRateEnvelope")
  USPSExpressMail = ShippingServiceCodeType.new("USPSExpressMail")
  USPSExpressMailFlatRateEnvelope = ShippingServiceCodeType.new("USPSExpressMailFlatRateEnvelope")
  USPSExpressMailInternational = ShippingServiceCodeType.new("USPSExpressMailInternational")
  USPSExpressMailInternationalFlatRateEnvelope = ShippingServiceCodeType.new("USPSExpressMailInternationalFlatRateEnvelope")
  USPSFirstClass = ShippingServiceCodeType.new("USPSFirstClass")
  USPSFirstClassMailInternational = ShippingServiceCodeType.new("USPSFirstClassMailInternational")
  USPSGlobalExpress = ShippingServiceCodeType.new("USPSGlobalExpress")
  USPSGlobalExpressGuaranteed = ShippingServiceCodeType.new("USPSGlobalExpressGuaranteed")
  USPSGlobalPriority = ShippingServiceCodeType.new("USPSGlobalPriority")
  USPSGlobalPriorityLargeEnvelope = ShippingServiceCodeType.new("USPSGlobalPriorityLargeEnvelope")
  USPSGlobalPrioritySmallEnvelope = ShippingServiceCodeType.new("USPSGlobalPrioritySmallEnvelope")
  USPSGround = ShippingServiceCodeType.new("USPSGround")
  USPSMedia = ShippingServiceCodeType.new("USPSMedia")
  USPSParcel = ShippingServiceCodeType.new("USPSParcel")
  USPSPriority = ShippingServiceCodeType.new("USPSPriority")
  USPSPriorityFlatRateBox = ShippingServiceCodeType.new("USPSPriorityFlatRateBox")
  USPSPriorityFlatRateEnvelope = ShippingServiceCodeType.new("USPSPriorityFlatRateEnvelope")
  USPSPriorityMailFlatRateBox = ShippingServiceCodeType.new("USPSPriorityMailFlatRateBox")
  USPSPriorityMailFlatRateEnvelope = ShippingServiceCodeType.new("USPSPriorityMailFlatRateEnvelope")
  USPSPriorityMailInternational = ShippingServiceCodeType.new("USPSPriorityMailInternational")
  USPSPriorityMailInternationalFlatRateBox = ShippingServiceCodeType.new("USPSPriorityMailInternationalFlatRateBox")
  USPSPriorityMailInternationalFlatRateEnvelope = ShippingServiceCodeType.new("USPSPriorityMailInternationalFlatRateEnvelope")
  USPSPriorityMailInternationalLargeFlatRateBox = ShippingServiceCodeType.new("USPSPriorityMailInternationalLargeFlatRateBox")
  USPSPriorityMailLargeFlatRateBox = ShippingServiceCodeType.new("USPSPriorityMailLargeFlatRateBox")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTypeCodeType
class ShippingTypeCodeType < ::String
  Calculated = ShippingTypeCodeType.new("Calculated")
  CalculatedDomesticFlatInternational = ShippingTypeCodeType.new("CalculatedDomesticFlatInternational")
  CustomCode = ShippingTypeCodeType.new("CustomCode")
  Flat = ShippingTypeCodeType.new("Flat")
  FlatDomesticCalculatedInternational = ShippingTypeCodeType.new("FlatDomesticCalculatedInternational")
  Free = ShippingTypeCodeType.new("Free")
  Freight = ShippingTypeCodeType.new("Freight")
  FreightFlat = ShippingTypeCodeType.new("FreightFlat")
  NotSpecified = ShippingTypeCodeType.new("NotSpecified")
end

# {urn:ebay:apis:eBLBaseComponents}SimpleItemSortCodeType
class SimpleItemSortCodeType < ::String
  BestMatch = SimpleItemSortCodeType.new("BestMatch")
  BestMatchCategoryGroup = SimpleItemSortCodeType.new("BestMatchCategoryGroup")
  BidCount = SimpleItemSortCodeType.new("BidCount")
  Country = SimpleItemSortCodeType.new("Country")
  CurrentBid = SimpleItemSortCodeType.new("CurrentBid")
  CustomCode = SimpleItemSortCodeType.new("CustomCode")
  Distance = SimpleItemSortCodeType.new("Distance")
  EndTime = SimpleItemSortCodeType.new("EndTime")
  PricePlusShipping = SimpleItemSortCodeType.new("PricePlusShipping")
  StartDate = SimpleItemSortCodeType.new("StartDate")
end

# {urn:ebay:apis:eBLBaseComponents}SiteCodeType
class SiteCodeType < ::String
  Australia = SiteCodeType.new("Australia")
  Austria = SiteCodeType.new("Austria")
  Belgium_Dutch = SiteCodeType.new("Belgium_Dutch")
  Belgium_French = SiteCodeType.new("Belgium_French")
  Canada = SiteCodeType.new("Canada")
  CanadaFrench = SiteCodeType.new("CanadaFrench")
  China = SiteCodeType.new("China")
  CustomCode = SiteCodeType.new("CustomCode")
  EBayMotors = SiteCodeType.new("eBayMotors")
  France = SiteCodeType.new("France")
  Germany = SiteCodeType.new("Germany")
  HongKong = SiteCodeType.new("HongKong")
  India = SiteCodeType.new("India")
  Ireland = SiteCodeType.new("Ireland")
  Italy = SiteCodeType.new("Italy")
  Malaysia = SiteCodeType.new("Malaysia")
  Netherlands = SiteCodeType.new("Netherlands")
  Philippines = SiteCodeType.new("Philippines")
  Poland = SiteCodeType.new("Poland")
  Singapore = SiteCodeType.new("Singapore")
  Spain = SiteCodeType.new("Spain")
  Sweden = SiteCodeType.new("Sweden")
  Switzerland = SiteCodeType.new("Switzerland")
  Taiwan = SiteCodeType.new("Taiwan")
  UK = SiteCodeType.new("UK")
  US = SiteCodeType.new("US")
end

# {urn:ebay:apis:eBLBaseComponents}SiteIDFilterCodeType
class SiteIDFilterCodeType < ::String
  AvailableInCountryImplied = SiteIDFilterCodeType.new("AvailableInCountryImplied")
  BelgiumListing = SiteIDFilterCodeType.new("BelgiumListing")
  CustomCode = SiteIDFilterCodeType.new("CustomCode")
  ListedInCurrencyImplied = SiteIDFilterCodeType.new("ListedInCurrencyImplied")
  LocatedInCountryImplied = SiteIDFilterCodeType.new("LocatedInCountryImplied")
  SiteImplied = SiteIDFilterCodeType.new("SiteImplied")
end

# {urn:ebay:apis:eBLBaseComponents}SkypeContactOptionCodeType
class SkypeContactOptionCodeType < ::String
  Chat = SkypeContactOptionCodeType.new("Chat")
  CustomCode = SkypeContactOptionCodeType.new("CustomCode")
  Voice = SkypeContactOptionCodeType.new("Voice")
end

# {urn:ebay:apis:eBLBaseComponents}SortOrderCodeType
class SortOrderCodeType < ::String
  Ascending = SortOrderCodeType.new("Ascending")
  CustomCode = SortOrderCodeType.new("CustomCode")
  Descending = SortOrderCodeType.new("Descending")
end

# {urn:ebay:apis:eBLBaseComponents}StatusCodeType
class StatusCodeType < ::String
  Active = StatusCodeType.new("Active")
  CustomCode = StatusCodeType.new("CustomCode")
  Inactive = StatusCodeType.new("Inactive")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCategoryUpdateActionCodeType
class StoreCategoryUpdateActionCodeType < ::String
  Add = StoreCategoryUpdateActionCodeType.new("Add")
  CustomCode = StoreCategoryUpdateActionCodeType.new("CustomCode")
  Delete = StoreCategoryUpdateActionCodeType.new("Delete")
  Move = StoreCategoryUpdateActionCodeType.new("Move")
  Rename = StoreCategoryUpdateActionCodeType.new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomHeaderLayoutCodeType
class StoreCustomHeaderLayoutCodeType < ::String
  CustomCode = StoreCustomHeaderLayoutCodeType.new("CustomCode")
  CustomHeaderShown = StoreCustomHeaderLayoutCodeType.new("CustomHeaderShown")
  NoHeader = StoreCustomHeaderLayoutCodeType.new("NoHeader")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderDisplayCodeType
class StoreCustomListingHeaderDisplayCodeType < ::String
  CustomCode = StoreCustomListingHeaderDisplayCodeType.new("CustomCode")
  Full = StoreCustomListingHeaderDisplayCodeType.new("Full")
  FullAndLeftNavigationBar = StoreCustomListingHeaderDisplayCodeType.new("FullAndLeftNavigationBar")
  None = StoreCustomListingHeaderDisplayCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkCodeType
class StoreCustomListingHeaderLinkCodeType < ::String
  AboutMePage = StoreCustomListingHeaderLinkCodeType.new("AboutMePage")
  CustomCategory = StoreCustomListingHeaderLinkCodeType.new("CustomCategory")
  CustomCode = StoreCustomListingHeaderLinkCodeType.new("CustomCode")
  CustomPage = StoreCustomListingHeaderLinkCodeType.new("CustomPage")
  None = StoreCustomListingHeaderLinkCodeType.new("None")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageStatusCodeType
class StoreCustomPageStatusCodeType < ::String
  Active = StoreCustomPageStatusCodeType.new("Active")
  CustomCode = StoreCustomPageStatusCodeType.new("CustomCode")
  Delete = StoreCustomPageStatusCodeType.new("Delete")
  Inactive = StoreCustomPageStatusCodeType.new("Inactive")
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontFaceCodeType
class StoreFontFaceCodeType < ::String
  Arial = StoreFontFaceCodeType.new("Arial")
  Courier = StoreFontFaceCodeType.new("Courier")
  CustomCode = StoreFontFaceCodeType.new("CustomCode")
  Times = StoreFontFaceCodeType.new("Times")
  Verdana = StoreFontFaceCodeType.new("Verdana")
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontSizeCodeType
class StoreFontSizeCodeType < ::String
  CustomCode = StoreFontSizeCodeType.new("CustomCode")
  L = StoreFontSizeCodeType.new("L")
  M = StoreFontSizeCodeType.new("M")
  S = StoreFontSizeCodeType.new("S")
  XL = StoreFontSizeCodeType.new("XL")
  XS = StoreFontSizeCodeType.new("XS")
  XXL = StoreFontSizeCodeType.new("XXL")
  XXS = StoreFontSizeCodeType.new("XXS")
end

# {urn:ebay:apis:eBLBaseComponents}StoreHeaderStyleCodeType
class StoreHeaderStyleCodeType < ::String
  CustomCode = StoreHeaderStyleCodeType.new("CustomCode")
  Full = StoreHeaderStyleCodeType.new("Full")
  Minimized = StoreHeaderStyleCodeType.new("Minimized")
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListLayoutCodeType
class StoreItemListLayoutCodeType < ::String
  CustomCode = StoreItemListLayoutCodeType.new("CustomCode")
  GalleryView = StoreItemListLayoutCodeType.new("GalleryView")
  ListView = StoreItemListLayoutCodeType.new("ListView")
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListSortOrderCodeType
class StoreItemListSortOrderCodeType < ::String
  CustomCode = StoreItemListSortOrderCodeType.new("CustomCode")
  EndingFirst = StoreItemListSortOrderCodeType.new("EndingFirst")
  HighestPriced = StoreItemListSortOrderCodeType.new("HighestPriced")
  LowestPriced = StoreItemListSortOrderCodeType.new("LowestPriced")
  NewlyListed = StoreItemListSortOrderCodeType.new("NewlyListed")
end

# {urn:ebay:apis:eBLBaseComponents}StoreSearchCodeType
class StoreSearchCodeType < ::String
  AllItemsInTheStore = StoreSearchCodeType.new("AllItemsInTheStore")
  AuctionItemsInTheStore = StoreSearchCodeType.new("AuctionItemsInTheStore")
  BuyItNowItemsInAllStores = StoreSearchCodeType.new("BuyItNowItemsInAllStores")
  BuyItNowItemsInTheStore = StoreSearchCodeType.new("BuyItNowItemsInTheStore")
  CustomCode = StoreSearchCodeType.new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionLevelCodeType
class StoreSubscriptionLevelCodeType < ::String
  Anchor = StoreSubscriptionLevelCodeType.new("Anchor")
  Basic = StoreSubscriptionLevelCodeType.new("Basic")
  Close = StoreSubscriptionLevelCodeType.new("Close")
  CustomCode = StoreSubscriptionLevelCodeType.new("CustomCode")
  Featured = StoreSubscriptionLevelCodeType.new("Featured")
end

# {urn:ebay:apis:eBLBaseComponents}StringMatchCodeType
class StringMatchCodeType < ::String
  Contains = StringMatchCodeType.new("Contains")
  CustomCode = StringMatchCodeType.new("CustomCode")
  StartsWith = StringMatchCodeType.new("StartsWith")
end

# {urn:ebay:apis:eBLBaseComponents}SummaryFrequencyCodeType
class SummaryFrequencyCodeType < ::String
  CustomCode = SummaryFrequencyCodeType.new("CustomCode")
  Every31Days = SummaryFrequencyCodeType.new("Every31Days")
  Every60Days = SummaryFrequencyCodeType.new("Every60Days")
  EveryFriday = SummaryFrequencyCodeType.new("EveryFriday")
  EveryMonday = SummaryFrequencyCodeType.new("EveryMonday")
  EverySaturday = SummaryFrequencyCodeType.new("EverySaturday")
  EverySunday = SummaryFrequencyCodeType.new("EverySunday")
  EveryThursday = SummaryFrequencyCodeType.new("EveryThursday")
  EveryTuesday = SummaryFrequencyCodeType.new("EveryTuesday")
  EveryWednesday = SummaryFrequencyCodeType.new("EveryWednesday")
  MonthlyOn10th = SummaryFrequencyCodeType.new("MonthlyOn10th")
  MonthlyOn11th = SummaryFrequencyCodeType.new("MonthlyOn11th")
  MonthlyOn12th = SummaryFrequencyCodeType.new("MonthlyOn12th")
  MonthlyOn13th = SummaryFrequencyCodeType.new("MonthlyOn13th")
  MonthlyOn14th = SummaryFrequencyCodeType.new("MonthlyOn14th")
  MonthlyOn15th = SummaryFrequencyCodeType.new("MonthlyOn15th")
  MonthlyOn16th = SummaryFrequencyCodeType.new("MonthlyOn16th")
  MonthlyOn17th = SummaryFrequencyCodeType.new("MonthlyOn17th")
  MonthlyOn18th = SummaryFrequencyCodeType.new("MonthlyOn18th")
  MonthlyOn19th = SummaryFrequencyCodeType.new("MonthlyOn19th")
  MonthlyOn1st = SummaryFrequencyCodeType.new("MonthlyOn1st")
  MonthlyOn20th = SummaryFrequencyCodeType.new("MonthlyOn20th")
  MonthlyOn21st = SummaryFrequencyCodeType.new("MonthlyOn21st")
  MonthlyOn22nd = SummaryFrequencyCodeType.new("MonthlyOn22nd")
  MonthlyOn23rd = SummaryFrequencyCodeType.new("MonthlyOn23rd")
  MonthlyOn24th = SummaryFrequencyCodeType.new("MonthlyOn24th")
  MonthlyOn25th = SummaryFrequencyCodeType.new("MonthlyOn25th")
  MonthlyOn26th = SummaryFrequencyCodeType.new("MonthlyOn26th")
  MonthlyOn27th = SummaryFrequencyCodeType.new("MonthlyOn27th")
  MonthlyOn28th = SummaryFrequencyCodeType.new("MonthlyOn28th")
  MonthlyOn29th = SummaryFrequencyCodeType.new("MonthlyOn29th")
  MonthlyOn2nd = SummaryFrequencyCodeType.new("MonthlyOn2nd")
  MonthlyOn30th = SummaryFrequencyCodeType.new("MonthlyOn30th")
  MonthlyOn31st = SummaryFrequencyCodeType.new("MonthlyOn31st")
  MonthlyOn3rd = SummaryFrequencyCodeType.new("MonthlyOn3rd")
  MonthlyOn4th = SummaryFrequencyCodeType.new("MonthlyOn4th")
  MonthlyOn5th = SummaryFrequencyCodeType.new("MonthlyOn5th")
  MonthlyOn6th = SummaryFrequencyCodeType.new("MonthlyOn6th")
  MonthlyOn7th = SummaryFrequencyCodeType.new("MonthlyOn7th")
  MonthlyOn8th = SummaryFrequencyCodeType.new("MonthlyOn8th")
  MonthlyOn9th = SummaryFrequencyCodeType.new("MonthlyOn9th")
end

# {urn:ebay:apis:eBLBaseComponents}SummaryWindowPeriodCodeType
class SummaryWindowPeriodCodeType < ::String
  CurrentMonth = SummaryWindowPeriodCodeType.new("CurrentMonth")
  CurrentWeek = SummaryWindowPeriodCodeType.new("CurrentWeek")
  CustomCode = SummaryWindowPeriodCodeType.new("CustomCode")
  Last24Hours = SummaryWindowPeriodCodeType.new("Last24Hours")
  Last31Days = SummaryWindowPeriodCodeType.new("Last31Days")
  Last60Days = SummaryWindowPeriodCodeType.new("Last60Days")
  Last7Days = SummaryWindowPeriodCodeType.new("Last7Days")
  LastMonth = SummaryWindowPeriodCodeType.new("LastMonth")
  LastWeek = SummaryWindowPeriodCodeType.new("LastWeek")
end

# {urn:ebay:apis:eBLBaseComponents}TaskStatusCodeType
class TaskStatusCodeType < ::String
  Complete = TaskStatusCodeType.new("Complete")
  CustomCode = TaskStatusCodeType.new("CustomCode")
  Failed = TaskStatusCodeType.new("Failed")
  InProgress = TaskStatusCodeType.new("InProgress")
  Pending = TaskStatusCodeType.new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}TicketEventTypeCodeType
class TicketEventTypeCodeType < ::String
  Any = TicketEventTypeCodeType.new("Any")
  CustomCode = TicketEventTypeCodeType.new("CustomCode")
  DE_ComedyAndKabarett = TicketEventTypeCodeType.new("DE_ComedyAndKabarett")
  DE_FreizeitAndEvents = TicketEventTypeCodeType.new("DE_FreizeitAndEvents")
  DE_KonzerteAndFestivals = TicketEventTypeCodeType.new("DE_KonzerteAndFestivals")
  DE_KulturAndKlassik = TicketEventTypeCodeType.new("DE_KulturAndKlassik")
  DE_MusicalsAndShows = TicketEventTypeCodeType.new("DE_MusicalsAndShows")
  DE_Sonstige = TicketEventTypeCodeType.new("DE_Sonstige")
  DE_Sportveranstaltungen = TicketEventTypeCodeType.new("DE_Sportveranstaltungen")
  UK_AmusementParks = TicketEventTypeCodeType.new("UK_AmusementParks")
  UK_Comedy = TicketEventTypeCodeType.new("UK_Comedy")
  UK_ConcertsAndGigs = TicketEventTypeCodeType.new("UK_ConcertsAndGigs")
  UK_ConferencesAndSeminars = TicketEventTypeCodeType.new("UK_ConferencesAndSeminars")
  UK_ExhibitionsAndShows = TicketEventTypeCodeType.new("UK_ExhibitionsAndShows")
  UK_Experiences = TicketEventTypeCodeType.new("UK_Experiences")
  UK_Other = TicketEventTypeCodeType.new("UK_Other")
  UK_SportingEvents = TicketEventTypeCodeType.new("UK_SportingEvents")
  UK_TheatreCinemaAndCircus = TicketEventTypeCodeType.new("UK_TheatreCinemaAndCircus")
  US_Concerts = TicketEventTypeCodeType.new("US_Concerts")
  US_Movies = TicketEventTypeCodeType.new("US_Movies")
  US_Other = TicketEventTypeCodeType.new("US_Other")
  US_SportingEvents = TicketEventTypeCodeType.new("US_SportingEvents")
  US_Theater = TicketEventTypeCodeType.new("US_Theater")
end

# {urn:ebay:apis:eBLBaseComponents}TokenReturnMethodCodeType
class TokenReturnMethodCodeType < ::String
  CustomCode = TokenReturnMethodCodeType.new("CustomCode")
  FetchToken = TokenReturnMethodCodeType.new("FetchToken")
  Redirect = TokenReturnMethodCodeType.new("Redirect")
end

# {urn:ebay:apis:eBLBaseComponents}TokenStatusCodeType
class TokenStatusCodeType < ::String
  Active = TokenStatusCodeType.new("Active")
  CustomCode = TokenStatusCodeType.new("CustomCode")
  Expired = TokenStatusCodeType.new("Expired")
  Invalid = TokenStatusCodeType.new("Invalid")
  RevokedByApp = TokenStatusCodeType.new("RevokedByApp")
  RevokedByUser = TokenStatusCodeType.new("RevokedByUser")
  RevokedByeBay = TokenStatusCodeType.new("RevokedByeBay")
end

# {urn:ebay:apis:eBLBaseComponents}TradingRoleCodeType
class TradingRoleCodeType < ::String
  Buyer = TradingRoleCodeType.new("Buyer")
  CustomCode = TradingRoleCodeType.new("CustomCode")
  Seller = TradingRoleCodeType.new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}TransactionPlatformCodeType
class TransactionPlatformCodeType < ::String
  CustomCode = TransactionPlatformCodeType.new("CustomCode")
  EBay = TransactionPlatformCodeType.new("eBay")
  Express = TransactionPlatformCodeType.new("Express")
  Half = TransactionPlatformCodeType.new("Half")
  Shopping = TransactionPlatformCodeType.new("Shopping")
end

# {urn:ebay:apis:eBLBaseComponents}TransactionPlatformType
class TransactionPlatformType < ::String
  EBay = TransactionPlatformType.new("eBay")
  Express = TransactionPlatformType.new("Express")
end

# {urn:ebay:apis:eBLBaseComponents}UPSRateOptionCodeType
class UPSRateOptionCodeType < ::String
  CustomCode = UPSRateOptionCodeType.new("CustomCode")
  UPSDailyRates = UPSRateOptionCodeType.new("UPSDailyRates")
  UPSOnDemandRates = UPSRateOptionCodeType.new("UPSOnDemandRates")
end

# {urn:ebay:apis:eBLBaseComponents}URLTypeCodeType
class URLTypeCodeType < ::String
  CustomCode = URLTypeCodeType.new("CustomCode")
  EBayStoreURL = URLTypeCodeType.new("eBayStoreURL")
  LargeLogoURL = URLTypeCodeType.new("LargeLogoURL")
  MediumLogoURL = URLTypeCodeType.new("MediumLogoURL")
  MyeBayBiddingURL = URLTypeCodeType.new("MyeBayBiddingURL")
  MyeBayNotWonURL = URLTypeCodeType.new("MyeBayNotWonURL")
  MyeBayURL = URLTypeCodeType.new("MyeBayURL")
  MyeBayWatchingURL = URLTypeCodeType.new("MyeBayWatchingURL")
  MyeBayWonURL = URLTypeCodeType.new("MyeBayWonURL")
  SmallLogoURL = URLTypeCodeType.new("SmallLogoURL")
  ViewItemURL = URLTypeCodeType.new("ViewItemURL")
  ViewUserURL = URLTypeCodeType.new("ViewUserURL")
end

# {urn:ebay:apis:eBLBaseComponents}UnitCodeType
class UnitCodeType < ::String
  Cm = UnitCodeType.new("cm")
  CustomCode = UnitCodeType.new("CustomCode")
  Ft = UnitCodeType.new("ft")
  Gm = UnitCodeType.new("gm")
  Inches = UnitCodeType.new("inches")
  Kg = UnitCodeType.new("kg")
  Lbs = UnitCodeType.new("lbs")
  Mm = UnitCodeType.new("mm")
  Oz = UnitCodeType.new("oz")
end

# {urn:ebay:apis:eBLBaseComponents}UserStatusCodeType
class UserStatusCodeType < ::String
  AccountOnHold = UserStatusCodeType.new("AccountOnHold")
  Confirmed = UserStatusCodeType.new("Confirmed")
  CreditCardVerify = UserStatusCodeType.new("CreditCardVerify")
  CreditCardVerifyHalfOptIn = UserStatusCodeType.new("CreditCardVerifyHalfOptIn")
  CreditCardVerifyPassport = UserStatusCodeType.new("CreditCardVerifyPassport")
  CustomCode = UserStatusCodeType.new("CustomCode")
  Deleted = UserStatusCodeType.new("Deleted")
  Ghost = UserStatusCodeType.new("Ghost")
  Guest = UserStatusCodeType.new("Guest")
  InMaintenance = UserStatusCodeType.new("InMaintenance")
  Merged = UserStatusCodeType.new("Merged")
  RegistrationCodeMailOut = UserStatusCodeType.new("RegistrationCodeMailOut")
  Suspended = UserStatusCodeType.new("Suspended")
  TermPending = UserStatusCodeType.new("TermPending")
  Unconfirmed = UserStatusCodeType.new("Unconfirmed")
  UnconfirmedExpress = UserStatusCodeType.new("UnconfirmedExpress")
  UnconfirmedHalfOptIn = UserStatusCodeType.new("UnconfirmedHalfOptIn")
  UnconfirmedPassport = UserStatusCodeType.new("UnconfirmedPassport")
  Unknown = UserStatusCodeType.new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}VATStatusCodeType
class VATStatusCodeType < ::String
  CustomCode = VATStatusCodeType.new("CustomCode")
  NoVATTax = VATStatusCodeType.new("NoVATTax")
  VATExempt = VATStatusCodeType.new("VATExempt")
  VATTax = VATStatusCodeType.new("VATTax")
end

# {urn:ebay:apis:eBLBaseComponents}VeROItemStatusCodeType
class VeROItemStatusCodeType < ::String
  ClarificationRequired = VeROItemStatusCodeType.new("ClarificationRequired")
  CustomCode = VeROItemStatusCodeType.new("CustomCode")
  Received = VeROItemStatusCodeType.new("Received")
  Removed = VeROItemStatusCodeType.new("Removed")
  SubmissionFailed = VeROItemStatusCodeType.new("SubmissionFailed")
  Submitted = VeROItemStatusCodeType.new("Submitted")
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportPacketStatusCodeType
class VeROReportPacketStatusCodeType < ::String
  CustomCode = VeROReportPacketStatusCodeType.new("CustomCode")
  InProcess = VeROReportPacketStatusCodeType.new("InProcess")
  Processed = VeROReportPacketStatusCodeType.new("Processed")
  Received = VeROReportPacketStatusCodeType.new("Received")
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyDurationOptionsCodeType
class WarrantyDurationOptionsCodeType < ::String
  CustomCode = WarrantyDurationOptionsCodeType.new("CustomCode")
  Months_1 = WarrantyDurationOptionsCodeType.new("Months_1")
  Months_3 = WarrantyDurationOptionsCodeType.new("Months_3")
  Months_6 = WarrantyDurationOptionsCodeType.new("Months_6")
  Years_1 = WarrantyDurationOptionsCodeType.new("Years_1")
  Years_2 = WarrantyDurationOptionsCodeType.new("Years_2")
  Years_3 = WarrantyDurationOptionsCodeType.new("Years_3")
  Years_MoreThan3 = WarrantyDurationOptionsCodeType.new("Years_MoreThan3")
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyOfferedCodeType
class WarrantyOfferedCodeType < ::String
  CustomCode = WarrantyOfferedCodeType.new("CustomCode")
  WarrantyOffered = WarrantyOfferedCodeType.new("WarrantyOffered")
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyTypeOptionsCodeType
class WarrantyTypeOptionsCodeType < ::String
  CustomCode = WarrantyTypeOptionsCodeType.new("CustomCode")
  DealerWarranty = WarrantyTypeOptionsCodeType.new("DealerWarranty")
  ManufacturerWarranty = WarrantyTypeOptionsCodeType.new("ManufacturerWarranty")
  ReplacementWarranty = WarrantyTypeOptionsCodeType.new("ReplacementWarranty")
end

# {urn:ebay:apis:eBLBaseComponents}WirelessCarrierIDCodeType
class WirelessCarrierIDCodeType < ::String
  ATT = WirelessCarrierIDCodeType.new("ATT")
  Alltel = WirelessCarrierIDCodeType.new("Alltel")
  Amena = WirelessCarrierIDCodeType.new("Amena")
  CincinnatiBell = WirelessCarrierIDCodeType.new("CincinnatiBell")
  Cingular = WirelessCarrierIDCodeType.new("Cingular")
  CustomCode = WirelessCarrierIDCodeType.new("CustomCode")
  Dobson = WirelessCarrierIDCodeType.new("Dobson")
  Leap = WirelessCarrierIDCodeType.new("Leap")
  Movistar = WirelessCarrierIDCodeType.new("Movistar")
  Nextel = WirelessCarrierIDCodeType.new("Nextel")
  Sprint = WirelessCarrierIDCodeType.new("Sprint")
  TMobile = WirelessCarrierIDCodeType.new("TMobile")
  USCellular = WirelessCarrierIDCodeType.new("USCellular")
  Verizon = WirelessCarrierIDCodeType.new("Verizon")
  Vodafone = WirelessCarrierIDCodeType.new("Vodafone")
end
